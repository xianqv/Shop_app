org.codehaus.jackson.impl.JsonParserMinimalBase
    public abstract java.lang.String getCurrentName()
    public abstract void close()
    public abstract boolean isClosed()
    public abstract org.codehaus.jackson.JsonStreamContext getParsingContext()
    public abstract char[] getTextCharacters()
    public abstract boolean hasTextCharacters()
    public abstract int getTextLength()
    public abstract int getTextOffset()
    public abstract byte[] getBinaryValue(org.codehaus.jackson.Base64Variant)
    public boolean getValueAsBoolean(boolean)
    public double getValueAsDouble(double)
    protected static final int INT_TAB
    protected static final int INT_LF
    protected static final int INT_CR
    protected static final int INT_SPACE
    protected static final int INT_LBRACKET
    protected static final int INT_RBRACKET
    protected static final int INT_LCURLY
    protected static final int INT_RCURLY
    protected static final int INT_QUOTE
    protected static final int INT_BACKSLASH
    protected static final int INT_SLASH
    protected static final int INT_COLON
    protected static final int INT_COMMA
    protected static final int INT_ASTERISK
    protected static final int INT_APOSTROPHE
    protected static final int INT_b
    protected static final int INT_f
    protected static final int INT_n
    protected static final int INT_r
    protected static final int INT_t
    protected static final int INT_u
org.codehaus.jackson.map.deser.SettableBeanProperty$SetterlessProperty
    public java.lang.annotation.Annotation getAnnotation(java.lang.Class)
com.facebook.imagepipeline.cache.BufferedDiskCache$5
com.kaopiz.kprogresshud.R$id
    private void <init>()
com.squareup.picasso.Utils$ActivityManagerHoneycomb
    private void <init>()
com.facebook.imagepipeline.producers.BitmapMemoryCacheProducer
    static final java.lang.String PRODUCER_NAME
    static final java.lang.String VALUE_FOUND
okio.ForwardingSink
org.codehaus.jackson.map.introspect.VisibilityChecker$Std
    public void <init>(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    public org.codehaus.jackson.map.introspect.VisibilityChecker$Std with(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    public org.codehaus.jackson.map.introspect.VisibilityChecker$Std withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    public synthetic bridge org.codehaus.jackson.map.introspect.VisibilityChecker withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    public synthetic bridge org.codehaus.jackson.map.introspect.VisibilityChecker with(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
com.facebook.common.memory.MemoryTrimmableRegistry
    public abstract void unregisterMemoryTrimmable(com.facebook.common.memory.MemoryTrimmable)
org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateTimeDeserializer
org.codehaus.jackson.map.util.BeanUtil
    public void <init>()
org.codehaus.jackson.map.introspect.AnnotationMap
    public int size()
org.codehaus.jackson.map.ser.JdkSerializers
okhttp3.internal.http.HttpEngine$NetworkInterceptorChain
    public okhttp3.Request request()
org.codehaus.jackson.Version
android.support.design.widget.CollapsingTextHelper
    void setCollapsedTextSize(float)
    float getExpandedTextSize()
    int getExpandedTextColor()
    private static final boolean DEBUG_DRAW
org.codehaus.jackson.map.ser.std.IterableSerializer
com.facebook.common.webp.WebpBitmapFactory
    public abstract android.graphics.Bitmap decodeStream(java.io.InputStream,android.graphics.Rect,android.graphics.BitmapFactory$Options)
    public abstract android.graphics.Bitmap decodeFile(java.lang.String,android.graphics.BitmapFactory$Options)
    public abstract android.graphics.Bitmap decodeByteArray(byte[],int,int,android.graphics.BitmapFactory$Options)
com.kaopiz.kprogresshud.R$color
    private void <init>()
org.codehaus.jackson.map.ser.std.StdArraySerializers$LongArraySerializer
    public org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)
    public void serializeContents(long[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
org.codehaus.jackson.map.JsonSerializable
    public abstract void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
okhttp3.internal.framed.FrameReader$Handler
    public abstract void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
com.facebook.imagepipeline.cache.BitmapMemoryCacheKey
    public java.lang.String getSourceUriString()
    public java.lang.String getPostprocessorName()
com.facebook.imagepipeline.image.CloseableBitmap
    public abstract android.graphics.Bitmap getUnderlyingBitmap()
org.codehaus.jackson.map.type.HierarchicType
    public final org.codehaus.jackson.map.type.HierarchicType getSubType()
com.cjj.MaterialProgressDrawable$Ring
    public float getRotation()
    public float getInsets()
okhttp3.Connection
    public abstract java.net.Socket socket()
    public abstract okhttp3.Handshake handshake()
    public abstract okhttp3.Protocol protocol()
com.facebook.imagepipeline.memory.BasePool$InvalidValueException
org.codehaus.jackson.map.introspect.AnnotatedMethodMap
    public org.codehaus.jackson.map.introspect.AnnotatedMethod remove(org.codehaus.jackson.map.introspect.AnnotatedMethod)
    public int size()
com.facebook.imagepipeline.producers.SwallowResultProducer
org.codehaus.jackson.map.jsontype.impl.TypeDeserializerBase
    protected void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty)
    public abstract org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion()
    public org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver()
    public java.lang.Class getDefaultImpl()
android.support.design.R$id
    private void <init>()
butterknife.BindInt
    public abstract int value()
com.nineoldandroids.util.ReflectiveProperty
org.codehaus.jackson.map.MapperConfig$Impl
    protected void <init>(org.codehaus.jackson.map.MapperConfig$Impl)
    protected void <init>(org.codehaus.jackson.map.MapperConfig$Impl,int)
    public varargs abstract org.codehaus.jackson.map.MapperConfig$Impl with(org.codehaus.jackson.map.MapperConfig$ConfigFeature[])
    public varargs abstract org.codehaus.jackson.map.MapperConfig$Impl without(org.codehaus.jackson.map.MapperConfig$ConfigFeature[])
    public boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature)
    public void enable(org.codehaus.jackson.map.MapperConfig$ConfigFeature)
    public void disable(org.codehaus.jackson.map.MapperConfig$ConfigFeature)
    public void set(org.codehaus.jackson.map.MapperConfig$ConfigFeature,boolean)
com.nineoldandroids.animation.AnimatorSet$Dependency
okhttp3.RequestBody$1
com.example.administrator.igoushop_app_test.R$dimen
com.facebook.imagepipeline.producers.ThreadHandoffProducer
    protected static final java.lang.String PRODUCER_NAME
okhttp3.RealCall$AsyncCall
    okhttp3.Request request()
    java.lang.Object tag()
    void cancel()
    okhttp3.RealCall get()
com.cjj.R$integer
com.lidroid.xutils.db.sqlite.ForeignLazyLoader
com.facebook.imagepipeline.producers.DiskCacheProducer
    static final java.lang.String PRODUCER_NAME
    static final java.lang.String VALUE_FOUND
com.lidroid.xutils.exception.DbException
android.support.annotation.NonNull
org.codehaus.jackson.map.introspect.AnnotatedWithParams
    public final org.codehaus.jackson.map.introspect.AnnotationMap getParameterAnnotations(int)
    public abstract int getParameterCount()
    public abstract java.lang.Class getParameterClass(int)
    public final org.codehaus.jackson.type.JavaType resolveParameterType(int,org.codehaus.jackson.map.type.TypeBindings)
    public final int getAnnotationCount()
com.lidroid.xutils.http.client.HttpRequest$HttpMethod
com.lidroid.xutils.view.annotation.event.OnStopTrackingTouch
com.daimajia.slider.library.R$string
bolts.WebViewAppLinkResolver$2
    void <init>(bolts.WebViewAppLinkResolver,bolts.Capture,android.net.Uri,bolts.Capture)
    public bolts.Task then(bolts.Task)
    public synthetic bridge java.lang.Object then(bolts.Task)
    final synthetic bolts.Capture val$contentType
    final synthetic android.net.Uri val$url
    final synthetic bolts.Capture val$content
    final synthetic bolts.WebViewAppLinkResolver this$0
com.cjj.R$color
android.support.graphics.drawable.VectorDrawableCompat$VGroup
    public float getRotation()
    public void setRotation(float)
    public float getPivotX()
    public void setPivotX(float)
    public float getPivotY()
    public void setPivotY(float)
    public float getScaleX()
    public void setScaleX(float)
    public float getScaleY()
    public void setScaleY(float)
    public float getTranslateX()
    public void setTranslateX(float)
    public float getTranslateY()
    public void setTranslateY(float)
org.codehaus.jackson.map.ser.BeanSerializerBuilder
com.nineoldandroids.animation.Keyframe
    public static com.nineoldandroids.animation.Keyframe ofObject(float,java.lang.Object)
    public static com.nineoldandroids.animation.Keyframe ofObject(float)
    public void setFraction(float)
    public java.lang.Class getType()
com.facebook.common.memory.NoOpMemoryTrimmableRegistry
    public void unregisterMemoryTrimmable(com.facebook.common.memory.MemoryTrimmable)
okhttp3.OkHttpClient
    synthetic void <init>(okhttp3.OkHttpClient$Builder,okhttp3.OkHttpClient$1)
    public okhttp3.Cache cache()
    public okhttp3.OkHttpClient$Builder newBuilder()
com.google.gson.internal.LinkedHashTreeMap$Node
org.codehaus.jackson.map.introspect.Annotated
    public abstract org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)
    public final org.codehaus.jackson.map.introspect.Annotated withFallBackAnnotationsFrom(org.codehaus.jackson.map.introspect.Annotated)
    protected abstract int getModifiers()
    public final boolean isPublic()
    public org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings)
    protected abstract org.codehaus.jackson.map.introspect.AnnotationMap getAllAnnotations()
org.codehaus.jackson.annotate.JsonRawValue
org.codehaus.jackson.impl.DefaultPrettyPrinter
com.google.gson.JsonSerializationContext
    public abstract com.google.gson.JsonElement serialize(java.lang.Object)
    public abstract com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type)
org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeSerializer
com.nineoldandroids.animation.KeyframeSet
    public static varargs com.nineoldandroids.animation.KeyframeSet ofKeyframe(com.nineoldandroids.animation.Keyframe[])
    public static varargs com.nineoldandroids.animation.KeyframeSet ofObject(java.lang.Object[])
    public synthetic bridge java.lang.Object clone()
org.codehaus.jackson.map.MapperConfig
    protected void <init>(org.codehaus.jackson.map.MapperConfig)
    public abstract void fromAnnotations(java.lang.Class)
    public abstract org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    public abstract org.codehaus.jackson.map.MapperConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)
    public abstract org.codehaus.jackson.map.MapperConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public abstract org.codehaus.jackson.map.MapperConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)
    public abstract org.codehaus.jackson.map.MapperConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    public abstract org.codehaus.jackson.map.MapperConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)
    public abstract org.codehaus.jackson.map.MapperConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    public abstract org.codehaus.jackson.map.MapperConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)
    public abstract org.codehaus.jackson.map.MapperConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)
    public abstract org.codehaus.jackson.map.MapperConfig withDateFormat(java.text.DateFormat)
    public abstract org.codehaus.jackson.map.MapperConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)
    public abstract org.codehaus.jackson.map.MapperConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public abstract org.codehaus.jackson.map.MapperConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public abstract boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature)
    public final void insertAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public final void appendAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public final void setMixInAnnotations(java.util.Map)
    public final void addMixInAnnotations(java.lang.Class,java.lang.Class)
    public final int mixInCount()
    public final org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)
    public org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(java.lang.Class)
    public abstract org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(org.codehaus.jackson.type.JavaType)
    public final void setAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public void setDateFormat(java.text.DateFormat)
org.codehaus.jackson.map.Serializers$None
com.facebook.common.internal.AndroidPredicates
org.codehaus.jackson.map.ser.std.StdKeySerializers$CalendarKeySerializer
com.lidroid.xutils.db.converter.DateColumnConverter
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$SerializerAndMapResult
okhttp3.internal.DiskLruCache$Editor$1
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$NameValuesHolder
org.codehaus.jackson.util.DefaultPrettyPrinter$Lf2SpacesIndenter
com.example.administrator.igoushop_app_test.http.OKManager$2
com.facebook.imagepipeline.cache.CountingMemoryCache$CacheTrimStrategy
    public abstract double getTrimRatio(com.facebook.common.memory.MemoryTrimType)
org.codehaus.jackson.map.AnnotationIntrospector$Pair
okhttp3.internal.Internal
    public static void initializeInstanceForTests()
    public abstract void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String)
    public abstract void setCache(okhttp3.OkHttpClient$Builder,okhttp3.internal.InternalCache)
    public abstract okhttp3.HttpUrl getHttpUrlChecked(java.lang.String)
    public abstract void callEnqueue(okhttp3.Call,okhttp3.Callback,boolean)
    public abstract okhttp3.internal.http.StreamAllocation callEngineGetStreamAllocation(okhttp3.Call)
com.lidroid.xutils.task.PriorityAsyncTask
    public void <init>()
    private void postResultIfNotInvoked(java.lang.Object)
    private java.lang.Object postResult(java.lang.Object)
    public static void execute(java.lang.Runnable)
    public static void execute(java.lang.Runnable,com.lidroid.xutils.task.Priority)
    static synthetic java.util.concurrent.atomic.AtomicBoolean access$200(com.lidroid.xutils.task.PriorityAsyncTask)
    static synthetic java.lang.Object access$300(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object)
    static synthetic void access$400(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object)
    public com.lidroid.xutils.task.Priority getPriority()
    public void setPriority(com.lidroid.xutils.task.Priority)
    protected varargs abstract java.lang.Object doInBackground(java.lang.Object[])
    protected void onPreExecute()
    protected void onCancelled()
    public final boolean cancel(boolean)
    public boolean supportPause()
    public boolean supportResume()
    public boolean supportCancel()
    public void cancel()
    public boolean isPaused()
    public final java.lang.Object get()
    public final java.lang.Object get(long,java.util.concurrent.TimeUnit)
    public final varargs com.lidroid.xutils.task.PriorityAsyncTask execute(java.lang.Object[])
    public final varargs com.lidroid.xutils.task.PriorityAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[])
    protected final varargs void publishProgress(java.lang.Object[])
    private final com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable mWorker
    private final java.util.concurrent.FutureTask mFuture
    private volatile boolean mExecuteInvoked
    private final java.util.concurrent.atomic.AtomicBoolean mTaskInvoked
    private com.lidroid.xutils.task.Priority priority
    private static final int MESSAGE_POST_RESULT
    private static final int MESSAGE_POST_PROGRESS
org.codehaus.jackson.map.ser.StdSerializers$LongSerializer
    public void serialize(java.lang.Long,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
bolts.Task$10$1
com.squareup.picasso.Cache$1
    public void clear()
org.codehaus.jackson.map.ser.BeanSerializerModifier
    public void <init>()
    public java.util.List changeProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List)
    public java.util.List orderProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List)
    public org.codehaus.jackson.map.ser.BeanSerializerBuilder updateBuilder(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.ser.BeanSerializerBuilder)
    public org.codehaus.jackson.map.JsonSerializer modifySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.JsonSerializer)
android.support.annotation.Nullable
okhttp3.internal.DiskLruCache$2
org.codehaus.jackson.map.type.MapType
    private void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class)
    public org.codehaus.jackson.type.JavaType widenKey(java.lang.Class)
    public org.codehaus.jackson.map.type.MapType withContentValueHandler(java.lang.Object)
    public org.codehaus.jackson.map.type.MapType withKeyTypeHandler(java.lang.Object)
    public org.codehaus.jackson.map.type.MapType withKeyValueHandler(java.lang.Object)
    public synthetic bridge org.codehaus.jackson.map.type.MapLikeType withKeyValueHandler(java.lang.Object)
    public synthetic bridge org.codehaus.jackson.map.type.MapLikeType withKeyTypeHandler(java.lang.Object)
    public synthetic bridge org.codehaus.jackson.map.type.MapLikeType withContentValueHandler(java.lang.Object)
    public synthetic bridge org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object)
com.example.administrator.igoushop_app_test.http.OKManager$Func2
org.codehaus.jackson.format.MatchStrength
com.facebook.imagepipeline.request.BaseRepeatedPostProcessor
okhttp3.Headers
    private void <init>(java.lang.String[])
    public static varargs okhttp3.Headers of(java.lang.String[])
    public static okhttp3.Headers of(java.util.Map)
    public java.util.Set names()
    public java.util.Map toMultimap()
com.facebook.drawee.backends.pipeline.R
com.facebook.drawee.drawable.DrawableUtils
    public void <init>()
com.cjj.R$attr
com.facebook.imagepipeline.core.ImagePipeline$2
com.lidroid.xutils.cache.LruMemoryCache
okhttp3.internal.http.HttpEngine
    public okio.Sink getRequestBody()
    public okio.BufferedSink getBufferedRequestBody()
    public boolean hasResponse()
    public okhttp3.Request getRequest()
    public okhttp3.internal.http.HttpEngine recover(java.io.IOException)
    public void cancel()
    public static final int MAX_FOLLOW_UPS
okhttp3.internal.http.HttpStream
    public abstract void cancel()
    public static final int DISCARD_STREAM_TIMEOUT_MILLIS
org.codehaus.jackson.map.ser.std.DateSerializer
    public void serialize(java.util.Date,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
org.codehaus.jackson.map.ser.impl.JsonSerializerMap
com.lidroid.xutils.bitmap.callback.DefaultBitmapLoadCallBack
org.codehaus.jackson.map.type.TypeBase
    protected void <init>(java.lang.Class,int)
    protected static java.lang.StringBuilder _classSignature(java.lang.Class,java.lang.StringBuilder,boolean)
    public abstract java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder)
    public abstract java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)
    public void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
    public void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
com.lidroid.xutils.cache.LruDiskCache$Entry
android.support.annotation.StyleRes
com.facebook.common.internal.AndroidPredicates$2
bolts.Task$8
android.support.design.R$color
    private void <init>()
com.lidroid.xutils.db.converter.ShortColumnConverter
org.codehaus.jackson.map.ser.StdSerializers$SerializableSerializer
com.facebook.common.activitylistener.ActivityListenerManager
android.support.design.widget.StateListAnimator$Tuple
    int[] getSpecs()
    android.view.animation.Animation getAnimation()
com.squareup.picasso.Picasso
    public void cancelRequest(com.squareup.picasso.Target)
    public boolean isDebugging()
    public void setDebugging(boolean)
    public void setIndicatorsEnabled(boolean)
    public boolean areIndicatorsEnabled()
    public void setLoggingEnabled(boolean)
    public boolean isLoggingEnabled()
    public com.squareup.picasso.StatsSnapshot getSnapshot()
    public void shutdown()
    static final java.lang.String TAG
com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder
    public com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder setFrom(com.facebook.imagepipeline.common.ImageDecodeOptions)
    public com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder setMinDecodeIntervalMs(int)
    public com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder setBackgroundColor(int)
    public com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder setForceOldAnimationCode(boolean)
    public com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder setDecodePreviewFrame(boolean)
    public com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder setUseLastFrameForPreview(boolean)
    public com.facebook.imagepipeline.common.ImageDecodeOptionsBuilder setDecodeAllFrames(boolean)
com.squareup.picasso.ContactsPhotoBitmapHunter$ContactPhotoStreamIcs
    private void <init>()
com.facebook.common.util.SecureHashUtil
    public void <init>()
    public static java.lang.String makeSHA1Hash(java.lang.String)
    public static java.lang.String makeSHA1Hash(byte[])
    public static java.lang.String makeMD5Hash(java.lang.String)
    public static java.lang.String makeMD5Hash(byte[])
    public static java.lang.String convertToHex(byte[])
com.lidroid.xutils.BuildConfig
org.codehaus.jackson.map.ext.JodaSerializers$LocalDateTimeSerializer
com.daimajia.swipe.implments.SwipeItemRecyclerMangerImpl
    public void bindView(android.view.View,int)
    public void initialize(android.view.View,int)
    public void updateConvertView(android.view.View,int)
okio.GzipSource
    private static final byte FHCRC
    private static final byte FEXTRA
    private static final byte FNAME
    private static final byte FCOMMENT
    private static final byte SECTION_HEADER
    private static final byte SECTION_BODY
    private static final byte SECTION_TRAILER
    private static final byte SECTION_DONE
com.lidroid.xutils.view.annotation.event.OnGroupExpand
com.facebook.imagepipeline.request.ImageRequestBuilder
    public static com.facebook.imagepipeline.request.ImageRequestBuilder newBuilderWithResourceId(int)
    public static com.facebook.imagepipeline.request.ImageRequestBuilder fromRequest(com.facebook.imagepipeline.request.ImageRequest)
    public com.facebook.imagepipeline.request.ImageRequestBuilder setLowestPermittedRequestLevel(com.facebook.imagepipeline.request.ImageRequest$RequestLevel)
    public com.facebook.imagepipeline.request.ImageRequestBuilder setAutoRotateEnabled(boolean)
    public com.facebook.imagepipeline.request.ImageRequestBuilder setResizeOptions(com.facebook.imagepipeline.common.ResizeOptions)
    public com.facebook.imagepipeline.request.ImageRequestBuilder setImageDecodeOptions(com.facebook.imagepipeline.common.ImageDecodeOptions)
    public com.facebook.imagepipeline.request.ImageRequestBuilder setImageType(com.facebook.imagepipeline.request.ImageRequest$ImageType)
    public com.facebook.imagepipeline.request.ImageRequestBuilder setProgressiveRenderingEnabled(boolean)
    public com.facebook.imagepipeline.request.ImageRequestBuilder setLocalThumbnailPreviewsEnabled(boolean)
    public com.facebook.imagepipeline.request.ImageRequestBuilder setRequestPriority(com.facebook.imagepipeline.common.Priority)
    public com.facebook.imagepipeline.request.ImageRequestBuilder setPostprocessor(com.facebook.imagepipeline.request.Postprocessor)
org.codehaus.jackson.node.ContainerNode$NoStringsIterator
org.codehaus.jackson.map.ser.std.TimeZoneSerializer
org.codehaus.jackson.impl.Utf8StreamParser
okhttp3.ResponseBody
    public static okhttp3.ResponseBody create(okhttp3.MediaType,java.lang.String)
    public static okhttp3.ResponseBody create(okhttp3.MediaType,byte[])
    public static okhttp3.ResponseBody create(okhttp3.MediaType,long,okio.BufferedSource)
    public final java.io.InputStream byteStream()
    public final java.io.Reader charStream()
    private java.io.Reader reader
okhttp3.internal.http.Http1xStream
    public void cancel()
    public boolean isClosed()
    private static final int STATE_IDLE
    private static final int STATE_OPEN_REQUEST_BODY
    private static final int STATE_WRITING_REQUEST_BODY
    private static final int STATE_READ_RESPONSE_HEADERS
    private static final int STATE_OPEN_RESPONSE_BODY
    private static final int STATE_READING_RESPONSE_BODY
    private static final int STATE_CLOSED
bolts.Task$TaskCompletionSource
    public boolean trySetCancelled()
    public void setCancelled()
com.lidroid.xutils.http.callback.DefaultHttpRedirectHandler
org.codehaus.jackson.node.BinaryNode
    public void <init>(byte[],int,int)
    public static org.codehaus.jackson.node.BinaryNode valueOf(byte[],int,int)
    public org.codehaus.jackson.JsonToken asToken()
    public boolean isBinary()
    public byte[] getBinaryValue()
    public final void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
org.codehaus.jackson.io.MergedStream
com.lidroid.xutils.util.OtherUtils$1
com.lidroid.xutils.view.annotation.event.OnScroll
com.lidroid.xutils.task.PriorityAsyncTask$1
    void <init>(com.lidroid.xutils.task.PriorityAsyncTask)
    public java.lang.Object call()
    final synthetic com.lidroid.xutils.task.PriorityAsyncTask this$0
com.facebook.imagepipeline.R
com.lidroid.xutils.http.client.multipart.MIME
com.nineoldandroids.view.ViewPropertyAnimator
    public void <init>()
    public static com.nineoldandroids.view.ViewPropertyAnimator animate(android.view.View)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator setDuration(long)
    public abstract long getDuration()
    public abstract long getStartDelay()
    public abstract com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener)
    public abstract void start()
    public abstract void cancel()
    public abstract com.nineoldandroids.view.ViewPropertyAnimator x(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator xBy(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator y(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator yBy(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator rotation(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator rotationX(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator rotationY(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator translationX(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator translationY(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator scaleX(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator scaleY(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator alpha(float)
    public abstract com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float)
com.lidroid.xutils.db.converter.CharColumnConverter
org.codehaus.jackson.map.ext.JodaSerializers$DateMidnightSerializer
org.codehaus.jackson.map.module.SimpleSerializers
com.facebook.fbcore.BuildConfig
android.support.annotation.VisibleForTesting
org.codehaus.jackson.map.ext.CoreXMLDeserializers$DurationDeserializer
com.kaopiz.kprogresshud.R$layout
    private void <init>()
com.lidroid.xutils.util.LogUtils$CustomLogger
    public abstract void d(java.lang.String,java.lang.String)
    public abstract void d(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void e(java.lang.String,java.lang.String)
    public abstract void i(java.lang.String,java.lang.String)
    public abstract void i(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void v(java.lang.String,java.lang.String)
    public abstract void v(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void w(java.lang.String,java.lang.String)
    public abstract void w(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void w(java.lang.String,java.lang.Throwable)
    public abstract void wtf(java.lang.String,java.lang.String)
    public abstract void wtf(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void wtf(java.lang.String,java.lang.Throwable)
mehdi.sakout.dynamicbox.BuildConfig
org.codehaus.jackson.map.deser.std.BaseNodeDeserializer
    protected void _reportProblem(org.codehaus.jackson.JsonParser,java.lang.String)
org.codehaus.jackson.map.introspect.AnnotatedParameter
    public void addOrOverride(java.lang.annotation.Annotation)
    public java.lang.reflect.AnnotatedElement getAnnotated()
    public int getModifiers()
    public synthetic bridge org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)
okhttp3.internal.framed.Settings
    int getUploadBandwidth(int)
    int getDownloadBandwidth(int)
    boolean getEnablePush(boolean)
    int getRoundTripTime(int)
    int getCurrentCwnd(int)
    int getDownloadRetransRate(int)
    int getMaxHeaderListSize(int)
    int getClientCertificateVectorSize(int)
    boolean isFlowControlDisabled()
    static final int DEFAULT_INITIAL_WINDOW_SIZE
    static final int FLAG_CLEAR_PREVIOUSLY_PERSISTED_SETTINGS
    static final int PERSIST_VALUE
    static final int PERSISTED
    static final int UPLOAD_BANDWIDTH
    static final int HEADER_TABLE_SIZE
    static final int DOWNLOAD_BANDWIDTH
    static final int ENABLE_PUSH
    static final int ROUND_TRIP_TIME
    static final int MAX_CONCURRENT_STREAMS
    static final int CURRENT_CWND
    static final int MAX_FRAME_SIZE
    static final int DOWNLOAD_RETRANS_RATE
    static final int MAX_HEADER_LIST_SIZE
    static final int INITIAL_WINDOW_SIZE
    static final int CLIENT_CERTIFICATE_VECTOR_SIZE
    static final int FLOW_CONTROL_OPTIONS
    static final int COUNT
    static final int FLOW_CONTROL_OPTIONS_DISABLED
com.lidroid.xutils.cache.FileNameGenerator
okhttp3.Cache$CacheRequestImpl$1
org.codehaus.jackson.map.ser.ArraySerializers
org.codehaus.jackson.JsonParser$1
org.codehaus.jackson.map.ObjectMapper$1
com.facebook.imagepipeline.datasource.SettableDataSource
org.codehaus.jackson.map.annotate.JsonFilter
com.cjj.R$drawable
org.codehaus.jackson.node.LongNode
    public org.codehaus.jackson.JsonToken asToken()
    public org.codehaus.jackson.JsonParser$NumberType getNumberType()
    public boolean isIntegralNumber()
    public boolean isLong()
    public java.lang.Number getNumberValue()
    public int getIntValue()
    public long getLongValue()
    public double getDoubleValue()
    public java.math.BigDecimal getDecimalValue()
    public java.math.BigInteger getBigIntegerValue()
    public boolean asBoolean(boolean)
    public final void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
com.google.gson.TypeAdapter
    public final void toJson(java.io.Writer,java.lang.Object)
    public final java.lang.String toJson(java.lang.Object)
    public final java.lang.Object fromJson(java.io.Reader)
    public final java.lang.Object fromJson(java.lang.String)
    public final java.lang.Object fromJsonTree(com.google.gson.JsonElement)
org.codehaus.jackson.map.ser.StdKeySerializer
org.codehaus.jackson.map.deser.std.EnumMapDeserializer
    public void <init>(org.codehaus.jackson.map.util.EnumResolver,org.codehaus.jackson.map.JsonDeserializer)
com.cjj.R$array
    private void <init>()
com.lidroid.xutils.view.annotation.event.OnChildClick
butterknife.internal.ImmutableList
org.codehaus.jackson.map.JsonMappingException
    public static org.codehaus.jackson.map.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int)
    public java.util.List getPath()
    public void prependPath(java.lang.Object,int)
    static final int MAX_REFS_TO_LIST
com.facebook.drawee.generic.GenericDraweeHierarchyBuilder
    public static com.facebook.drawee.generic.GenericDraweeHierarchyBuilder newInstance(android.content.res.Resources)
    public com.facebook.drawee.generic.GenericDraweeHierarchyBuilder reset()
    public com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setPlaceholderImage(android.graphics.drawable.Drawable)
    public com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setRetryImage(android.graphics.drawable.Drawable)
    public com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setFailureImage(android.graphics.drawable.Drawable)
    public com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setProgressBarImage(android.graphics.drawable.Drawable)
    public com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setActualImageMatrix(android.graphics.Matrix)
    public com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setActualImageFocusPoint(android.graphics.PointF)
    public com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setActualImageColorFilter(android.graphics.ColorFilter)
    public com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setBackgrounds(java.util.List)
    public com.facebook.drawee.generic.GenericDraweeHierarchyBuilder setOverlays(java.util.List)
    public static final int DEFAULT_FADE_DURATION
org.codehaus.jackson.map.deser.UntypedObjectDeserializer
org.codehaus.jackson.JsonEncoding
android.support.annotation.UiThread
com.google.gson.internal.$Gson$Types
    private void <init>()
com.facebook.drawee.R$styleable
    private void <init>()
android.support.annotation.IntegerRes
com.example.administrator.igoushop_app_test.R$drawable
org.codehaus.jackson.sym.Name2
com.lidroid.xutils.util.MimeTypeUtils
org.codehaus.jackson.map.deser.ThrowableDeserializer
org.codehaus.jackson.map.jsontype.impl.StdSubtypeResolver
    public varargs void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[])
    public varargs void registerSubtypes(java.lang.Class[])
org.codehaus.jackson.impl.Utf8StreamParser$1
org.codehaus.jackson.io.OutputDecorator
com.facebook.imagepipeline.producers.LocalContentUriFetchProducer
    static final java.lang.String PRODUCER_NAME
    private static final float ACCEPTABLE_REQUESTED_TO_ACTUAL_SIZE_RATIO
    private static final int NO_THUMBNAIL
com.squareup.picasso.TargetAction
okhttp3.internal.http.RequestException
    public void <init>(java.io.IOException)
    public synthetic bridge java.lang.Throwable getCause()
org.codehaus.jackson.map.ser.StdSerializers$StringSerializer
com.lidroid.xutils.cache.LruDiskCache$Editor
com.google.gson.internal.bind.JsonTreeReader
    public void <init>(com.google.gson.JsonElement)
org.codehaus.jackson.map.ser.std.StdArraySerializers$FloatArraySerializer
    public org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)
    public void serializeContents(float[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
com.facebook.imagepipeline.image.EncodedImage
    public void setStreamSize(int)
    public synchronized com.facebook.common.references.SharedReference getUnderlyingReferenceTestOnly()
    public static final int UNKNOWN_ROTATION_ANGLE
    public static final int UNKNOWN_WIDTH
    public static final int UNKNOWN_HEIGHT
    public static final int UNKNOWN_STREAM_SIZE
    public static final int DEFAULT_SAMPLE_SIZE
okhttp3.OkHttpClient$Builder
    void <init>(okhttp3.OkHttpClient)
    public okhttp3.OkHttpClient$Builder connectTimeout(long,java.util.concurrent.TimeUnit)
    public okhttp3.OkHttpClient$Builder readTimeout(long,java.util.concurrent.TimeUnit)
    public okhttp3.OkHttpClient$Builder writeTimeout(long,java.util.concurrent.TimeUnit)
    public okhttp3.OkHttpClient$Builder proxy(java.net.Proxy)
    public okhttp3.OkHttpClient$Builder proxySelector(java.net.ProxySelector)
    public okhttp3.OkHttpClient$Builder cookieJar(okhttp3.CookieJar)
    void setInternalCache(okhttp3.internal.InternalCache)
    public okhttp3.OkHttpClient$Builder cache(okhttp3.Cache)
    public okhttp3.OkHttpClient$Builder dns(okhttp3.Dns)
    public okhttp3.OkHttpClient$Builder socketFactory(javax.net.SocketFactory)
    public okhttp3.OkHttpClient$Builder sslSocketFactory(javax.net.ssl.SSLSocketFactory)
    public okhttp3.OkHttpClient$Builder hostnameVerifier(javax.net.ssl.HostnameVerifier)
    public okhttp3.OkHttpClient$Builder certificatePinner(okhttp3.CertificatePinner)
    public okhttp3.OkHttpClient$Builder authenticator(okhttp3.Authenticator)
    public okhttp3.OkHttpClient$Builder proxyAuthenticator(okhttp3.Authenticator)
    public okhttp3.OkHttpClient$Builder connectionPool(okhttp3.ConnectionPool)
    public okhttp3.OkHttpClient$Builder followSslRedirects(boolean)
    public okhttp3.OkHttpClient$Builder followRedirects(boolean)
    public okhttp3.OkHttpClient$Builder retryOnConnectionFailure(boolean)
    public okhttp3.OkHttpClient$Builder dispatcher(okhttp3.Dispatcher)
    public okhttp3.OkHttpClient$Builder protocols(java.util.List)
    public okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List)
    public java.util.List interceptors()
    public okhttp3.OkHttpClient$Builder addInterceptor(okhttp3.Interceptor)
    public java.util.List networkInterceptors()
    public okhttp3.OkHttpClient$Builder addNetworkInterceptor(okhttp3.Interceptor)
    public okhttp3.OkHttpClient build()
com.facebook.drawee.drawable.Rounded
    public abstract boolean isCircle()
    public abstract void setRadius(float)
    public abstract float[] getRadii()
    public abstract int getBorderColor()
    public abstract float getBorderWidth()
    public abstract float getPadding()
com.lidroid.xutils.bitmap.core.BitmapDecoder
org.codehaus.jackson.node.JsonNodeFactory
    public org.codehaus.jackson.node.NumericNode numberNode(byte)
    public org.codehaus.jackson.node.ValueNode numberNode(java.lang.Byte)
    public org.codehaus.jackson.node.NumericNode numberNode(short)
    public org.codehaus.jackson.node.ValueNode numberNode(java.lang.Short)
    public org.codehaus.jackson.node.ValueNode numberNode(java.lang.Integer)
    public org.codehaus.jackson.node.ValueNode numberNode(java.lang.Long)
    public org.codehaus.jackson.node.NumericNode numberNode(float)
    public org.codehaus.jackson.node.ValueNode numberNode(java.lang.Float)
    public org.codehaus.jackson.node.ValueNode numberNode(java.lang.Double)
    public org.codehaus.jackson.node.BinaryNode binaryNode(byte[],int,int)
com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer$RemoveImageTransformMetaDataConsumer
com.example.administrator.igoushop_app_test.pojos.Brand
    public void setId(java.lang.Integer)
    public void setName(java.lang.String)
    public void setImgUrl(java.lang.String)
    public int getIsbig()
    public void setIsbig(int)
    public void setProducts(java.util.Set)
    private int isbig
com.nineoldandroids.view.ViewHelper
    private void <init>()
    public static float getAlpha(android.view.View)
    public static float getPivotX(android.view.View)
    public static float getPivotY(android.view.View)
    public static float getRotation(android.view.View)
    public static float getRotationX(android.view.View)
    public static float getRotationY(android.view.View)
    public static float getScaleX(android.view.View)
    public static float getScaleY(android.view.View)
    public static float getScrollX(android.view.View)
    public static void setScrollX(android.view.View,int)
    public static float getScrollY(android.view.View)
    public static void setScrollY(android.view.View,int)
    public static float getTranslationX(android.view.View)
    public static float getTranslationY(android.view.View)
    public static float getX(android.view.View)
    public static void setX(android.view.View,float)
    public static void setY(android.view.View,float)
com.facebook.drawee.view.DraweeHolder
    private void setActivityStarted(boolean)
    static synthetic void access$000(com.facebook.drawee.view.DraweeHolder,boolean)
bolts.WebViewAppLinkResolver
com.lidroid.xutils.DbUtils$FindTempCache
com.example.administrator.igoushop_app_test.R$string
com.facebook.imagepipeline.datasource.ProducerToDataSourceAdapter
org.codehaus.jackson.map.deser.std.EnumSetDeserializer
    public void <init>(org.codehaus.jackson.map.util.EnumResolver)
com.nineoldandroids.animation.TimeAnimator$TimeListener
com.lidroid.xutils.http.callback.RequestCallBack
org.codehaus.jackson.map.ser.std.StdKeySerializers$StringKeySerializer
org.codehaus.jackson.map.DeserializationConfig
    protected void <init>(org.codehaus.jackson.map.DeserializationConfig)
    protected void <init>(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.node.JsonNodeFactory)
    protected void <init>(org.codehaus.jackson.map.DeserializationConfig,int)
    public org.codehaus.jackson.map.DeserializationConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)
    public org.codehaus.jackson.map.DeserializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public org.codehaus.jackson.map.DeserializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)
    public org.codehaus.jackson.map.DeserializationConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    public org.codehaus.jackson.map.DeserializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)
    public org.codehaus.jackson.map.DeserializationConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    public org.codehaus.jackson.map.DeserializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)
    public org.codehaus.jackson.map.DeserializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)
    public org.codehaus.jackson.map.DeserializationConfig withDateFormat(java.text.DateFormat)
    public org.codehaus.jackson.map.DeserializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)
    public org.codehaus.jackson.map.DeserializationConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public org.codehaus.jackson.map.DeserializationConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public org.codehaus.jackson.map.DeserializationConfig withNodeFactory(org.codehaus.jackson.node.JsonNodeFactory)
    public varargs org.codehaus.jackson.map.DeserializationConfig with(org.codehaus.jackson.map.DeserializationConfig$Feature[])
    public varargs org.codehaus.jackson.map.DeserializationConfig without(org.codehaus.jackson.map.DeserializationConfig$Feature[])
    public void fromAnnotations(java.lang.Class)
    public org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(org.codehaus.jackson.type.JavaType)
    public void enable(org.codehaus.jackson.map.DeserializationConfig$Feature)
    public void disable(org.codehaus.jackson.map.DeserializationConfig$Feature)
    public void set(org.codehaus.jackson.map.DeserializationConfig$Feature,boolean)
    public void addHandler(org.codehaus.jackson.map.DeserializationProblemHandler)
    public void clearHandlers()
    public synthetic bridge void set(org.codehaus.jackson.map.MapperConfig$ConfigFeature,boolean)
    public synthetic bridge void disable(org.codehaus.jackson.map.MapperConfig$ConfigFeature)
    public synthetic bridge void enable(org.codehaus.jackson.map.MapperConfig$ConfigFeature)
    public synthetic bridge boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig$Impl without(org.codehaus.jackson.map.MapperConfig$ConfigFeature[])
    public synthetic bridge org.codehaus.jackson.map.MapperConfig$Impl with(org.codehaus.jackson.map.MapperConfig$ConfigFeature[])
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withDateFormat(java.text.DateFormat)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)
org.codehaus.jackson.map.deser.CollectionDeserializer
com.lidroid.xutils.http.client.multipart.content.StringBody
com.lidroid.xutils.db.table.ColumnUtils
com.facebook.common.file.FileTree
    public void <init>()
org.codehaus.jackson.map.type.TypeBindings
    public org.codehaus.jackson.type.JavaType resolveType(java.lang.Class)
    public int getBindingCount()
com.facebook.imagepipeline.cache.StagingArea
    public void clearAll()
    public boolean remove(com.facebook.cache.common.CacheKey)
org.codehaus.jackson.map.ser.BeanPropertyWriter
com.facebook.imagepipeline.animated.impl.AnimatedFrameCache$1
org.codehaus.jackson.map.deser.DateDeserializer
android.support.design.widget.TabLayout$Mode
org.codehaus.jackson.map.Deserializers$None
org.codehaus.jackson.map.deser.StdDeserializationContext
    protected java.lang.String determineClassName(java.lang.Object)
    static final int MAX_ERROR_STR_LEN
org.codehaus.jackson.map.deser.ArrayDeserializers
org.codehaus.jackson.map.ser.std.StaticListSerializerBase
com.facebook.imagepipeline.animated.base.DelegatingAnimatedDrawableBackend
    protected com.facebook.imagepipeline.animated.base.AnimatedDrawableBackend getDelegate()
    public void renderFrame(int,android.graphics.Canvas)
    public int getMemoryUsage()
    public void dropCaches()
com.example.administrator.igoushop_app_test.pojos.Attribute
    public void <init>()
    public java.lang.Integer getId()
    public void setId(java.lang.Integer)
    public java.lang.String getMaterial()
    public void setMaterial(java.lang.String)
    public java.lang.String getStyle()
    public void setStyle(java.lang.String)
    public java.lang.String getUserObject()
    public void setUserObject(java.lang.String)
    public void setSeason(java.lang.String)
    public void setDescrible(java.lang.String)
    public java.lang.String getCupModel()
    public void setCupModel(java.lang.String)
    public java.lang.String getScreenSize()
    public void setScreenSize(java.lang.String)
    public java.lang.String getOperatingSystem()
    public void setOperatingSystem(java.lang.String)
    public java.lang.String getMemory()
    public void setMemory(java.lang.String)
    public java.lang.String getScreenResolution()
    public void setScreenResolution(java.lang.String)
    public java.lang.String getAdditional()
    public void setAdditional(java.lang.String)
    private java.lang.Integer id
    private java.lang.String material
    private java.lang.String style
    private java.lang.String userObject
    private java.lang.String season
    private java.lang.String describle
    private java.lang.String cupModel
    private java.lang.String screenSize
    private java.lang.String operatingSystem
    private java.lang.String memory
    private java.lang.String screenResolution
    private java.lang.String additional
org.codehaus.jackson.map.ext.JodaDeserializers$PeriodDeserializer
com.facebook.imagepipeline.nativecode.WebpTranscoderFactory
    public void <init>()
com.facebook.imageutils.TiffUtil
    public static final int TIFF_BYTE_ORDER_BIG_END
    public static final int TIFF_BYTE_ORDER_LITTLE_END
    public static final int TIFF_TAG_ORIENTATION
    public static final int TIFF_TYPE_SHORT
android.support.annotation.IdRes
org.codehaus.jackson.map.MappingIterator
com.facebook.imagepipeline.memory.DefaultNativeMemoryChunkPoolParams
    public void <init>()
    private static final int SMALL_BUCKET_LENGTH
    private static final int LARGE_BUCKET_LENGTH
org.codehaus.jackson.map.ser.SerializerBase
com.facebook.imagepipeline.cache.BitmapCountingMemoryCacheFactory
    public void <init>()
okhttp3.internal.framed.Hpack
    private void <init>()
    private static final int PREFIX_4_BITS
    private static final int PREFIX_5_BITS
    private static final int PREFIX_6_BITS
    private static final int PREFIX_7_BITS
com.daimajia.swipe.util.Attributes
org.codehaus.jackson.util.MinimalPrettyPrinter
com.google.gson.internal.LinkedHashTreeMap$EntrySet$1
org.codehaus.jackson.io.IOContext
    public void setEncoding(org.codehaus.jackson.JsonEncoding)
    public final org.codehaus.jackson.JsonEncoding getEncoding()
    public final byte[] allocReadIOBuffer()
    public final byte[] allocWriteEncodingBuffer()
    public final char[] allocConcatBuffer()
    public final void releaseReadIOBuffer(byte[])
    public final void releaseWriteEncodingBuffer(byte[])
    public final void releaseConcatBuffer(char[])
    protected org.codehaus.jackson.JsonEncoding _encoding
org.codehaus.jackson.map.util.Comparators$1
com.lidroid.xutils.http.client.entity.FileUploadEntity
okhttp3.internal.DiskLruCache$Snapshot
org.codehaus.jackson.map.deser.StdKeyDeserializers
org.codehaus.jackson.node.ObjectNode
    public org.codehaus.jackson.JsonToken asToken()
    public boolean isObject()
    public org.codehaus.jackson.JsonNode get(int)
    public java.util.Iterator getFieldNames()
    public org.codehaus.jackson.JsonNode path(int)
    public org.codehaus.jackson.JsonNode path(java.lang.String)
    public java.util.Iterator getFields()
    public org.codehaus.jackson.node.ObjectNode with(java.lang.String)
    public org.codehaus.jackson.JsonNode findValue(java.lang.String)
    public java.util.List findValues(java.lang.String,java.util.List)
    public java.util.List findValuesAsText(java.lang.String,java.util.List)
    public org.codehaus.jackson.node.ObjectNode findParent(java.lang.String)
    public java.util.List findParents(java.lang.String,java.util.List)
    public final void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
    public org.codehaus.jackson.JsonNode remove(java.lang.String)
    public org.codehaus.jackson.node.ObjectNode remove(java.util.Collection)
    public org.codehaus.jackson.node.ObjectNode removeAll()
    public org.codehaus.jackson.JsonNode putAll(java.util.Map)
    public org.codehaus.jackson.JsonNode putAll(org.codehaus.jackson.node.ObjectNode)
    public org.codehaus.jackson.node.ObjectNode retain(java.util.Collection)
    public varargs org.codehaus.jackson.node.ObjectNode retain(java.lang.String[])
    public org.codehaus.jackson.node.ArrayNode putArray(java.lang.String)
    public org.codehaus.jackson.node.ObjectNode putObject(java.lang.String)
    public void putPOJO(java.lang.String,java.lang.Object)
    public void putNull(java.lang.String)
    public void put(java.lang.String,int)
    public void put(java.lang.String,java.lang.Integer)
    public void put(java.lang.String,long)
    public void put(java.lang.String,java.lang.Long)
    public void put(java.lang.String,float)
    public void put(java.lang.String,java.lang.Float)
    public void put(java.lang.String,double)
    public void put(java.lang.String,java.lang.Double)
    public void put(java.lang.String,java.math.BigDecimal)
    public void put(java.lang.String,java.lang.String)
    public void put(java.lang.String,boolean)
    public void put(java.lang.String,java.lang.Boolean)
    public void put(java.lang.String,byte[])
    protected void putContentsTo(java.util.Map)
    public synthetic bridge org.codehaus.jackson.node.ContainerNode removeAll()
    public synthetic bridge org.codehaus.jackson.JsonNode with(java.lang.String)
    public synthetic bridge org.codehaus.jackson.JsonNode findParent(java.lang.String)
com.squareup.picasso.UrlConnectionDownloader$ResponseCacheIcs
    private void <init>()
okhttp3.internal.DiskLruCache$Entry
org.codehaus.jackson.map.Module$SetupContext
org.codehaus.jackson.map.ser.BeanSerializerFactory$ConfigImpl
    public org.codehaus.jackson.map.SerializerFactory$Config withAdditionalSerializers(org.codehaus.jackson.map.Serializers)
    public org.codehaus.jackson.map.SerializerFactory$Config withAdditionalKeySerializers(org.codehaus.jackson.map.Serializers)
    public org.codehaus.jackson.map.SerializerFactory$Config withSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier)
    public boolean hasSerializers()
    public boolean hasKeySerializers()
    public boolean hasSerializerModifiers()
    public java.lang.Iterable serializers()
    public java.lang.Iterable keySerializers()
    public java.lang.Iterable serializerModifiers()
org.codehaus.jackson.map.util.Annotations
    public abstract java.lang.annotation.Annotation get(java.lang.Class)
    public abstract int size()
com.lidroid.xutils.db.annotation.Column
com.lidroid.xutils.http.client.multipart.HttpMultipart
com.lidroid.xutils.http.client.multipart.MultipartEntity
com.lidroid.xutils.db.converter.StringColumnConverter
org.codehaus.jackson.map.InjectableValues
    public void <init>()
com.lidroid.xutils.task.PriorityObjectBlockingQueue
    public void <init>(java.util.Collection)
com.lidroid.xutils.db.converter.IntegerColumnConverter
org.codehaus.jackson.map.SerializerFactory
    public abstract org.codehaus.jackson.map.SerializerFactory$Config getConfig()
    public abstract org.codehaus.jackson.map.SerializerFactory withConfig(org.codehaus.jackson.map.SerializerFactory$Config)
    public final org.codehaus.jackson.map.SerializerFactory withAdditionalSerializers(org.codehaus.jackson.map.Serializers)
    public final org.codehaus.jackson.map.SerializerFactory withAdditionalKeySerializers(org.codehaus.jackson.map.Serializers)
    public final org.codehaus.jackson.map.SerializerFactory withSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier)
    public abstract org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)
    public abstract org.codehaus.jackson.map.TypeSerializer createTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)
    public abstract org.codehaus.jackson.map.JsonSerializer createKeySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)
    public final org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig)
    public final org.codehaus.jackson.map.TypeSerializer createTypeSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig)
org.codehaus.jackson.JsonProcessingException
    protected void <init>(java.lang.Throwable)
okhttp3.internal.DiskLruCache$Editor
android.support.design.R$bool
com.facebook.common.logging.FLogDefaultLoggingDelegate
    public void setApplicationTag(java.lang.String)
    public void setMinimumLoggingLevel(int)
    public int getMinimumLoggingLevel()
    public void d(java.lang.String,java.lang.String,java.lang.Throwable)
    public void i(java.lang.String,java.lang.String,java.lang.Throwable)
    public void log(int,java.lang.String,java.lang.String)
com.lidroid.xutils.db.converter.BooleanColumnConverter
com.google.gson.stream.JsonWriter
    public final void setIndent(java.lang.String)
    public final void setHtmlSafe(boolean)
    public final boolean isHtmlSafe()
    public final void setSerializeNulls(boolean)
    public com.google.gson.stream.JsonWriter jsonValue(java.lang.String)
    public com.google.gson.stream.JsonWriter value(double)
com.facebook.imagepipeline.producers.ThreadHandoffProducerQueue
    private void execInQueue()
    public synchronized void startQueueing()
    public synchronized void stopQueuing()
    public synchronized boolean isQueueing()
okhttp3.internal.framed.Http2$Writer
    public synchronized void synReply(boolean,int,java.util.List)
    public synchronized void headers(int,java.util.List)
com.nineoldandroids.animation.ObjectAnimator
    private void <init>(java.lang.Object,com.nineoldandroids.util.Property)
    public static varargs com.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,java.lang.String,int[])
    public static varargs com.nineoldandroids.animation.ObjectAnimator ofInt(java.lang.Object,com.nineoldandroids.util.Property,int[])
    public static varargs com.nineoldandroids.animation.ObjectAnimator ofFloat(java.lang.Object,com.nineoldandroids.util.Property,float[])
    public static varargs com.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,java.lang.String,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])
    public static varargs com.nineoldandroids.animation.ObjectAnimator ofObject(java.lang.Object,com.nineoldandroids.util.Property,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])
    public static varargs com.nineoldandroids.animation.ObjectAnimator ofPropertyValuesHolder(java.lang.Object,com.nineoldandroids.animation.PropertyValuesHolder[])
    public java.lang.String getPropertyName()
    public varargs void setObjectValues(java.lang.Object[])
    public java.lang.Object getTarget()
    public void setTarget(java.lang.Object)
    public void setupStartValues()
    public void setupEndValues()
    public synthetic bridge com.nineoldandroids.animation.Animator setDuration(long)
    private static final boolean DBG
org.codehaus.jackson.map.deser.std.CollectionDeserializer
    protected void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonDeserializer,org.codehaus.jackson.map.TypeDeserializer,java.lang.reflect.Constructor)
    protected void <init>(org.codehaus.jackson.map.deser.std.CollectionDeserializer)
    public org.codehaus.jackson.type.JavaType getContentType()
okhttp3.CipherSuite
    public java.lang.String javaName()
android.support.annotation.ArrayRes
com.facebook.common.internal.AndroidPredicates$1
org.codehaus.jackson.map.Serializers
    public abstract org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty)
    public abstract org.codehaus.jackson.map.JsonSerializer findArraySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer)
    public abstract org.codehaus.jackson.map.JsonSerializer findCollectionSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer)
    public abstract org.codehaus.jackson.map.JsonSerializer findCollectionLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer)
    public abstract org.codehaus.jackson.map.JsonSerializer findMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer)
    public abstract org.codehaus.jackson.map.JsonSerializer findMapLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.BeanDescription,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer)
bolts.Task$7
bolts.WebViewAppLinkResolver$1
okhttp3.internal.DiskLruCache$3
com.lidroid.xutils.util.PreferencesCookieStore
butterknife.OnCheckedChanged
    public abstract int[] value()
org.codehaus.jackson.map.type.CollectionType
    public org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class)
    public org.codehaus.jackson.map.type.CollectionType withContentValueHandler(java.lang.Object)
    public synthetic bridge org.codehaus.jackson.map.type.CollectionLikeType withContentValueHandler(java.lang.Object)
    public synthetic bridge org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object)
okhttp3.internal.framed.FramedStream$FramedDataSink
    private static final long EMIT_BUFFER_SIZE
okhttp3.Response$Builder
    public okhttp3.Response$Builder removeHeader(java.lang.String)
com.facebook.imagepipeline.core.ImagePipeline$3
com.facebook.imagepipeline.animated.impl.AnimatedFrameCache
okhttp3.internal.framed.Hpack$Reader
    int maxDynamicTableByteCount()
okio.RealBufferedSource
    private boolean rangeEquals(long,okio.ByteString)
    static synthetic boolean access$000(okio.RealBufferedSource)
    public okio.ByteString readByteString()
    public int read(byte[])
    public void readFully(byte[])
    public int read(byte[],int,int)
    public void readFully(okio.Buffer,long)
    public long readAll(okio.Sink)
    public java.lang.String readUtf8()
    public java.lang.String readUtf8(long)
    public java.lang.String readString(java.nio.charset.Charset)
    public java.lang.String readString(long,java.nio.charset.Charset)
    public java.lang.String readUtf8Line()
    public int readUtf8CodePoint()
    public long readLong()
    public long readLongLe()
    public long readDecimalLong()
    public long indexOf(okio.ByteString)
    public long indexOf(okio.ByteString,long)
    public long indexOfElement(okio.ByteString)
    public long indexOfElement(okio.ByteString,long)
    public java.io.InputStream inputStream()
android.support.design.widget.AppBarLayout$LayoutParams$ScrollFlags
org.codehaus.jackson.map.deser.std.StdScalarDeserializer
    protected void <init>(org.codehaus.jackson.type.JavaType)
okio.BufferedSource
    public abstract boolean request(long)
    public abstract long readLong()
    public abstract long readLongLe()
    public abstract long readDecimalLong()
    public abstract okio.ByteString readByteString()
    public abstract int read(byte[])
    public abstract void readFully(byte[])
    public abstract int read(byte[],int,int)
    public abstract void readFully(okio.Buffer,long)
    public abstract long readAll(okio.Sink)
    public abstract java.lang.String readUtf8()
    public abstract java.lang.String readUtf8(long)
    public abstract java.lang.String readUtf8Line()
    public abstract int readUtf8CodePoint()
    public abstract java.lang.String readString(java.nio.charset.Charset)
    public abstract java.lang.String readString(long,java.nio.charset.Charset)
    public abstract long indexOf(byte,long)
    public abstract long indexOf(okio.ByteString)
    public abstract long indexOf(okio.ByteString,long)
    public abstract long indexOfElement(okio.ByteString)
    public abstract long indexOfElement(okio.ByteString,long)
    public abstract java.io.InputStream inputStream()
com.facebook.cache.common.CacheKey
    public abstract boolean equals(java.lang.Object)
    public abstract int hashCode()
org.codehaus.jackson.map.BeanProperty
    public abstract java.lang.String getName()
    public abstract org.codehaus.jackson.type.JavaType getType()
    public abstract java.lang.annotation.Annotation getAnnotation(java.lang.Class)
    public abstract java.lang.annotation.Annotation getContextAnnotation(java.lang.Class)
    public abstract org.codehaus.jackson.map.introspect.AnnotatedMember getMember()
org.codehaus.jackson.map.JsonSerializer
    public org.codehaus.jackson.map.JsonSerializer unwrappingSerializer()
    public boolean isUnwrappingSerializer()
    public abstract void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
    public java.lang.Class handledType()
com.facebook.imageutils.StreamProcessor
    void <init>()
com.lidroid.xutils.bitmap.download.Downloader
com.facebook.common.memory.MemoryTrimmable
    public abstract void trim(com.facebook.common.memory.MemoryTrimType)
org.codehaus.jackson.sym.Name3
org.codehaus.jackson.map.jsontype.impl.MinimalClassNameIdResolver
    public org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism()
    public java.lang.String idFromValue(java.lang.Object)
com.facebook.drawee.R$id
org.codehaus.jackson.map.deser.std.ContainerDeserializerBase
    public abstract org.codehaus.jackson.type.JavaType getContentType()
org.codehaus.jackson.map.SerializerProvider
    public abstract void setNullKeySerializer(org.codehaus.jackson.map.JsonSerializer)
    public abstract void setNullValueSerializer(org.codehaus.jackson.map.JsonSerializer)
    public abstract void setDefaultKeySerializer(org.codehaus.jackson.map.JsonSerializer)
    public abstract void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)
    public abstract void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerFactory)
    public abstract org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.SerializerFactory)
    public abstract boolean hasSerializerFor(org.codehaus.jackson.map.SerializationConfig,java.lang.Class,org.codehaus.jackson.map.SerializerFactory)
    public final org.codehaus.jackson.map.SerializationConfig getConfig()
    public final boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)
    public final java.lang.Class getSerializationView()
    public final org.codehaus.jackson.map.ser.FilterProvider getFilterProvider()
    public org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)
    public org.codehaus.jackson.type.JavaType constructSpecializedType(org.codehaus.jackson.type.JavaType,java.lang.Class)
    public abstract org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty)
    public abstract org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)
    public abstract org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,org.codehaus.jackson.map.BeanProperty)
    public abstract org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.BeanProperty)
    public abstract org.codehaus.jackson.map.JsonSerializer findKeySerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)
    public final org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class)
    public final org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType)
    public final org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean)
    public final org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType,boolean)
    public final org.codehaus.jackson.map.JsonSerializer getKeySerializer()
    public final org.codehaus.jackson.map.JsonSerializer getKeySerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)
    public abstract org.codehaus.jackson.map.JsonSerializer getNullKeySerializer()
    public abstract org.codehaus.jackson.map.JsonSerializer getNullValueSerializer()
    public abstract org.codehaus.jackson.map.JsonSerializer getUnknownTypeSerializer(java.lang.Class)
    public final void defaultSerializeValue(java.lang.Object,org.codehaus.jackson.JsonGenerator)
    public final void defaultSerializeField(java.lang.String,java.lang.Object,org.codehaus.jackson.JsonGenerator)
    public abstract void defaultSerializeDateValue(long,org.codehaus.jackson.JsonGenerator)
    public abstract void defaultSerializeDateValue(java.util.Date,org.codehaus.jackson.JsonGenerator)
    public abstract void defaultSerializeDateKey(long,org.codehaus.jackson.JsonGenerator)
    public abstract void defaultSerializeDateKey(java.util.Date,org.codehaus.jackson.JsonGenerator)
    public final void defaultSerializeNull(org.codehaus.jackson.JsonGenerator)
    public abstract int cachedSerializersCount()
    public abstract void flushCachedSerializers()
butterknife.OnItemSelected
    public abstract int[] value()
    public abstract butterknife.OnItemSelected$Callback callback()
org.codehaus.jackson.map.util.JSONPObject
com.google.gson.internal.LinkedHashTreeMap$AvlIterator
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicIntegerSerializer
    public void serialize(java.util.concurrent.atomic.AtomicInteger,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
org.codehaus.jackson.io.UTF32Reader
android.support.annotation.StringDef
com.lidroid.xutils.view.ResLoader
    public void <init>()
com.google.gson.FieldAttributes
    public java.lang.Class getDeclaringClass()
    public java.lang.String getName()
    public java.lang.reflect.Type getDeclaredType()
    public java.lang.Class getDeclaredClass()
    public java.lang.annotation.Annotation getAnnotation(java.lang.Class)
    public java.util.Collection getAnnotations()
    public boolean hasModifier(int)
    java.lang.Object get(java.lang.Object)
    boolean isSynthetic()
com.facebook.imageutils.JfifUtil
    private void <init>()
    public static int getOrientation(byte[])
    public static final int MARKER_FIRST_BYTE
    public static final int MARKER_ESCAPE_BYTE
    public static final int MARKER_SOI
    public static final int MARKER_TEM
    public static final int MARKER_EOI
    public static final int MARKER_SOS
    public static final int MARKER_APP1
    public static final int MARKER_SOFn
    public static final int MARKER_RST0
    public static final int MARKER_RST7
    public static final int APP1_EXIF_MAGIC
com.facebook.imagepipeline.memory.PoolConfig$Builder
    public com.facebook.imagepipeline.memory.PoolConfig$Builder setBitmapPoolParams(com.facebook.imagepipeline.memory.PoolParams)
    public com.facebook.imagepipeline.memory.PoolConfig$Builder setBitmapPoolStatsTracker(com.facebook.imagepipeline.memory.PoolStatsTracker)
    public com.facebook.imagepipeline.memory.PoolConfig$Builder setFlexByteArrayPoolParams(com.facebook.imagepipeline.memory.PoolParams)
    public com.facebook.imagepipeline.memory.PoolConfig$Builder setMemoryTrimmableRegistry(com.facebook.common.memory.MemoryTrimmableRegistry)
    public com.facebook.imagepipeline.memory.PoolConfig$Builder setNativeMemoryChunkPoolParams(com.facebook.imagepipeline.memory.PoolParams)
    public com.facebook.imagepipeline.memory.PoolConfig$Builder setNativeMemoryChunkPoolStatsTracker(com.facebook.imagepipeline.memory.PoolStatsTracker)
    public com.facebook.imagepipeline.memory.PoolConfig$Builder setSmallByteArrayPoolParams(com.facebook.imagepipeline.memory.PoolParams)
    public com.facebook.imagepipeline.memory.PoolConfig$Builder setSmallByteArrayPoolStatsTracker(com.facebook.imagepipeline.memory.PoolStatsTracker)
org.codehaus.jackson.map.deser.StdDeserializer$CalendarDeserializer
org.codehaus.jackson.map.Deserializers$Base
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$PropertyBundle
com.lidroid.xutils.view.annotation.event.OnKey
android.support.design.R$layout
    private void <init>()
com.cjj.R
com.lidroid.xutils.task.PriorityAsyncTask$2
com.lidroid.xutils.view.annotation.event.OnCompoundButtonCheckedChange
com.example.administrator.igoushop_app_test.widget.DBHelperUtils
    public boolean updateUserInfo(com.example.administrator.igoushop_app_test.pojos.UserInfo)
    private static final java.lang.String TAG
    private static final java.lang.String DATABASE_NAME
    private static final int DATABASE_VERSION
    private static final java.lang.String DATABASE_TABLE
    public static final java.lang.String KEY_NAME
    public static final java.lang.String KEY_PWD
    public static final java.lang.String KEY_PHONE
    public static final java.lang.String KEY_HAND_IMG
    public static final java.lang.String KEY_ROWID
    private static final java.lang.String CREATE_STUDENT_TABLE
android.support.design.widget.AnimationUtils
    void <init>()
org.codehaus.jackson.node.NodeCursor
com.lidroid.xutils.db.table.TableUtils
android.support.annotation.Size
android.support.annotation.RequiresPermission$Write
android.support.design.widget.SnackbarManager
    public void show(int,android.support.design.widget.SnackbarManager$Callback)
    public boolean isCurrent(android.support.design.widget.SnackbarManager$Callback)
    private static final int MSG_TIMEOUT
    private static final int SHORT_DURATION_MS
    private static final int LONG_DURATION_MS
bolts.AppLink
org.codehaus.jackson.JsonGenerationException
okhttp3.HttpUrl
    public static okhttp3.HttpUrl get(java.net.URL)
    static okhttp3.HttpUrl getChecked(java.lang.String)
    public static okhttp3.HttpUrl get(java.net.URI)
    public java.net.URL url()
    public java.lang.String username()
    public java.lang.String password()
    public int pathSize()
    public java.util.List pathSegments()
    public int querySize()
    public java.lang.String queryParameter(java.lang.String)
    public java.util.Set queryParameterNames()
    public java.util.List queryParameterValues(java.lang.String)
    public java.lang.String queryParameterName(int)
    public java.lang.String queryParameterValue(int)
    public java.lang.String fragment()
    static final java.lang.String USERNAME_ENCODE_SET
    static final java.lang.String PASSWORD_ENCODE_SET
    static final java.lang.String PATH_SEGMENT_ENCODE_SET
    static final java.lang.String PATH_SEGMENT_ENCODE_SET_URI
    static final java.lang.String QUERY_ENCODE_SET
    static final java.lang.String QUERY_COMPONENT_ENCODE_SET
    static final java.lang.String QUERY_COMPONENT_ENCODE_SET_URI
    static final java.lang.String FORM_ENCODE_SET
    static final java.lang.String FRAGMENT_ENCODE_SET
    static final java.lang.String FRAGMENT_ENCODE_SET_URI
org.codehaus.jackson.map.introspect.AnnotatedMethod
    public int getModifiers()
    public synthetic bridge org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)
com.facebook.cache.disk.DiskStorageCache
    private void trimBy(double)
    public com.facebook.cache.disk.DiskStorage$DiskDumpInfo getDumpInfo()
    public boolean isEnabled()
    public boolean probe(com.facebook.cache.common.CacheKey)
    public void remove(com.facebook.cache.common.CacheKey)
    public long clearOldEntries(long)
    public long getSize()
    public void clearAll()
    public boolean hasKey(com.facebook.cache.common.CacheKey)
    public void trimToMinimum()
    public void trimToNothing()
    public static final int START_OF_VERSIONING
    private static final double TRIMMING_LOWER_BOUND
    private static final long UNINITIALIZED
org.codehaus.jackson.map.ser.StdSerializers$SqlDateSerializer
    public void serialize(java.sql.Date,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
com.facebook.common.util.StreamUtil$1
org.codehaus.jackson.map.util.ISO8601Utils
org.codehaus.jackson.map.deser.EnumResolver
android.support.design.R$style
    private void <init>()
net.lemonsoft.lemonbubble.R$id
okhttp3.internal.DiskLruCache
butterknife.OnEditorAction
    public abstract int[] value()
com.google.gson.internal.LinkedHashTreeMap$KeySet
com.daimajia.swipe.R$id
org.codehaus.jackson.map.introspect.AnnotatedConstructor
    public org.codehaus.jackson.map.introspect.AnnotatedConstructor withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)
    public int getModifiers()
    public org.codehaus.jackson.type.JavaType getType(org.codehaus.jackson.map.type.TypeBindings)
    public synthetic bridge org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)
com.lidroid.xutils.BitmapUtils$BitmapLoadTask
    public void <init>(com.lidroid.xutils.BitmapUtils,android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack)
    static synthetic java.lang.String access$000(com.lidroid.xutils.BitmapUtils$BitmapLoadTask)
    protected varargs android.graphics.Bitmap doInBackground(java.lang.Object[])
    public void updateProgress(long,long)
    protected synthetic bridge java.lang.Object doInBackground(java.lang.Object[])
    private static final int PROGRESS_LOAD_STARTED
    private static final int PROGRESS_LOADING
org.codehaus.jackson.map.BeanDescription
    public abstract boolean hasKnownClassAnnotations()
    public abstract org.codehaus.jackson.map.type.TypeBindings bindingsForBeanType()
    public abstract org.codehaus.jackson.type.JavaType resolveType(java.lang.reflect.Type)
    public abstract org.codehaus.jackson.map.util.Annotations getClassAnnotations()
    public abstract java.util.List findProperties()
    public abstract java.util.Map findInjectables()
    public abstract org.codehaus.jackson.map.introspect.AnnotatedMethod findAnyGetter()
    public abstract org.codehaus.jackson.map.introspect.AnnotatedMethod findAnySetter()
    public abstract org.codehaus.jackson.map.introspect.AnnotatedMethod findJsonValueMethod()
    public abstract org.codehaus.jackson.map.introspect.AnnotatedConstructor findDefaultConstructor()
    public abstract java.util.Set getIgnoredPropertyNames()
    public abstract java.util.LinkedHashMap findGetters(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection)
    public abstract java.util.LinkedHashMap findSetters(org.codehaus.jackson.map.introspect.VisibilityChecker)
    public abstract java.util.LinkedHashMap findDeserializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection)
    public abstract java.util.Map findSerializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection)
com.facebook.imagepipeline.memory.PooledByteArrayBufferedInputStream
    private static final java.lang.String TAG
okhttp3.ConnectionSpec$Builder
    public okhttp3.ConnectionSpec$Builder allEnabledCipherSuites()
    public okhttp3.ConnectionSpec$Builder allEnabledTlsVersions()
com.kaopiz.kprogresshud.Helper
    void <init>()
com.facebook.common.util.UriUtil
    public void <init>()
    public static android.net.Uri parseUriOrNull(java.lang.String)
    public static final java.lang.String HTTP_SCHEME
    public static final java.lang.String HTTPS_SCHEME
    public static final java.lang.String LOCAL_FILE_SCHEME
    public static final java.lang.String LOCAL_CONTENT_SCHEME
    public static final java.lang.String LOCAL_ASSET_SCHEME
    public static final java.lang.String LOCAL_RESOURCE_SCHEME
    public static final java.lang.String DATA_SCHEME
org.codehaus.jackson.map.ser.std.BeanSerializerBase
com.lidroid.xutils.task.PriorityRunnable
com.facebook.common.disk.NoOpDiskTrimmableRegistry
    public void unregisterDiskTrimmable(com.facebook.common.disk.DiskTrimmable)
org.codehaus.jackson.sym.BytesToNameCanonicalizer$TableInfo
    public void <init>(org.codehaus.jackson.sym.BytesToNameCanonicalizer)
com.facebook.common.activitylistener.ListenableActivity
org.codehaus.jackson.node.ArrayNode
    private void _insert(int,org.codehaus.jackson.JsonNode)
    public org.codehaus.jackson.JsonToken asToken()
    public boolean isArray()
    public org.codehaus.jackson.JsonNode get(int)
    public org.codehaus.jackson.JsonNode get(java.lang.String)
    public org.codehaus.jackson.JsonNode path(java.lang.String)
    public org.codehaus.jackson.JsonNode path(int)
    public final void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
    public org.codehaus.jackson.JsonNode findValue(java.lang.String)
    public java.util.List findValues(java.lang.String,java.util.List)
    public java.util.List findValuesAsText(java.lang.String,java.util.List)
    public org.codehaus.jackson.node.ObjectNode findParent(java.lang.String)
    public java.util.List findParents(java.lang.String,java.util.List)
    public org.codehaus.jackson.JsonNode set(int,org.codehaus.jackson.JsonNode)
    public org.codehaus.jackson.JsonNode addAll(org.codehaus.jackson.node.ArrayNode)
    public org.codehaus.jackson.JsonNode addAll(java.util.Collection)
    public void insert(int,org.codehaus.jackson.JsonNode)
    public org.codehaus.jackson.JsonNode remove(int)
    public org.codehaus.jackson.node.ArrayNode removeAll()
    public org.codehaus.jackson.node.ArrayNode addArray()
    public org.codehaus.jackson.node.ObjectNode addObject()
    public void addPOJO(java.lang.Object)
    public void addNull()
    public void add(int)
    public void add(java.lang.Integer)
    public void add(long)
    public void add(java.lang.Long)
    public void add(float)
    public void add(java.lang.Float)
    public void add(double)
    public void add(java.lang.Double)
    public void add(java.math.BigDecimal)
    public void add(java.lang.String)
    public void add(boolean)
    public void add(java.lang.Boolean)
    public void add(byte[])
    public org.codehaus.jackson.node.ArrayNode insertArray(int)
    public org.codehaus.jackson.node.ObjectNode insertObject(int)
    public void insertPOJO(int,java.lang.Object)
    public void insertNull(int)
    public void insert(int,int)
    public void insert(int,java.lang.Integer)
    public void insert(int,long)
    public void insert(int,java.lang.Long)
    public void insert(int,float)
    public void insert(int,java.lang.Float)
    public void insert(int,double)
    public void insert(int,java.lang.Double)
    public void insert(int,java.math.BigDecimal)
    public void insert(int,java.lang.String)
    public void insert(int,boolean)
    public void insert(int,java.lang.Boolean)
    public void insert(int,byte[])
    protected void addContentsTo(java.util.List)
    public org.codehaus.jackson.JsonNode _set(int,org.codehaus.jackson.JsonNode)
    public synthetic bridge org.codehaus.jackson.node.ContainerNode removeAll()
    public synthetic bridge org.codehaus.jackson.JsonNode findParent(java.lang.String)
android.support.annotation.AnimRes
com.lidroid.xutils.http.client.entity.InputStreamUploadEntity
org.codehaus.jackson.map.jsontype.impl.AsExternalTypeSerializer
org.codehaus.jackson.map.ext.OptionalHandlerFactory
    public org.codehaus.jackson.map.JsonSerializer findSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType)
    private static final java.lang.String PACKAGE_PREFIX_JODA_DATETIME
    private static final java.lang.String PACKAGE_PREFIX_JAVAX_XML
    private static final java.lang.String SERIALIZERS_FOR_JODA_DATETIME
    private static final java.lang.String SERIALIZERS_FOR_JAVAX_XML
    private static final java.lang.String DESERIALIZERS_FOR_JODA_DATETIME
    private static final java.lang.String DESERIALIZERS_FOR_JAVAX_XML
    private static final java.lang.String CLASS_NAME_DOM_NODE
    private static final java.lang.String CLASS_NAME_DOM_DOCUMENT
    private static final java.lang.String SERIALIZER_FOR_DOM_NODE
    private static final java.lang.String DESERIALIZER_FOR_DOM_DOCUMENT
    private static final java.lang.String DESERIALIZER_FOR_DOM_NODE
com.squareup.picasso.Cache
    public abstract void clear()
com.lidroid.xutils.task.TaskHandler
    public abstract boolean supportPause()
    public abstract boolean supportResume()
    public abstract boolean supportCancel()
    public abstract void cancel()
    public abstract boolean isPaused()
    public abstract boolean isCancelled()
okhttp3.internal.framed.Huffman
    void encode(byte[],java.io.OutputStream)
    int encodedLength(byte[])
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$1
org.codehaus.jackson.map.util.Named
    public abstract java.lang.String getName()
com.facebook.imagepipeline.producers.BaseProducerContext
    public synchronized boolean isCancelled()
com.lidroid.xutils.view.annotation.event.OnClick
org.codehaus.jackson.node.NodeCursor$RootValue
com.facebook.imagepipeline.cache.EncodedMemoryCacheFactory
    public void <init>()
com.cjj.R$styleable
    private void <init>()
org.codehaus.jackson.map.ser.std.StdArraySerializers$ByteArraySerializer
    public void serialize(byte[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public void serializeWithType(byte[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public synthetic bridge void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
com.lidroid.xutils.view.annotation.event.OnItemLongClick
com.facebook.imagepipeline.animated.impl.RollingStat
    private static final int WINDOWS
com.lidroid.xutils.db.annotation.NoAutoIncrement
com.example.administrator.igoushop_app_test.R$array
com.facebook.imagepipeline.core.ImagePipeline$4
org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeDeserializer
    public void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty,java.lang.String)
com.example.administrator.igoushop_app_test.pojos.Color
    public int getNum()
    public void setNum(int)
    public com.example.administrator.igoushop_app_test.pojos.Size getSize()
    public void setSize(com.example.administrator.igoushop_app_test.pojos.Size)
    public java.lang.Integer getId()
    public void setId(java.lang.Integer)
    public void setName(java.lang.String)
    public int isState()
    public void setState(int)
    private java.lang.Integer id
    private int state
    private int num
    private com.example.administrator.igoushop_app_test.pojos.Size size
org.codehaus.jackson.map.util.PrimitiveArrayBuilder
    static final int INITIAL_CHUNK_SIZE
    static final int SMALL_CHUNK_SIZE
    static final int MAX_CHUNK_SIZE
android.support.annotation.RequiresPermission
com.lidroid.xutils.http.client.multipart.content.AbstractContentBody
com.facebook.imagepipeline.memory.PooledByteBufferFactory
    public abstract com.facebook.imagepipeline.memory.PooledByteBuffer newByteBuffer(int)
okhttp3.internal.Platform
    public void logW(java.lang.String)
    public void log(java.lang.String)
org.codehaus.jackson.map.ser.std.ToStringSerializer
    public void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
org.codehaus.jackson.map.deser.StdScalarDeserializer
org.codehaus.jackson.map.ser.StdSerializers$IntLikeSerializer
    public void serialize(java.lang.Number,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
com.facebook.imagepipeline.datasource.ListDataSource$1
com.example.administrator.igoushop_app_test.pojos.ProductClassify
    public java.lang.String getTextColor()
    public void setTextColor(java.lang.String)
    public java.lang.Integer getId()
    public void setId(java.lang.Integer)
    public java.lang.String getTitle()
    public void setTitle(java.lang.String)
    private java.lang.Integer id
    private java.lang.String title
    private java.lang.String textColor
org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap
    private void <init>(org.codehaus.jackson.map.ser.impl.JsonSerializerMap)
    public static org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap from(java.util.HashMap)
    public org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap instance()
    public org.codehaus.jackson.map.JsonSerializer typedValueSerializer(org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.map.JsonSerializer typedValueSerializer(java.lang.Class)
    public org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(java.lang.Class)
    public org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(org.codehaus.jackson.type.JavaType)
    protected final org.codehaus.jackson.map.ser.impl.JsonSerializerMap _map
    protected final org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey _cacheKey
org.codehaus.jackson.map.ser.StdSerializers$BooleanSerializer
    public void serialize(java.lang.Boolean,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy
    public double getTrimRatio(com.facebook.common.memory.MemoryTrimType)
    private static final java.lang.String TAG
com.cjj.R$dimen
net.lemonsoft.lemonbubble.R$dimen
com.facebook.binaryresource.ByteArrayBinaryResource
org.codehaus.jackson.map.ClassIntrospector
    public abstract org.codehaus.jackson.map.BeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)
    public abstract org.codehaus.jackson.map.BeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)
    public org.codehaus.jackson.map.BeanDescription forClassAnnotations(org.codehaus.jackson.map.MapperConfig,java.lang.Class,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)
    public org.codehaus.jackson.map.BeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,java.lang.Class,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)
android.support.design.widget.FloatingActionButton$OnVisibilityChangedListener
    public void <init>()
com.facebook.drawee.R
okhttp3.Cache$CacheResponseBody
org.codehaus.jackson.map.introspect.VisibilityChecker$1
com.facebook.common.internal.Sets
    private void <init>()
    public static java.util.HashSet newHashSet()
    public static varargs java.util.HashSet newHashSet(java.lang.Object[])
    public static java.util.HashSet newHashSetWithCapacity(int)
    public static java.util.HashSet newHashSet(java.lang.Iterable)
    public static java.util.HashSet newHashSet(java.util.Iterator)
    public static java.util.LinkedHashSet newLinkedHashSet()
org.codehaus.jackson.node.TreeTraversingParser$1
com.example.administrator.igoushop_app_test.R$bool
com.nineoldandroids.animation.AnimatorSet$Node
com.squareup.picasso.Dispatcher
    void shutdown()
    private static final int RETRY_DELAY
    private static final int AIRPLANE_MODE_ON
    private static final int AIRPLANE_MODE_OFF
    static final int REQUEST_SUBMIT
    static final int REQUEST_CANCEL
    static final int REQUEST_GCED
    static final int HUNTER_COMPLETE
    static final int HUNTER_RETRY
    static final int HUNTER_DECODE_FAILED
    static final int HUNTER_DELAY_NEXT_BATCH
    static final int HUNTER_BATCH_COMPLETE
    static final int NETWORK_STATE_CHANGE
    static final int AIRPLANE_MODE_CHANGE
    private static final java.lang.String DISPATCHER_THREAD_NAME
    private static final int BATCH_DELAY
com.lidroid.xutils.HttpUtils$1
com.lidroid.xutils.view.annotation.event.OnStartTrackingTouch
okhttp3.internal.http.RequestLine
    private void <init>()
org.codehaus.jackson.map.introspect.POJOPropertyBuilder
    public boolean isExplicitlyIncluded()
    public org.codehaus.jackson.map.introspect.AnnotatedMember getAccessor()
    public boolean couldSerialize()
    public boolean anySerializeIgnorals()
com.facebook.imagepipeline.image.ImageInfo
    public abstract int getWidth()
    public abstract int getHeight()
    public abstract com.facebook.imagepipeline.image.QualityInfo getQualityInfo()
org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$MultiView
com.lidroid.xutils.cache.LruDiskCache
org.codehaus.jackson.map.util.StdDateFormat
    public static java.text.DateFormat getBlueprintISO8601Format()
    public static java.text.DateFormat getISO8601Format(java.util.TimeZone)
    public static java.text.DateFormat getBlueprintRFC1123Format()
    public static java.text.DateFormat getRFC1123Format(java.util.TimeZone)
    protected static final java.lang.String DATE_FORMAT_STR_ISO8601
    protected static final java.lang.String DATE_FORMAT_STR_ISO8601_Z
    protected static final java.lang.String DATE_FORMAT_STR_PLAIN
    protected static final java.lang.String DATE_FORMAT_STR_RFC1123
org.codehaus.jackson.map.jsontype.impl.StdTypeResolverBuilder
    public org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty)
    public java.lang.String getTypeProperty()
com.cjj.R$bool
okhttp3.internal.framed.Http2
    public okhttp3.Protocol getProtocol()
    static final int INITIAL_MAX_FRAME_SIZE
    static final byte TYPE_DATA
    static final byte TYPE_HEADERS
    static final byte TYPE_PRIORITY
    static final byte TYPE_RST_STREAM
    static final byte TYPE_SETTINGS
    static final byte TYPE_PUSH_PROMISE
    static final byte TYPE_PING
    static final byte TYPE_GOAWAY
    static final byte TYPE_WINDOW_UPDATE
    static final byte TYPE_CONTINUATION
    static final byte FLAG_NONE
    static final byte FLAG_ACK
    static final byte FLAG_END_STREAM
    static final byte FLAG_END_HEADERS
    static final byte FLAG_END_PUSH_PROMISE
    static final byte FLAG_PADDED
    static final byte FLAG_PRIORITY
    static final byte FLAG_COMPRESSED
com.google.gson.JsonDeserializationContext
    public abstract java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)
com.lidroid.xutils.bitmap.core.BitmapCache$BitmapMeta
com.lidroid.xutils.db.table.Id
com.google.gson.Gson$2
    public com.google.gson.JsonElement serialize(java.lang.Object)
    public com.google.gson.JsonElement serialize(java.lang.Object,java.lang.reflect.Type)
com.google.gson.internal.bind.JsonTreeWriter
    public com.google.gson.stream.JsonWriter value(double)
com.facebook.cache.disk.DiskStorage$Entry
    public abstract com.facebook.binaryresource.FileBinaryResource getResource()
butterknife.BindColor
    public abstract int value()
com.squareup.picasso.Picasso$Builder
    public com.squareup.picasso.Picasso$Builder downloader(com.squareup.picasso.Downloader)
    public com.squareup.picasso.Picasso$Builder executor(java.util.concurrent.ExecutorService)
    public com.squareup.picasso.Picasso$Builder memoryCache(com.squareup.picasso.Cache)
    public com.squareup.picasso.Picasso$Builder listener(com.squareup.picasso.Picasso$Listener)
    public com.squareup.picasso.Picasso$Builder requestTransformer(com.squareup.picasso.Picasso$RequestTransformer)
    public com.squareup.picasso.Picasso$Builder debugging(boolean)
    public com.squareup.picasso.Picasso$Builder indicatorsEnabled(boolean)
    public com.squareup.picasso.Picasso$Builder loggingEnabled(boolean)
net.lemonsoft.lemonbubble.enums.LemonBubbleLocationStyle
    public int getValue()
butterknife.OnPageChange
    public abstract int[] value()
    public abstract butterknife.OnPageChange$Callback callback()
okhttp3.Cookie$1
okhttp3.Challenge
okhttp3.ConnectionPool
    public synchronized int idleConnectionCount()
    public synchronized int connectionCount()
    public void evictAll()
org.codehaus.jackson.io.NumberInput
    public void <init>()
    public static double parseAsDouble(java.lang.String,double)
    public static final java.lang.String NASTY_SMALL_DOUBLE
    static final long L_BILLION
com.lidroid.xutils.db.converter.ColumnConverter
net.lemonsoft.lemonbubble.BuildConfig
com.nineoldandroids.animation.AnimatorSet$DependencyListener
com.lidroid.xutils.cache.MD5FileNameGenerator
com.nineoldandroids.view.ViewPropertyAnimatorPreHC$AnimatorEventListener
org.codehaus.jackson.JsonFactory
    public void <init>()
    public java.lang.String getFormatName()
    public org.codehaus.jackson.format.MatchStrength hasFormat(org.codehaus.jackson.format.InputAccessor)
    protected org.codehaus.jackson.format.MatchStrength hasJSONFormat(org.codehaus.jackson.format.InputAccessor)
    public org.codehaus.jackson.Version version()
    public final org.codehaus.jackson.JsonFactory configure(org.codehaus.jackson.JsonParser$Feature,boolean)
    public org.codehaus.jackson.JsonFactory enable(org.codehaus.jackson.JsonParser$Feature)
    public org.codehaus.jackson.JsonFactory disable(org.codehaus.jackson.JsonParser$Feature)
    public final void enableParserFeature(org.codehaus.jackson.JsonParser$Feature)
    public final void disableParserFeature(org.codehaus.jackson.JsonParser$Feature)
    public final void setParserFeature(org.codehaus.jackson.JsonParser$Feature,boolean)
    public final boolean isParserFeatureEnabled(org.codehaus.jackson.JsonParser$Feature)
    public org.codehaus.jackson.io.InputDecorator getInputDecorator()
    public org.codehaus.jackson.JsonFactory setInputDecorator(org.codehaus.jackson.io.InputDecorator)
    public final org.codehaus.jackson.JsonFactory configure(org.codehaus.jackson.JsonGenerator$Feature,boolean)
    public org.codehaus.jackson.JsonFactory enable(org.codehaus.jackson.JsonGenerator$Feature)
    public org.codehaus.jackson.JsonFactory disable(org.codehaus.jackson.JsonGenerator$Feature)
    public final boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)
    public final void enableGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature)
    public final void disableGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature)
    public final void setGeneratorFeature(org.codehaus.jackson.JsonGenerator$Feature,boolean)
    public final boolean isGeneratorFeatureEnabled(org.codehaus.jackson.JsonGenerator$Feature)
    public org.codehaus.jackson.io.CharacterEscapes getCharacterEscapes()
    public org.codehaus.jackson.JsonFactory setCharacterEscapes(org.codehaus.jackson.io.CharacterEscapes)
    public org.codehaus.jackson.io.OutputDecorator getOutputDecorator()
    public org.codehaus.jackson.JsonFactory setOutputDecorator(org.codehaus.jackson.io.OutputDecorator)
    public org.codehaus.jackson.JsonParser createJsonParser(java.io.File)
    public org.codehaus.jackson.JsonParser createJsonParser(java.net.URL)
    public org.codehaus.jackson.JsonParser createJsonParser(java.io.InputStream)
    public org.codehaus.jackson.JsonParser createJsonParser(java.io.Reader)
    public org.codehaus.jackson.JsonParser createJsonParser(byte[])
    public org.codehaus.jackson.JsonParser createJsonParser(byte[],int,int)
    public org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream,org.codehaus.jackson.JsonEncoding)
    public org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.Writer)
    public org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.OutputStream)
    public org.codehaus.jackson.JsonGenerator createJsonGenerator(java.io.File,org.codehaus.jackson.JsonEncoding)
    protected org.codehaus.jackson.JsonParser _createJsonParser(java.io.InputStream,org.codehaus.jackson.io.IOContext)
    protected org.codehaus.jackson.JsonParser _createJsonParser(byte[],int,int,org.codehaus.jackson.io.IOContext)
    protected org.codehaus.jackson.JsonGenerator _createJsonGenerator(java.io.Writer,org.codehaus.jackson.io.IOContext)
    protected org.codehaus.jackson.JsonGenerator _createUTF8JsonGenerator(java.io.OutputStream,org.codehaus.jackson.io.IOContext)
    protected java.io.Writer _createWriter(java.io.OutputStream,org.codehaus.jackson.JsonEncoding,org.codehaus.jackson.io.IOContext)
    protected java.io.InputStream _optimizedStreamFromURL(java.net.URL)
    protected org.codehaus.jackson.io.CharacterEscapes _characterEscapes
    protected org.codehaus.jackson.io.OutputDecorator _outputDecorator
    public static final java.lang.String FORMAT_NAME_JSON
org.codehaus.jackson.util.ByteArrayBuilder
    public void release()
    public byte[] resetAndGetFirstSegment()
    public byte[] finishCurrentSegment()
    public byte[] completeAndCoalesce(int)
    public byte[] getCurrentSegment()
    public void setCurrentSegmentLength(int)
    public int getCurrentSegmentLength()
    private static final int INITIAL_BLOCK_SIZE
    private static final int MAX_BLOCK_SIZE
    static final int DEFAULT_BLOCK_ARRAY_SIZE
org.codehaus.jackson.map.type.TypeModifier
    public void <init>()
org.codehaus.jackson.map.ext.DOMDeserializer$DocumentDeserializer
org.codehaus.jackson.node.BigIntegerNode
    public org.codehaus.jackson.JsonToken asToken()
    public org.codehaus.jackson.JsonParser$NumberType getNumberType()
    public boolean isIntegralNumber()
    public boolean isBigInteger()
    public java.lang.Number getNumberValue()
    public int getIntValue()
    public long getLongValue()
    public java.math.BigInteger getBigIntegerValue()
    public double getDoubleValue()
    public java.math.BigDecimal getDecimalValue()
    public boolean asBoolean(boolean)
    public final void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
com.facebook.common.internal.Objects
    private void <init>()
    public static com.facebook.common.internal.Objects$ToStringHelper toStringHelper(java.lang.Class)
    public static com.facebook.common.internal.Objects$ToStringHelper toStringHelper(java.lang.String)
    public static java.lang.Object firstNonNull(java.lang.Object,java.lang.Object)
org.codehaus.jackson.map.ser.impl.UnwrappingBeanSerializer
okhttp3.internal.framed.Spdy3$Writer
    public synchronized void synReply(boolean,int,java.util.List)
    public synchronized void headers(int,java.util.List)
com.facebook.imagepipeline.animated.base.AnimatedImage
    public abstract void dispose()
    public abstract int getDuration()
com.lidroid.xutils.view.EventListenerManager
    private void <init>()
org.codehaus.jackson.impl.StreamBasedParserBase
android.support.annotation.TransitionRes
org.codehaus.jackson.map.BeanPropertyDefinition
    public abstract java.lang.String getInternalName()
    public abstract boolean isExplicitlyIncluded()
    public boolean couldDeserialize()
    public boolean couldSerialize()
    public abstract org.codehaus.jackson.map.introspect.AnnotatedParameter getConstructorParameter()
    public abstract org.codehaus.jackson.map.introspect.AnnotatedMember getAccessor()
com.example.administrator.igoushop_app_test.R$color
butterknife.internal.ListenerMethod
org.codehaus.jackson.map.module.SimpleAbstractTypeResolver
org.codehaus.jackson.util.VersionUtil
android.support.graphics.drawable.TypedArrayUtils
    void <init>()
    private static final java.lang.String NAMESPACE
com.lidroid.xutils.db.sqlite.ColumnDbType
android.support.design.R$string
    private void <init>()
bolts.AppLink$Target
okhttp3.internal.http.OkHeaders
    private void <init>()
    public static boolean varyMatches(okhttp3.Response,okhttp3.Headers,okhttp3.Request)
    public static boolean hasVaryAll(okhttp3.Response)
    public static boolean hasVaryAll(okhttp3.Headers)
    private static java.util.Set varyFields(okhttp3.Response)
    public static java.util.Set varyFields(okhttp3.Headers)
    public static okhttp3.Headers varyHeaders(okhttp3.Response)
    public static okhttp3.Headers varyHeaders(okhttp3.Headers,okhttp3.Headers)
    public static java.util.List parseChallenges(okhttp3.Headers,java.lang.String)
okhttp3.Headers$Builder
    public okhttp3.Headers$Builder add(java.lang.String)
    public java.lang.String get(java.lang.String)
com.squareup.picasso.StatsSnapshot
    public void dump()
org.codehaus.jackson.type.JavaType
    public org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object)
    public org.codehaus.jackson.type.JavaType widenBy(java.lang.Class)
    protected org.codehaus.jackson.type.JavaType _widen(java.lang.Class)
    public abstract org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class)
    public final boolean hasRawClass(java.lang.Class)
    public final boolean isFinal()
    public boolean hasGenericTypes()
    public java.lang.String getGenericSignature()
    public abstract java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder)
    public java.lang.String getErasedSignature()
    public abstract java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)
com.facebook.common.util.TriState$1
org.codehaus.jackson.map.ser.impl.SimpleFilterProvider
org.codehaus.jackson.map.ser.impl.UnwrappingBeanPropertyWriter
org.codehaus.jackson.map.deser.StdDeserializer$ClassDeserializer
org.codehaus.jackson.map.jsontype.impl.AsWrapperTypeDeserializer
    public void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty)
com.facebook.imagepipeline.core.ProducerSequenceFactory
    private static void validateEncodedImageRequest(com.facebook.imagepipeline.request.ImageRequest)
    private synchronized com.facebook.imagepipeline.producers.Producer getBackgroundNetworkFetchToEncodedMemorySequence()
    private synchronized com.facebook.imagepipeline.producers.Producer getNetworkFetchToEncodedMemoryPrefetchSequence()
    private synchronized com.facebook.imagepipeline.producers.Producer getDecodedImagePrefetchSequence(com.facebook.imagepipeline.producers.Producer)
    public com.facebook.imagepipeline.producers.Producer getEncodedImageProducerSequence(com.facebook.imagepipeline.request.ImageRequest)
    public com.facebook.imagepipeline.producers.Producer getEncodedImagePrefetchProducerSequence(com.facebook.imagepipeline.request.ImageRequest)
    public com.facebook.imagepipeline.producers.Producer getDecodedImagePrefetchProducerSequence(com.facebook.imagepipeline.request.ImageRequest)
    com.facebook.imagepipeline.producers.Producer mBackgroundNetworkFetchToEncodedMemorySequence
    com.facebook.imagepipeline.producers.Producer mEncodedImageProducerSequence
    com.facebook.imagepipeline.producers.Producer mNetworkFetchToEncodedMemoryPrefetchSequence
    private static final int MAX_SIMULTANEOUS_FILE_FETCH_AND_RESIZE
org.codehaus.jackson.map.exc.UnrecognizedPropertyException
    public java.lang.Class getReferringClass()
    public java.lang.String getUnrecognizedPropertyName()
com.lidroid.xutils.cache.LruDiskCache$StrictLineReader
org.codehaus.jackson.impl.JsonParserBase
    public org.codehaus.jackson.Version version()
    public boolean isClosed()
    public org.codehaus.jackson.impl.JsonReadContext getParsingContext()
    protected abstract void _finishString()
    protected final int _decodeBase64Escape(org.codehaus.jackson.Base64Variant,int,int)
    public synthetic bridge org.codehaus.jackson.JsonStreamContext getParsingContext()
    protected static final int NR_UNKNOWN
    protected static final int NR_INT
    protected static final int NR_LONG
    protected static final int NR_BIGINT
    protected static final int NR_DOUBLE
    protected static final int NR_BIGDECIMAL
    static final long MIN_INT_L
    static final long MAX_INT_L
    static final double MIN_LONG_D
    static final double MAX_LONG_D
    static final double MIN_INT_D
    static final double MAX_INT_D
    protected static final int INT_0
    protected static final int INT_1
    protected static final int INT_2
    protected static final int INT_3
    protected static final int INT_4
    protected static final int INT_5
    protected static final int INT_6
    protected static final int INT_7
    protected static final int INT_8
    protected static final int INT_9
    protected static final int INT_MINUS
    protected static final int INT_PLUS
    protected static final int INT_DECIMAL_POINT
    protected static final int INT_e
    protected static final int INT_E
    protected static final char CHAR_NULL
butterknife.BindString
    public abstract int value()
org.codehaus.jackson.map.ser.std.StdArraySerializers$IntArraySerializer
    public org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)
    public void serializeContents(int[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
com.daimajia.slider.library.R$integer
com.example.administrator.igoushop_app_test.pojos.Advert
    public java.lang.Integer getId()
    public void setId(java.lang.Integer)
    public void setDes(java.lang.String)
    public void setImageUrl(java.lang.String)
    public java.lang.String getLink()
    public void setLink(java.lang.String)
    private java.lang.Integer id
    private java.lang.String link
android.support.graphics.drawable.animated.BuildConfig
com.google.gson.internal.bind.TypeAdapters$31
org.codehaus.jackson.SerializableString
    public abstract java.lang.String getValue()
    public abstract int charLength()
    public abstract char[] asQuotedChars()
    public abstract byte[] asUnquotedUTF8()
    public abstract byte[] asQuotedUTF8()
com.cjj.R$style
okhttp3.internal.FaultHidingSink
com.nineoldandroids.animation.AnimatorSet$1
com.facebook.common.executors.ConstrainedExecutorService
    public static com.facebook.common.executors.ConstrainedExecutorService newConstrainedExecutor(java.lang.String,int,int,java.util.concurrent.Executor)
    public boolean isIdle()
net.lemonsoft.lemonbubble.R$integer
okhttp3.Cache
    public void <init>(java.io.File,long)
    void <init>(java.io.File,long,okhttp3.internal.io.FileSystem)
    private static java.lang.String urlToKey(okhttp3.Request)
    private okhttp3.internal.http.CacheRequest put(okhttp3.Response)
    private void remove(okhttp3.Request)
    private void update(okhttp3.Response,okhttp3.Response)
    private void abortQuietly(okhttp3.internal.DiskLruCache$Editor)
    private synchronized void trackResponse(okhttp3.internal.http.CacheStrategy)
    private synchronized void trackConditionalCacheHit()
    private static int readInt(okio.BufferedSource)
    static synthetic okhttp3.internal.http.CacheRequest access$000(okhttp3.Cache,okhttp3.Response)
    static synthetic void access$100(okhttp3.Cache,okhttp3.Request)
    static synthetic void access$200(okhttp3.Cache,okhttp3.Response,okhttp3.Response)
    static synthetic void access$300(okhttp3.Cache)
    static synthetic void access$400(okhttp3.Cache,okhttp3.internal.http.CacheStrategy)
    static synthetic okhttp3.internal.DiskLruCache access$600(okhttp3.Cache)
    static synthetic int access$808(okhttp3.Cache)
    static synthetic int access$908(okhttp3.Cache)
    static synthetic int access$1000(okio.BufferedSource)
    okhttp3.Response get(okhttp3.Request)
    public void initialize()
    public void delete()
    public void evictAll()
    public java.util.Iterator urls()
    public synchronized int writeAbortCount()
    public synchronized int writeSuccessCount()
    public long size()
    public long maxSize()
    public void flush()
    public void close()
    public java.io.File directory()
    public boolean isClosed()
    public synchronized int networkCount()
    public synchronized int hitCount()
    public synchronized int requestCount()
    private final okhttp3.internal.DiskLruCache cache
    private int writeSuccessCount
    private int writeAbortCount
    private int networkCount
    private int hitCount
    private int requestCount
    private static final int VERSION
    private static final int ENTRY_METADATA
    private static final int ENTRY_BODY
    private static final int ENTRY_COUNT
butterknife.BuildConfig
    public static final boolean DEBUG
    public static final java.lang.String APPLICATION_ID
    public static final java.lang.String BUILD_TYPE
    public static final java.lang.String FLAVOR
    public static final int VERSION_CODE
    public static final java.lang.String VERSION_NAME
org.codehaus.jackson.map.ser.std.StdArraySerializers$DoubleArraySerializer
    public org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)
    public void serializeContents(double[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
android.support.design.widget.Snackbar$Callback$DismissEvent
org.codehaus.jackson.map.type.TypeParser$MyTokenizer
    public java.lang.String getUsedInput()
com.facebook.cache.common.WriterCallbacks
com.facebook.imagepipeline.BuildConfig
android.support.graphics.drawable.animated.R
com.facebook.common.internal.Ints
    private void <init>()
android.support.annotation.IntRange
bolts.Task$10
okio.Okio
    public static okio.Sink sink(java.io.OutputStream)
    public static okio.Source source(java.io.InputStream)
    public static okio.Source source(java.io.File)
    public static varargs okio.Source source(java.nio.file.Path,java.nio.file.OpenOption[])
    public static okio.Sink sink(java.io.File)
    public static okio.Sink appendingSink(java.io.File)
    public static varargs okio.Sink sink(java.nio.file.Path,java.nio.file.OpenOption[])
mehdi.sakout.dynamicbox.R$string
com.lidroid.xutils.view.annotation.event.OnFocusChange
com.lidroid.xutils.http.RequestParams$HeaderItem
okhttp3.MultipartBody
com.example.administrator.igoushop_app_test.BuildConfig
org.codehaus.jackson.io.NumberOutput
    public void <init>()
    public static int outputInt(int,char[],int)
    public static int outputInt(int,byte[],int)
    public static int outputLong(long,char[],int)
    public static int outputLong(long,byte[],int)
    private static int outputLeadingTriplet(int,char[],int)
    private static int outputLeadingTriplet(int,byte[],int)
    private static int outputFullTriplet(int,char[],int)
    private static int outputFullTriplet(int,byte[],int)
    private static int calcLongStrLength(long)
    private static final char NULL_CHAR
com.facebook.common.time.CurrentThreadTimeClock
okhttp3.internal.framed.FrameWriter
    public abstract void synReply(boolean,int,java.util.List)
    public abstract void headers(int,java.util.List)
com.google.gson.LongSerializationPolicy$2
    public com.google.gson.JsonElement serialize(java.lang.Long)
com.cjj.MaterialHeadListener
    public abstract void onComlete(com.cjj.MaterialRefreshLayout)
    public abstract void onBegin(com.cjj.MaterialRefreshLayout)
    public abstract void onPull(com.cjj.MaterialRefreshLayout,float)
    public abstract void onRelease(com.cjj.MaterialRefreshLayout,float)
    public abstract void onRefreshing(com.cjj.MaterialRefreshLayout)
com.lidroid.xutils.http.client.RetryHandler
com.facebook.common.util.ByteConstants
org.codehaus.jackson.map.introspect.NopAnnotationIntrospector
    public boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField)
    public java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated)
    public java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated)
    public org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated)
    public java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated)
com.squareup.picasso.Request$Builder
    public void <init>(android.net.Uri)
    public void <init>(int)
    private void <init>(com.squareup.picasso.Request)
    synthetic void <init>(com.squareup.picasso.Request,com.squareup.picasso.Request$1)
    public com.squareup.picasso.Request$Builder setUri(android.net.Uri)
    public com.squareup.picasso.Request$Builder setResourceId(int)
    public com.squareup.picasso.Request$Builder clearResize()
    public com.squareup.picasso.Request$Builder clearCenterCrop()
    public com.squareup.picasso.Request$Builder clearCenterInside()
    public com.squareup.picasso.Request$Builder rotate(float)
    public com.squareup.picasso.Request$Builder rotate(float,float,float)
    public com.squareup.picasso.Request$Builder clearRotation()
    public com.squareup.picasso.Request$Builder config(android.graphics.Bitmap$Config)
    public com.squareup.picasso.Request$Builder transform(com.squareup.picasso.Transformation)
butterknife.BindView
    public abstract int value()
com.facebook.common.references.SharedReference
    public synchronized int getRefCountTestOnly()
android.support.design.R$integer
com.facebook.drawee.view.AspectRatioMeasure
    public void <init>()
com.lidroid.xutils.http.client.multipart.FormBodyPart
org.codehaus.jackson.map.deser.EnumDeserializer
okhttp3.CertificatePinner
    public varargs void check(java.lang.String,java.security.cert.Certificate[])
com.lidroid.xutils.http.client.util.URLEncodedUtils
org.codehaus.jackson.map.JsonSerializableWithType
    public abstract void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
okhttp3.internal.io.FileSystem$1
org.codehaus.jackson.map.introspect.JacksonAnnotationIntrospector
    public java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass)
    public boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField)
    public java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated)
    public java.lang.Class findKeySerializer(org.codehaus.jackson.map.introspect.Annotated)
    public java.lang.Class findContentSerializer(org.codehaus.jackson.map.introspect.Annotated)
    public org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)
    public java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated)
    public java.lang.Class findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType)
    public java.lang.Class findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated)
    public java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated)
com.facebook.drawee.backends.pipeline.PipelineDraweeController
    protected android.content.res.Resources getResources()
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack
    public void <init>()
    public void onPreLoad(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig)
    public void setBitmapSetter(com.lidroid.xutils.bitmap.callback.BitmapSetter)
    public void setBitmap(android.view.View,android.graphics.Bitmap)
    public void setDrawable(android.view.View,android.graphics.drawable.Drawable)
    private com.lidroid.xutils.bitmap.callback.BitmapSetter bitmapSetter
com.facebook.imagepipeline.request.RepeatedPostprocessorRunner
    public abstract void update()
com.facebook.common.logging.FLog
    public void <init>()
    public static void setLoggingDelegate(com.facebook.common.logging.LoggingDelegate)
    public static void setMinimumLoggingLevel(int)
    public static int getMinimumLoggingLevel()
    public static void v(java.lang.String,java.lang.String)
    public static void v(java.lang.String,java.lang.String,java.lang.Object)
    public static void v(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)
    public static void v(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
    public static void v(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
    public static varargs void v(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])
    public static void v(java.lang.String,java.lang.String,java.lang.Throwable)
    public static void v(java.lang.Class,java.lang.String,java.lang.Throwable)
    public static void d(java.lang.String,java.lang.String)
    public static void d(java.lang.String,java.lang.String,java.lang.Object)
    public static void d(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)
    public static void d(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
    public static void d(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
    public static void d(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object)
    public static void d(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
    public static void d(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
    public static varargs void d(java.lang.String,java.lang.String,java.lang.Object[])
    public static varargs void d(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])
    public static varargs void d(java.lang.Class,java.lang.String,java.lang.Object[])
    public static varargs void d(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[])
    public static void d(java.lang.String,java.lang.String,java.lang.Throwable)
    public static void d(java.lang.Class,java.lang.String,java.lang.Throwable)
    public static void i(java.lang.String,java.lang.String)
    public static void i(java.lang.String,java.lang.String,java.lang.Object)
    public static void i(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object)
    public static void i(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
    public static void i(java.lang.String,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
    public static void i(java.lang.Class,java.lang.String,java.lang.Object)
    public static void i(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object)
    public static void i(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object)
    public static void i(java.lang.Class,java.lang.String,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
    public static varargs void i(java.lang.String,java.lang.String,java.lang.Object[])
    public static varargs void i(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])
    public static varargs void i(java.lang.Class,java.lang.String,java.lang.Object[])
    public static varargs void i(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[])
    public static void i(java.lang.String,java.lang.String,java.lang.Throwable)
    public static void i(java.lang.Class,java.lang.String,java.lang.Throwable)
    public static void w(java.lang.String,java.lang.String)
    public static void w(java.lang.Class,java.lang.String)
    public static varargs void w(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])
    public static void w(java.lang.String,java.lang.String,java.lang.Throwable)
    public static varargs void e(java.lang.String,java.lang.String,java.lang.Object[])
    public static varargs void e(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])
    public static void wtf(java.lang.String,java.lang.String)
    public static void wtf(java.lang.Class,java.lang.String)
    public static varargs void wtf(java.lang.String,java.lang.Throwable,java.lang.String,java.lang.Object[])
    public static varargs void wtf(java.lang.Class,java.lang.Throwable,java.lang.String,java.lang.Object[])
    public static void wtf(java.lang.String,java.lang.String,java.lang.Throwable)
    public static final int VERBOSE
    public static final int DEBUG
    public static final int INFO
    public static final int WARN
    public static final int ERROR
    public static final int ASSERT
com.lidroid.xutils.exception.BaseException
org.codehaus.jackson.impl.JsonNumericParserBase
com.lidroid.xutils.exception.HttpException
okhttp3.internal.RouteDatabase
    public synchronized int failedRoutesCount()
android.support.annotation.InterpolatorRes
org.codehaus.jackson.map.jsontype.NamedType
    public void <init>(java.lang.Class)
mehdi.sakout.dynamicbox.R$layout
net.lemonsoft.lemonbubble.R$drawable
org.codehaus.jackson.map.deser.JsonNodeDeserializer
com.lidroid.xutils.db.sqlite.SqlInfo
com.kaopiz.kprogresshud.BuildConfig
org.codehaus.jackson.io.SerializedString
    public final int charLength()
    public final char[] asQuotedChars()
    public final byte[] asUnquotedUTF8()
    public final byte[] asQuotedUTF8()
    protected byte[] _quotedUTF8Ref
    protected byte[] _unquotedUTF8Ref
    protected char[] _quotedChars
org.codehaus.jackson.map.ext.JodaSerializers$DateTimeSerializer
com.facebook.imagepipeline.core.DefaultExecutorSupplier
    private static final int NUM_IO_BOUND_THREADS
    private static final int NUM_LIGHTWEIGHT_BACKGROUND_THREADS
com.facebook.imagepipeline.platform.ArtDecoder
    private static final int DECODE_BUFFER_SIZE
android.support.design.R
org.codehaus.jackson.map.ser.impl.UnknownSerializer
    public void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public final void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    protected void failForEmpty(java.lang.Object)
com.facebook.imagepipeline.core.ProducerFactory
    public static com.facebook.imagepipeline.producers.NullProducer newNullProducer()
    public static com.facebook.imagepipeline.producers.SwallowResultProducer newSwallowResultProducer(com.facebook.imagepipeline.producers.Producer)
org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter
org.codehaus.jackson.schema.SchemaAware
    public abstract org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
com.facebook.imagepipeline.cache.BitmapMemoryCacheFactory
    public void <init>()
net.lemonsoft.lemonbubble.interfaces.LemonBubbleLifeCycleDelegate$Adapter
com.lidroid.xutils.db.table.Table
android.support.design.R$dimen
    private void <init>()
com.facebook.imagepipeline.common.ResizeOptions
    public void <init>(int,int)
    public boolean equals(java.lang.Object)
    public java.lang.String toString()
okhttp3.Cache$CacheRequestImpl
com.facebook.common.executors.HandlerExecutorService
    public abstract void quit()
    public abstract boolean isHandlerThread()
com.facebook.imagepipeline.cache.DefaultEncodedMemoryCacheParamsSupplier
    private static final int MAX_CACHE_ENTRIES
    private static final int MAX_EVICTION_QUEUE_ENTRIES
com.daimajia.slider.library.R$bool
com.daimajia.swipe.R
com.daimajia.slider.library.R$attr
    private void <init>()
android.support.annotation.RawRes
org.codehaus.jackson.map.deser.std.StringCollectionDeserializer
    protected void <init>(org.codehaus.jackson.map.deser.std.StringCollectionDeserializer)
    public org.codehaus.jackson.type.JavaType getContentType()
org.codehaus.jackson.impl.ReaderBasedParser
    public void setCodec(org.codehaus.jackson.ObjectCodec)
    public int releaseBuffered(java.io.Writer)
    public java.lang.Object getInputSource()
    public java.lang.String nextTextValue()
    public int nextIntValue(int)
    public long nextLongValue(long)
    public java.lang.Boolean nextBooleanValue()
org.codehaus.jackson.map.ext.CoreXMLSerializers
org.codehaus.jackson.map.ext.JodaSerializers
com.daimajia.slider.library.R$anim
com.facebook.drawee.components.RetryManager
    public static com.facebook.drawee.components.RetryManager newInstance()
    public boolean isTapToRetryEnabled()
    private static final int MAX_TAP_TO_RETRY_ATTEMPTS
okhttp3.internal.framed.FramedStream
    public okhttp3.internal.framed.FramedConnection getConnection()
    public java.util.List getRequestHeaders()
    public synchronized okhttp3.internal.framed.ErrorCode getErrorCode()
    public void reply(java.util.List,boolean)
com.lidroid.xutils.task.PriorityExecutor
    public int getPoolSize()
    public void setPoolSize(int)
    public boolean isBusy()
    private static final int CORE_POOL_SIZE
    private static final int MAXIMUM_POOL_SIZE
    private static final int KEEP_ALIVE
mehdi.sakout.dynamicbox.R$style
android.support.annotation.ColorRes
com.nineoldandroids.animation.AnimatorInflater
bolts.AppLinks
com.facebook.common.activitylistener.ActivityListener
    public abstract void onActivityCreate(android.app.Activity)
    public abstract void onStart(android.app.Activity)
    public abstract void onResume(android.app.Activity)
    public abstract void onPause(android.app.Activity)
    public abstract void onStop(android.app.Activity)
    public abstract void onDestroy(android.app.Activity)
butterknife.BindBitmap
    public abstract int value()
com.facebook.imagepipeline.memory.PooledByteStreams
    public long copy(java.io.InputStream,java.io.OutputStream,long)
    private static final int DEFAULT_TEMP_BUF_SIZE
org.codehaus.jackson.map.ext.JodaDeserializers$DateMidnightDeserializer
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyArrayChecker
okhttp3.internal.framed.Variant
    public abstract okhttp3.Protocol getProtocol()
com.facebook.drawee.view.MultiDraweeHolder
de.hdodenhof.circleimageview.R$attr
com.lidroid.xutils.db.annotation.Transient
bolts.Task$1
    void <init>(bolts.Task)
    public bolts.Task then(bolts.Task)
    public synthetic bridge java.lang.Object then(bolts.Task)
    final synthetic bolts.Task this$0
org.codehaus.jackson.map.ser.std.MapSerializer
com.lidroid.xutils.view.annotation.event.OnPreferenceChange
org.codehaus.jackson.FormatSchema
com.lidroid.xutils.http.callback.FileDownloadHandler
okhttp3.FormBody
    public int size()
    public java.lang.String encodedName(int)
    public java.lang.String name(int)
    public java.lang.String encodedValue(int)
    public java.lang.String value(int)
com.facebook.imagepipeline.decoder.ProgressiveJpegParser
    public boolean isJpeg()
    private static final int READ_FIRST_JPEG_BYTE
    private static final int READ_SECOND_JPEG_BYTE
    private static final int READ_MARKER_FIRST_BYTE_OR_ENTROPY_DATA
    private static final int READ_MARKER_SECOND_BYTE
    private static final int READ_SIZE_FIRST_BYTE
    private static final int READ_SIZE_SECOND_BYTE
    private static final int NOT_A_JPEG
    private static final int BUFFER_SIZE
com.google.gson.reflect.TypeToken
    private static boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.GenericArrayType)
    private static boolean isAssignableFrom(java.lang.reflect.Type,java.lang.reflect.ParameterizedType,java.util.Map)
    private static boolean typeEquals(java.lang.reflect.ParameterizedType,java.lang.reflect.ParameterizedType,java.util.Map)
    private static varargs java.lang.AssertionError buildUnexpectedTypeError(java.lang.reflect.Type,java.lang.Class[])
    private static boolean matches(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Map)
    public boolean isAssignableFrom(java.lang.Class)
    public boolean isAssignableFrom(java.lang.reflect.Type)
    public boolean isAssignableFrom(com.google.gson.reflect.TypeToken)
com.facebook.imagepipeline.core.ImagePipeline$5
org.codehaus.jackson.map.DeserializerFactory$Config
    public abstract org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers)
    public abstract org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers)
    public abstract org.codehaus.jackson.map.DeserializerFactory$Config withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier)
    public abstract org.codehaus.jackson.map.DeserializerFactory$Config withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver)
    public abstract org.codehaus.jackson.map.DeserializerFactory$Config withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators)
    public abstract boolean hasDeserializers()
com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo
    public void <init>(int,int,int,int,int,boolean,com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod)
    public final int frameNumber
com.facebook.common.internal.VisibleForTesting
com.facebook.imagepipeline.producers.PostprocessorProducer$RepeatedPostprocessorConsumer
    public synchronized void update()
okio.ForwardingSource
    public final okio.Source delegate()
org.codehaus.jackson.map.ser.std.InetAddressSerializer
com.lidroid.xutils.view.annotation.event.OnPreferenceClick
org.codehaus.jackson.format.InputAccessor
com.facebook.imagepipeline.memory.DefaultFlexByteArrayPoolParams
    private void <init>()
    public static final int DEFAULT_MAX_BYTE_ARRAY_SIZE
    private static final int DEFAULT_MIN_BYTE_ARRAY_SIZE
org.codehaus.jackson.map.ser.BeanSerializerFactory
    public org.codehaus.jackson.map.SerializerFactory$Config getConfig()
    public org.codehaus.jackson.map.SerializerFactory withConfig(org.codehaus.jackson.map.SerializerFactory$Config)
    protected java.lang.Iterable customSerializers()
    public org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)
    public org.codehaus.jackson.map.JsonSerializer createKeySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)
    public org.codehaus.jackson.map.JsonSerializer findBeanSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)
    public org.codehaus.jackson.map.TypeSerializer findPropertyTypeSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty)
    public org.codehaus.jackson.map.TypeSerializer findPropertyContentTypeSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.AnnotatedMember,org.codehaus.jackson.map.BeanProperty)
    protected org.codehaus.jackson.map.JsonSerializer constructBeanSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty)
    protected org.codehaus.jackson.map.ser.BeanPropertyWriter constructFilteredBeanWriter(org.codehaus.jackson.map.ser.BeanPropertyWriter,java.lang.Class[])
    protected org.codehaus.jackson.map.ser.PropertyBuilder constructPropertyBuilder(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)
    protected org.codehaus.jackson.map.ser.BeanSerializerBuilder constructBeanSerializerBuilder(org.codehaus.jackson.map.introspect.BasicBeanDescription)
    protected java.lang.Object findFilterId(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)
    protected boolean isPotentialBeanType(java.lang.Class)
    protected java.util.List findBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)
    protected java.util.List filterBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List)
    protected java.util.List sortBeanProperties(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List)
    protected void processViews(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.ser.BeanSerializerBuilder)
    protected void removeIgnorableTypes(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List)
    protected void removeSetterlessGetters(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,java.util.List)
    protected org.codehaus.jackson.map.ser.BeanPropertyWriter _constructWriter(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.TypeBindings,org.codehaus.jackson.map.ser.PropertyBuilder,boolean,java.lang.String,org.codehaus.jackson.map.introspect.AnnotatedMember)
org.codehaus.jackson.map.ext.DOMDeserializer$NodeDeserializer
net.lemonsoft.lemonbubble.R$string
android.support.design.widget.MathUtils
    void <init>()
net.lemonsoft.lemonbubble.R
android.support.design.R$styleable
    private void <init>()
com.nineoldandroids.animation.AnimatorSet$Builder
okhttp3.Credentials
com.lidroid.xutils.http.HttpCache$1
com.lidroid.xutils.db.sqlite.DbModelSelector
org.codehaus.jackson.map.ser.std.CollectionSerializer
org.codehaus.jackson.map.ObjectReader
com.facebook.cache.disk.FileCache
    public abstract boolean isEnabled()
    public abstract boolean hasKey(com.facebook.cache.common.CacheKey)
    public abstract boolean probe(com.facebook.cache.common.CacheKey)
    public abstract void remove(com.facebook.cache.common.CacheKey)
    public abstract long getSize()
    public abstract long clearOldEntries(long)
    public abstract void clearAll()
    public abstract com.facebook.cache.disk.DiskStorage$DiskDumpInfo getDumpInfo()
org.codehaus.jackson.map.SerializerFactory$Config
    public abstract org.codehaus.jackson.map.SerializerFactory$Config withAdditionalSerializers(org.codehaus.jackson.map.Serializers)
    public abstract org.codehaus.jackson.map.SerializerFactory$Config withAdditionalKeySerializers(org.codehaus.jackson.map.Serializers)
    public abstract org.codehaus.jackson.map.SerializerFactory$Config withSerializerModifier(org.codehaus.jackson.map.ser.BeanSerializerModifier)
    public abstract boolean hasSerializers()
    public abstract boolean hasKeySerializers()
    public abstract boolean hasSerializerModifiers()
    public abstract java.lang.Iterable serializers()
    public abstract java.lang.Iterable keySerializers()
    public abstract java.lang.Iterable serializerModifiers()
com.google.gson.internal.bind.TypeAdapters$27
    private static final java.lang.String YEAR
    private static final java.lang.String MONTH
    private static final java.lang.String DAY_OF_MONTH
    private static final java.lang.String HOUR_OF_DAY
    private static final java.lang.String MINUTE
    private static final java.lang.String SECOND
com.lidroid.xutils.http.client.multipart.content.ByteArrayBody
com.facebook.imagepipelinebase.R
com.facebook.common.internal.ImmutableSet
net.lemonsoft.lemonbubble.LemonBubbleGlobal
    public void <init>()
org.codehaus.jackson.map.ser.PropertyBuilder
com.lidroid.xutils.bitmap.core.BitmapCache$1
com.google.gson.internal.LinkedHashTreeMap$1
bolts.Bolts
com.facebook.drawee.controller.AbstractDraweeController
    public java.lang.String getId()
    public java.lang.Object getCallerContext()
    public void removeControllerListener(com.facebook.drawee.controller.ControllerListener)
    protected void setControllerOverlay(android.graphics.drawable.Drawable)
    protected android.graphics.drawable.Drawable getControllerOverlay()
org.codehaus.jackson.map.ser.std.NonTypedScalarSerializerBase
    public final void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
org.codehaus.jackson.map.ObjectMapper$2
org.codehaus.jackson.map.ser.StdSerializers$NumberSerializer
    public void serialize(java.lang.Number,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
com.facebook.imagepipeline.image.CloseableAnimatedImage
    public synchronized int getWidth()
    public synchronized int getHeight()
    public synchronized com.facebook.imagepipeline.animated.base.AnimatedImage getImage()
org.codehaus.jackson.map.ext.JodaDeserializers$LocalDateDeserializer
com.lidroid.xutils.DbUtils
butterknife.BindBool
    public abstract int value()
com.example.administrator.igoushop_app_test.pojos.ProductImages
com.example.administrator.igoushop_app_test.R$attr
okhttp3.Cookie
    private void <init>(okhttp3.Cookie$Builder)
    private static boolean pathMatch(okhttp3.HttpUrl,java.lang.String)
    synthetic void <init>(okhttp3.Cookie$Builder,okhttp3.Cookie$1)
    public boolean persistent()
    public long expiresAt()
    public boolean hostOnly()
    public java.lang.String domain()
    public java.lang.String path()
    public boolean httpOnly()
    public boolean secure()
    public boolean matches(okhttp3.HttpUrl)
com.example.administrator.igoushop_app_test.http.OKManager$3
com.lidroid.xutils.http.client.multipart.content.FileBody
com.facebook.imagepipeline.producers.PostprocessedBitmapMemoryCacheProducer
    static final java.lang.String PRODUCER_NAME
    static final java.lang.String VALUE_FOUND
com.lidroid.xutils.task.PriorityAsyncTask$AsyncTaskResult
    varargs void <init>(com.lidroid.xutils.task.PriorityAsyncTask,java.lang.Object[])
org.codehaus.jackson.impl.JsonWriteContext
    public final java.lang.String getCurrentName()
    public final int writeValue()
    public synthetic bridge org.codehaus.jackson.JsonStreamContext getParent()
    public static final int STATUS_OK_AS_IS
    public static final int STATUS_OK_AFTER_COMMA
    public static final int STATUS_OK_AFTER_COLON
    public static final int STATUS_OK_AFTER_SPACE
    public static final int STATUS_EXPECT_VALUE
    public static final int STATUS_EXPECT_NAME
com.facebook.imagepipeline.producers.EncodedMemoryCacheProducer
    static final java.lang.String PRODUCER_NAME
    static final java.lang.String VALUE_FOUND
bolts.WebViewAppLinkResolver$3
com.google.gson.Gson
    public com.google.gson.JsonElement toJsonTree(java.lang.Object)
    public com.google.gson.JsonElement toJsonTree(java.lang.Object,java.lang.reflect.Type)
    public java.lang.String toJson(java.lang.Object)
    public java.lang.String toJson(java.lang.Object,java.lang.reflect.Type)
    public void toJson(java.lang.Object,java.lang.Appendable)
    public void toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable)
    public void toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter)
    public java.lang.String toJson(com.google.gson.JsonElement)
    public void toJson(com.google.gson.JsonElement,java.lang.Appendable)
    public com.google.gson.stream.JsonWriter newJsonWriter(java.io.Writer)
    public void toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter)
    public java.lang.Object fromJson(java.io.Reader,java.lang.Class)
    public java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.Class)
    public java.lang.Object fromJson(com.google.gson.JsonElement,java.lang.reflect.Type)
    static final boolean DEFAULT_JSON_NON_EXECUTABLE
    static final boolean DEFAULT_LENIENT
    static final boolean DEFAULT_PRETTY_PRINT
    static final boolean DEFAULT_ESCAPE_HTML
    static final boolean DEFAULT_SERIALIZE_NULLS
    static final boolean DEFAULT_COMPLEX_MAP_KEYS
    static final boolean DEFAULT_SPECIALIZE_FLOAT_VALUES
    private static final java.lang.String JSON_NON_EXECUTABLE_PREFIX
okhttp3.internal.DiskLruCache$1
com.example.administrator.igoushop_app_test.http.OKManager$Func3
com.facebook.imagepipeline.producers.DecodeProducer
    public static final java.lang.String PRODUCER_NAME
    private static final java.lang.String BITMAP_SIZE_KEY
    private static final java.lang.String HAS_GOOD_QUALITY_KEY
    private static final java.lang.String IMAGE_TYPE_KEY
    private static final java.lang.String IS_FINAL_KEY
com.example.administrator.igoushop_app_test.R$anim
com.squareup.picasso.Utils
    private void <init>()
    static void checkNotMain()
    static final java.lang.String THREAD_PREFIX
    static final java.lang.String THREAD_IDLE_NAME
    static final int DEFAULT_READ_TIMEOUT
    static final int DEFAULT_CONNECT_TIMEOUT
    private static final java.lang.String PICASSO_CACHE
    private static final int KEY_PADDING
    private static final int MIN_DISK_CACHE_SIZE
    private static final int MAX_DISK_CACHE_SIZE
    static final java.lang.String OWNER_MAIN
    static final java.lang.String OWNER_DISPATCHER
    static final java.lang.String OWNER_HUNTER
    static final java.lang.String VERB_CREATED
    static final java.lang.String VERB_CHANGED
    static final java.lang.String VERB_IGNORED
    static final java.lang.String VERB_ENQUEUED
    static final java.lang.String VERB_CANCELED
    static final java.lang.String VERB_BATCHED
    static final java.lang.String VERB_RETRYING
    static final java.lang.String VERB_EXECUTING
    static final java.lang.String VERB_DECODED
    static final java.lang.String VERB_TRANSFORMED
    static final java.lang.String VERB_JOINED
    static final java.lang.String VERB_REMOVED
    static final java.lang.String VERB_DELIVERED
    static final java.lang.String VERB_REPLAYING
    static final java.lang.String VERB_COMPLETED
    static final java.lang.String VERB_ERRORED
    private static final int WEBP_FILE_HEADER_SIZE
    private static final java.lang.String WEBP_FILE_HEADER_RIFF
    private static final java.lang.String WEBP_FILE_HEADER_WEBP
org.codehaus.jackson.io.BaseReader
net.lemonsoft.lemonbubble.R$layout
net.lemonsoft.lemonbubble.R$attr
okhttp3.internal.io.FileSystem
com.lidroid.xutils.bitmap.download.DefaultDownloader
org.codehaus.jackson.Base64Variants
    public void <init>()
    static final java.lang.String STD_BASE64_ALPHABET
com.lidroid.xutils.util.CharsetUtils
com.lidroid.xutils.db.annotation.Check
com.facebook.datasource.DataSource
    public abstract boolean isClosed()
    public abstract boolean hasFailed()
android.support.annotation.AnyRes
org.codehaus.jackson.map.jsontype.impl.AsPropertyTypeSerializer
net.lemonsoft.lemonbubble.R$anim
org.codehaus.jackson.map.BeanProperty$Std
    public java.lang.annotation.Annotation getAnnotation(java.lang.Class)
    public java.lang.annotation.Annotation getContextAnnotation(java.lang.Class)
    public org.codehaus.jackson.type.JavaType getType()
    public org.codehaus.jackson.map.introspect.AnnotatedMember getMember()
org.codehaus.jackson.map.ser.std.StdContainerSerializers$IndexedListSerializer
okhttp3.internal.framed.FramedConnection
    public synchronized int openStreamCount()
    public synchronized boolean isIdle()
    public synchronized long getIdleStartTimeNs()
    public okhttp3.internal.framed.FramedStream pushStream(int,java.util.List,boolean)
    void writeSynReply(int,boolean,java.util.List)
    public okhttp3.internal.framed.Ping ping()
    public void setSettings(okhttp3.internal.framed.Settings)
    private static final int OKHTTP_CLIENT_WINDOW_SIZE
com.facebook.datasource.DataSources
    private void <init>()
com.example.administrator.igoushop_app_test.bean.Tab
    public void setTitle(int)
    public void setIcon(int)
    public void setFragment(java.lang.Class)
com.lidroid.xutils.db.sqlite.FinderLazyLoader
okio.Buffer
    private void readFrom(java.io.InputStream,long,boolean)
    public java.io.OutputStream outputStream()
    public boolean request(long)
    public java.io.InputStream inputStream()
    public okio.Buffer copyTo(java.io.OutputStream)
    public okio.Buffer copyTo(java.io.OutputStream,long,long)
    public okio.Buffer writeTo(java.io.OutputStream)
    public okio.Buffer writeTo(java.io.OutputStream,long)
    public okio.Buffer readFrom(java.io.InputStream)
    public okio.Buffer readFrom(java.io.InputStream,long)
    public long readLong()
    public long readLongLe()
    public long readDecimalLong()
    public void readFully(okio.Buffer,long)
    public long readAll(okio.Sink)
    public java.lang.String readString(java.nio.charset.Charset)
    public java.lang.String readUtf8Line()
    public int readUtf8CodePoint()
    public int read(byte[])
    public okio.Buffer writeString(java.lang.String,java.nio.charset.Charset)
    public okio.Buffer writeString(java.lang.String,int,int,java.nio.charset.Charset)
    public okio.BufferedSink write(okio.Source,long)
    public okio.Buffer writeShortLe(int)
    public okio.Buffer writeIntLe(int)
    public okio.Buffer writeLong(long)
    public okio.Buffer writeLongLe(long)
    public okio.Buffer writeDecimalLong(long)
    public long indexOf(okio.ByteString)
    public long indexOf(okio.ByteString,long)
    public long indexOfElement(okio.ByteString)
    public long indexOfElement(okio.ByteString,long)
    boolean rangeEquals(long,okio.ByteString)
    java.util.List segmentSizes()
    public okio.ByteString snapshot()
    public okio.ByteString snapshot(int)
    public synthetic bridge okio.BufferedSink writeDecimalLong(long)
    public synthetic bridge okio.BufferedSink writeLongLe(long)
    public synthetic bridge okio.BufferedSink writeLong(long)
    public synthetic bridge okio.BufferedSink writeIntLe(int)
    public synthetic bridge okio.BufferedSink writeShortLe(int)
    public synthetic bridge okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset)
    public synthetic bridge okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset)
    public synthetic bridge okio.BufferedSink writeUtf8CodePoint(int)
    public synthetic bridge okio.BufferedSink writeUtf8(java.lang.String,int,int)
    public synthetic bridge okio.BufferedSink write(byte[],int,int)
    static final int REPLACEMENT_CHARACTER
org.codehaus.jackson.map.ser.std.StdJdkSerializers$ClassSerializer
    public void serialize(java.lang.Class,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
okhttp3.internal.http.HeaderParser
    private void <init>()
com.facebook.imagepipelinebase.BuildConfig
com.squareup.picasso.RequestCreator
    void <init>()
    private void performRemoteViewInto(com.squareup.picasso.RemoteViewsAction)
    public com.squareup.picasso.RequestCreator placeholder(android.graphics.drawable.Drawable)
    public com.squareup.picasso.RequestCreator error(android.graphics.drawable.Drawable)
    public com.squareup.picasso.RequestCreator resizeDimen(int,int)
    public com.squareup.picasso.RequestCreator rotate(float)
    public com.squareup.picasso.RequestCreator rotate(float,float,float)
    public com.squareup.picasso.RequestCreator config(android.graphics.Bitmap$Config)
    public com.squareup.picasso.RequestCreator transform(com.squareup.picasso.Transformation)
    public com.squareup.picasso.RequestCreator skipMemoryCache()
    public com.squareup.picasso.RequestCreator noFade()
    public android.graphics.Bitmap get()
    public void fetch()
    public void into(com.squareup.picasso.Target)
    public void into(android.widget.RemoteViews,int,int,android.app.Notification)
    public void into(android.widget.RemoteViews,int,int[])
com.facebook.common.webp.WebpSupportStatus
    public void <init>()
    public static boolean isWebpPlatformSupported(byte[],int,int)
    private static final java.lang.String VP8X_WEBP_BASE64
    private static final int SIMPLE_WEBP_HEADER_LENGTH
    private static final int EXTENDED_WEBP_HEADER_LENGTH
org.codehaus.jackson.impl.Indenter
okhttp3.Handshake
    public static okhttp3.Handshake get(okhttp3.TlsVersion,okhttp3.CipherSuite,java.util.List,java.util.List)
    public okhttp3.TlsVersion tlsVersion()
    public java.security.Principal peerPrincipal()
    public java.util.List localCertificates()
    public java.security.Principal localPrincipal()
com.facebook.imagepipeline.cache.BufferedDiskCache
    static synthetic com.facebook.cache.disk.FileCache access$300(com.facebook.imagepipeline.cache.BufferedDiskCache)
    public bolts.Task contains(com.facebook.cache.common.CacheKey)
    public bolts.Task remove(com.facebook.cache.common.CacheKey)
    public bolts.Task clearAll()
org.codehaus.jackson.map.ser.BeanSerializer
com.example.administrator.igoushop_app_test.pojos.ProductType
    public void setId(java.lang.Integer)
    public void setName(java.lang.String)
    public void setProducts(java.util.Set)
org.codehaus.jackson.JsonLocation
    public java.lang.Object getSourceRef()
    public int getLineNr()
    public int getColumnNr()
    public long getCharOffset()
org.codehaus.jackson.sym.CharsToNameCanonicalizer
    public int bucketCount()
    public int hashSeed()
    public int collisionCount()
    public int maxCollisionLength()
    public static final int HASH_MULT
    protected static final int DEFAULT_TABLE_SIZE
    protected static final int MAX_TABLE_SIZE
    static final int MAX_ENTRIES_FOR_REUSE
    static final int MAX_COLL_CHAIN_LENGTH
    static final int MAX_COLL_CHAIN_FOR_REUSE
com.lidroid.xutils.http.client.multipart.content.ContentBody
com.lidroid.xutils.R
okio.ForwardingTimeout
    public long timeoutNanos()
com.daimajia.slider.library.Transformers.ZoomOutSlideTransformer
    private static final float MIN_SCALE
    private static final float MIN_ALPHA
org.codehaus.jackson.annotate.JsonMethod
    public boolean creatorEnabled()
    public boolean getterEnabled()
    public boolean isGetterEnabled()
    public boolean setterEnabled()
    public boolean fieldEnabled()
com.daimajia.slider.library.Transformers.DepthPageTransformer
    private static final float MIN_SCALE
org.codehaus.jackson.util.BufferRecycler
    public final void releaseByteBuffer(org.codehaus.jackson.util.BufferRecycler$ByteBufferType,byte[])
    public static final int DEFAULT_WRITE_CONCAT_BUFFER_LEN
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Empty
com.lidroid.xutils.view.annotation.event.OnItemSelected
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyStringChecker
org.codehaus.jackson.map.ser.std.SerializableSerializer
bolts.AggregateException
com.facebook.imagepipeline.memory.PoolFactory
    public com.facebook.imagepipeline.memory.SharedByteArray getSharedByteArray()
    private com.facebook.imagepipeline.memory.SharedByteArray mSharedByteArray
org.codehaus.jackson.map.InjectableValues$Std
com.nineoldandroids.view.ViewPropertyAnimatorICS
    void <init>(android.view.View)
    public com.nineoldandroids.view.ViewPropertyAnimator setDuration(long)
    public long getDuration()
    public com.nineoldandroids.view.ViewPropertyAnimator setStartDelay(long)
    public long getStartDelay()
    public com.nineoldandroids.view.ViewPropertyAnimator setInterpolator(android.view.animation.Interpolator)
    public com.nineoldandroids.view.ViewPropertyAnimator setListener(com.nineoldandroids.animation.Animator$AnimatorListener)
    public void start()
    public void cancel()
    public com.nineoldandroids.view.ViewPropertyAnimator x(float)
    public com.nineoldandroids.view.ViewPropertyAnimator xBy(float)
    public com.nineoldandroids.view.ViewPropertyAnimator y(float)
    public com.nineoldandroids.view.ViewPropertyAnimator yBy(float)
    public com.nineoldandroids.view.ViewPropertyAnimator rotation(float)
    public com.nineoldandroids.view.ViewPropertyAnimator rotationBy(float)
    public com.nineoldandroids.view.ViewPropertyAnimator rotationX(float)
    public com.nineoldandroids.view.ViewPropertyAnimator rotationXBy(float)
    public com.nineoldandroids.view.ViewPropertyAnimator rotationY(float)
    public com.nineoldandroids.view.ViewPropertyAnimator rotationYBy(float)
    public com.nineoldandroids.view.ViewPropertyAnimator translationX(float)
    public com.nineoldandroids.view.ViewPropertyAnimator translationXBy(float)
    public com.nineoldandroids.view.ViewPropertyAnimator translationY(float)
    public com.nineoldandroids.view.ViewPropertyAnimator translationYBy(float)
    public com.nineoldandroids.view.ViewPropertyAnimator scaleX(float)
    public com.nineoldandroids.view.ViewPropertyAnimator scaleXBy(float)
    public com.nineoldandroids.view.ViewPropertyAnimator scaleY(float)
    public com.nineoldandroids.view.ViewPropertyAnimator scaleYBy(float)
    public com.nineoldandroids.view.ViewPropertyAnimator alpha(float)
    public com.nineoldandroids.view.ViewPropertyAnimator alphaBy(float)
    private final java.lang.ref.WeakReference mNative
    private static final long RETURN_WHEN_NULL
com.facebook.common.util.Hex
org.codehaus.jackson.node.TreeTraversingParser
com.kaopiz.kprogresshud.R
android.support.design.widget.DrawableUtils
    private void <init>()
    private static final java.lang.String LOG_TAG
com.google.gson.LongSerializationPolicy$1
    public com.google.gson.JsonElement serialize(java.lang.Long)
android.support.design.R$attr
    private void <init>()
com.google.gson.internal.LinkedHashTreeMap$EntrySet
com.nineoldandroids.animation.ValueAnimator
    public static varargs com.nineoldandroids.animation.ValueAnimator ofInt(int[])
    public static varargs com.nineoldandroids.animation.ValueAnimator ofFloat(float[])
    public static varargs com.nineoldandroids.animation.ValueAnimator ofPropertyValuesHolder(com.nineoldandroids.animation.PropertyValuesHolder[])
    public static varargs com.nineoldandroids.animation.ValueAnimator ofObject(com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])
    public static long getFrameDelay()
    public static void setFrameDelay(long)
    public static int getCurrentAnimationsCount()
    public static void clearAllAnimations()
    public varargs void setObjectValues(java.lang.Object[])
    public com.nineoldandroids.animation.PropertyValuesHolder[] getValues()
    public long getDuration()
    public long getStartDelay()
    public void setStartDelay(long)
    public java.lang.Object getAnimatedValue(java.lang.String)
    public int getRepeatCount()
    public int getRepeatMode()
    public void removeAllUpdateListeners()
    public void removeUpdateListener(com.nineoldandroids.animation.ValueAnimator$AnimatorUpdateListener)
    public android.view.animation.Interpolator getInterpolator()
    public void setEvaluator(com.nineoldandroids.animation.TypeEvaluator)
    public void cancel()
    public void end()
    public boolean isRunning()
    public boolean isStarted()
    public void reverse()
    public float getAnimatedFraction()
    public synthetic bridge com.nineoldandroids.animation.Animator setDuration(long)
    private static final long DEFAULT_FRAME_DELAY
    static final int ANIMATION_START
    static final int ANIMATION_FRAME
    static final int STOPPED
    static final int RUNNING
    static final int SEEKED
    public static final int RESTART
    public static final int REVERSE
    public static final int INFINITE
com.squareup.picasso.Callback$EmptyCallback
com.squareup.picasso.LruCache
    public final void evictAll()
    public final synchronized void clear()
    public final synchronized int hitCount()
    public final synchronized int missCount()
    public final synchronized int putCount()
    public final synchronized int evictionCount()
org.codehaus.jackson.map.annotate.JsonSerialize
    public abstract java.lang.Class using()
    public abstract java.lang.Class contentUsing()
    public abstract java.lang.Class keyUsing()
    public abstract java.lang.Class as()
    public abstract java.lang.Class keyAs()
    public abstract java.lang.Class contentAs()
    public abstract org.codehaus.jackson.map.annotate.JsonSerialize$Typing typing()
    public abstract org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion include()
org.codehaus.jackson.map.ser.std.EnumSerializer
butterknife.OnClick
    public abstract int[] value()
com.daimajia.slider.library.SliderTypes.BaseSliderView
    public com.daimajia.slider.library.SliderTypes.BaseSliderView empty(int)
    public com.daimajia.slider.library.SliderTypes.BaseSliderView errorDisappear(boolean)
    public com.daimajia.slider.library.SliderTypes.BaseSliderView error(int)
    public com.daimajia.slider.library.SliderTypes.BaseSliderView image(java.io.File)
    public com.daimajia.slider.library.SliderTypes.BaseSliderView image(int)
    public com.daimajia.slider.library.SliderTypes.BaseSliderView bundle(android.os.Bundle)
    public java.lang.String getUrl()
    public com.daimajia.slider.library.SliderTypes.BaseSliderView setOnSliderClickListener(com.daimajia.slider.library.SliderTypes.BaseSliderView$OnSliderClickListener)
    public com.daimajia.slider.library.SliderTypes.BaseSliderView setScaleType(com.daimajia.slider.library.SliderTypes.BaseSliderView$ScaleType)
    public com.daimajia.slider.library.SliderTypes.BaseSliderView$ScaleType getScaleType()
    public android.os.Bundle getBundle()
    public com.squareup.picasso.Picasso getPicasso()
    public void setPicasso(com.squareup.picasso.Picasso)
    private android.os.Bundle mBundle
com.lidroid.xutils.bitmap.BitmapCommonUtils
com.example.administrator.igoushop_app_test.widget.DataUtils
    public void <init>()
android.support.design.R$anim
    private void <init>()
org.codehaus.jackson.map.ser.StdSerializers$DoubleSerializer
    public void serialize(java.lang.Double,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
okhttp3.internal.Platform$Android
    public void log(java.lang.String)
    private static final int MAX_LOG_LENGTH
org.codehaus.jackson.map.deser.SettableBeanProperty$InnerClassProperty
    public java.lang.annotation.Annotation getAnnotation(java.lang.Class)
android.support.design.widget.ThemeUtils
    void <init>()
org.codehaus.jackson.map.JsonMappingException$Reference
    public void <init>(java.lang.Object)
    public void <init>(java.lang.Object,int)
    public void setFrom(java.lang.Object)
    public void setFieldName(java.lang.String)
    public void setIndex(int)
    public java.lang.Object getFrom()
    public java.lang.String getFieldName()
    public int getIndex()
com.daimajia.swipe.interfaces.SwipeItemMangerInterface
    public abstract void openItem(int)
    public abstract void closeItem(int)
    public abstract void closeAllExcept(com.daimajia.swipe.SwipeLayout)
    public abstract void closeAllItems()
    public abstract java.util.List getOpenItems()
    public abstract java.util.List getOpenLayouts()
    public abstract void removeShownLayouts(com.daimajia.swipe.SwipeLayout)
    public abstract boolean isOpen(int)
    public abstract com.daimajia.swipe.util.Attributes$Mode getMode()
    public abstract void setMode(com.daimajia.swipe.util.Attributes$Mode)
org.codehaus.jackson.map.ser.std.StdKeySerializers$DateKeySerializer
org.codehaus.jackson.map.ext.CoreXMLDeserializers$GregorianCalendarDeserializer
org.codehaus.jackson.map.Module
com.lidroid.xutils.db.converter.LongColumnConverter
org.codehaus.jackson.map.introspect.VisibilityChecker
    public abstract org.codehaus.jackson.map.introspect.VisibilityChecker with(org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    public abstract org.codehaus.jackson.map.introspect.VisibilityChecker withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    public abstract boolean isGetterVisible(java.lang.reflect.Method)
    public abstract boolean isIsGetterVisible(java.lang.reflect.Method)
    public abstract boolean isSetterVisible(java.lang.reflect.Method)
    public abstract boolean isCreatorVisible(java.lang.reflect.Member)
    public abstract boolean isFieldVisible(java.lang.reflect.Field)
com.facebook.drawee.drawable.DrawableProperties
    private static final int UNSET
okhttp3.CacheControl$Builder
    public okhttp3.CacheControl$Builder noStore()
    public okhttp3.CacheControl$Builder maxAge(int,java.util.concurrent.TimeUnit)
    public okhttp3.CacheControl$Builder minFresh(int,java.util.concurrent.TimeUnit)
    public okhttp3.CacheControl$Builder noTransform()
com.squareup.picasso.GetAction
butterknife.BindDrawable
    public abstract int value()
    public abstract int tint()
org.codehaus.jackson.node.DecimalNode
    public org.codehaus.jackson.JsonToken asToken()
    public org.codehaus.jackson.JsonParser$NumberType getNumberType()
    public boolean isFloatingPointNumber()
    public boolean isBigDecimal()
    public java.lang.Number getNumberValue()
    public int getIntValue()
    public long getLongValue()
    public java.math.BigInteger getBigIntegerValue()
    public double getDoubleValue()
    public java.math.BigDecimal getDecimalValue()
    public final void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
org.codehaus.jackson.map.ObjectMapper
    public void <init>(org.codehaus.jackson.map.SerializerFactory)
    private final void _configAndWriteCloseable(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)
    private final void _writeCloseableValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)
    public org.codehaus.jackson.Version version()
    public void registerModule(org.codehaus.jackson.map.Module)
    public org.codehaus.jackson.map.ObjectMapper withModule(org.codehaus.jackson.map.Module)
    public org.codehaus.jackson.map.SerializationConfig getSerializationConfig()
    public org.codehaus.jackson.map.SerializationConfig copySerializationConfig()
    public org.codehaus.jackson.map.ObjectMapper setSerializationConfig(org.codehaus.jackson.map.SerializationConfig)
    public org.codehaus.jackson.map.DeserializationConfig getDeserializationConfig()
    public org.codehaus.jackson.map.ObjectMapper setDeserializationConfig(org.codehaus.jackson.map.DeserializationConfig)
    public org.codehaus.jackson.map.ObjectMapper setSerializerFactory(org.codehaus.jackson.map.SerializerFactory)
    public org.codehaus.jackson.map.ObjectMapper setSerializerProvider(org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.map.SerializerProvider getSerializerProvider()
    public org.codehaus.jackson.map.ObjectMapper setDeserializerProvider(org.codehaus.jackson.map.DeserializerProvider)
    public org.codehaus.jackson.map.DeserializerProvider getDeserializerProvider()
    public org.codehaus.jackson.map.introspect.VisibilityChecker getVisibilityChecker()
    public void setVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)
    public org.codehaus.jackson.map.ObjectMapper setVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    public org.codehaus.jackson.map.jsontype.SubtypeResolver getSubtypeResolver()
    public void setSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    public org.codehaus.jackson.map.ObjectMapper setAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public org.codehaus.jackson.map.ObjectMapper setPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)
    public org.codehaus.jackson.map.ObjectMapper setSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)
    public org.codehaus.jackson.map.ObjectMapper enableDefaultTyping()
    public org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping)
    public org.codehaus.jackson.map.ObjectMapper enableDefaultTyping(org.codehaus.jackson.map.ObjectMapper$DefaultTyping,org.codehaus.jackson.annotate.JsonTypeInfo$As)
    public org.codehaus.jackson.map.ObjectMapper enableDefaultTypingAsProperty(org.codehaus.jackson.map.ObjectMapper$DefaultTyping,java.lang.String)
    public org.codehaus.jackson.map.ObjectMapper disableDefaultTyping()
    public org.codehaus.jackson.map.ObjectMapper setDefaultTyping(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)
    public varargs void registerSubtypes(java.lang.Class[])
    public varargs void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[])
    public org.codehaus.jackson.map.ObjectMapper setTypeFactory(org.codehaus.jackson.map.type.TypeFactory)
    public org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type)
    public org.codehaus.jackson.map.ObjectMapper setNodeFactory(org.codehaus.jackson.node.JsonNodeFactory)
    public void setFilters(org.codehaus.jackson.map.ser.FilterProvider)
    public org.codehaus.jackson.JsonFactory getJsonFactory()
    public void setDateFormat(java.text.DateFormat)
    public void setHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)
    public org.codehaus.jackson.map.ObjectMapper setInjectableValues(org.codehaus.jackson.map.InjectableValues)
    public org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)
    public org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.map.DeserializationConfig$Feature,boolean)
    public org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.JsonParser$Feature,boolean)
    public org.codehaus.jackson.map.ObjectMapper configure(org.codehaus.jackson.JsonGenerator$Feature,boolean)
    public varargs org.codehaus.jackson.map.ObjectMapper enable(org.codehaus.jackson.map.DeserializationConfig$Feature[])
    public varargs org.codehaus.jackson.map.ObjectMapper disable(org.codehaus.jackson.map.DeserializationConfig$Feature[])
    public varargs org.codehaus.jackson.map.ObjectMapper enable(org.codehaus.jackson.map.SerializationConfig$Feature[])
    public varargs org.codehaus.jackson.map.ObjectMapper disable(org.codehaus.jackson.map.SerializationConfig$Feature[])
    public boolean isEnabled(org.codehaus.jackson.map.SerializationConfig$Feature)
    public boolean isEnabled(org.codehaus.jackson.map.DeserializationConfig$Feature)
    public boolean isEnabled(org.codehaus.jackson.JsonParser$Feature)
    public boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)
    public org.codehaus.jackson.node.JsonNodeFactory getNodeFactory()
    public java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class)
    public java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference)
    public java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser)
    public org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,java.lang.Class)
    public org.codehaus.jackson.map.MappingIterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference)
    public java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class,org.codehaus.jackson.map.DeserializationConfig)
    public java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference,org.codehaus.jackson.map.DeserializationConfig)
    public java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.DeserializationConfig)
    public org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationConfig)
    public org.codehaus.jackson.JsonNode readTree(java.io.InputStream)
    public org.codehaus.jackson.JsonNode readTree(java.io.Reader)
    public org.codehaus.jackson.JsonNode readTree(java.lang.String)
    public org.codehaus.jackson.JsonNode readTree(byte[])
    public org.codehaus.jackson.JsonNode readTree(java.io.File)
    public org.codehaus.jackson.JsonNode readTree(java.net.URL)
    public void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)
    public void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializationConfig)
    public void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode)
    public void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode,org.codehaus.jackson.map.SerializationConfig)
    public org.codehaus.jackson.node.ObjectNode createObjectNode()
    public org.codehaus.jackson.node.ArrayNode createArrayNode()
    public org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode)
    public java.lang.Object treeToValue(org.codehaus.jackson.JsonNode,java.lang.Class)
    public org.codehaus.jackson.JsonNode valueToTree(java.lang.Object)
    public boolean canSerialize(java.lang.Class)
    public boolean canDeserialize(org.codehaus.jackson.type.JavaType)
    public java.lang.Object readValue(java.io.File,java.lang.Class)
    public java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.TypeReference)
    public java.lang.Object readValue(java.io.File,org.codehaus.jackson.type.JavaType)
    public java.lang.Object readValue(java.net.URL,java.lang.Class)
    public java.lang.Object readValue(java.net.URL,org.codehaus.jackson.type.TypeReference)
    public java.lang.Object readValue(java.net.URL,org.codehaus.jackson.type.JavaType)
    public java.lang.Object readValue(java.lang.String,java.lang.Class)
    public java.lang.Object readValue(java.lang.String,org.codehaus.jackson.type.TypeReference)
    public java.lang.Object readValue(java.io.Reader,java.lang.Class)
    public java.lang.Object readValue(java.io.Reader,org.codehaus.jackson.type.TypeReference)
    public java.lang.Object readValue(java.io.Reader,org.codehaus.jackson.type.JavaType)
    public java.lang.Object readValue(java.io.InputStream,java.lang.Class)
    public java.lang.Object readValue(java.io.InputStream,org.codehaus.jackson.type.TypeReference)
    public java.lang.Object readValue(java.io.InputStream,org.codehaus.jackson.type.JavaType)
    public java.lang.Object readValue(byte[],java.lang.Class)
    public java.lang.Object readValue(byte[],int,int,java.lang.Class)
    public java.lang.Object readValue(byte[],org.codehaus.jackson.type.TypeReference)
    public java.lang.Object readValue(byte[],int,int,org.codehaus.jackson.type.TypeReference)
    public java.lang.Object readValue(byte[],org.codehaus.jackson.type.JavaType)
    public java.lang.Object readValue(byte[],int,int,org.codehaus.jackson.type.JavaType)
    public java.lang.Object readValue(org.codehaus.jackson.JsonNode,java.lang.Class)
    public java.lang.Object readValue(org.codehaus.jackson.JsonNode,org.codehaus.jackson.type.TypeReference)
    public java.lang.Object readValue(org.codehaus.jackson.JsonNode,org.codehaus.jackson.type.JavaType)
    public void writeValue(java.io.File,java.lang.Object)
    public void writeValue(java.io.OutputStream,java.lang.Object)
    public void writeValue(java.io.Writer,java.lang.Object)
    public java.lang.String writeValueAsString(java.lang.Object)
    public byte[] writeValueAsBytes(java.lang.Object)
    public org.codehaus.jackson.map.ObjectWriter writer()
    public org.codehaus.jackson.map.ObjectWriter writer(java.text.DateFormat)
    public org.codehaus.jackson.map.ObjectWriter writerWithView(java.lang.Class)
    public org.codehaus.jackson.map.ObjectWriter writerWithType(java.lang.Class)
    public org.codehaus.jackson.map.ObjectWriter writerWithType(org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.map.ObjectWriter writerWithType(org.codehaus.jackson.type.TypeReference)
    public org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.PrettyPrinter)
    public org.codehaus.jackson.map.ObjectWriter writerWithDefaultPrettyPrinter()
    public org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.map.ser.FilterProvider)
    public org.codehaus.jackson.map.ObjectWriter writer(org.codehaus.jackson.FormatSchema)
    public org.codehaus.jackson.map.ObjectWriter typedWriter(java.lang.Class)
    public org.codehaus.jackson.map.ObjectWriter typedWriter(org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.map.ObjectWriter typedWriter(org.codehaus.jackson.type.TypeReference)
    public org.codehaus.jackson.map.ObjectWriter viewWriter(java.lang.Class)
    public org.codehaus.jackson.map.ObjectWriter prettyPrintingWriter(org.codehaus.jackson.PrettyPrinter)
    public org.codehaus.jackson.map.ObjectWriter defaultPrettyPrintingWriter()
    public org.codehaus.jackson.map.ObjectWriter filteredWriter(org.codehaus.jackson.map.ser.FilterProvider)
    public org.codehaus.jackson.map.ObjectWriter schemaBasedWriter(org.codehaus.jackson.FormatSchema)
    public org.codehaus.jackson.map.ObjectReader reader()
    public org.codehaus.jackson.map.ObjectReader readerForUpdating(java.lang.Object)
    public org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.map.ObjectReader reader(java.lang.Class)
    public org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.type.TypeReference)
    public org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.node.JsonNodeFactory)
    public org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.FormatSchema)
    public org.codehaus.jackson.map.ObjectReader reader(org.codehaus.jackson.map.InjectableValues)
    public org.codehaus.jackson.map.ObjectReader updatingReader(java.lang.Object)
    public org.codehaus.jackson.map.ObjectReader schemaBasedReader(org.codehaus.jackson.FormatSchema)
    public java.lang.Object convertValue(java.lang.Object,java.lang.Class)
    public java.lang.Object convertValue(java.lang.Object,org.codehaus.jackson.type.TypeReference)
    public java.lang.Object convertValue(java.lang.Object,org.codehaus.jackson.type.JavaType)
    protected java.lang.Object _convert(java.lang.Object,org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class)
    public org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig)
    protected org.codehaus.jackson.PrettyPrinter _defaultPrettyPrinter()
    protected final void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)
    protected final void _configAndWriteValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,java.lang.Class)
    protected java.lang.Object _readValue(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)
    public synthetic bridge org.codehaus.jackson.JsonNode createArrayNode()
    public synthetic bridge org.codehaus.jackson.JsonNode createObjectNode()
    public synthetic bridge java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)
    public synthetic bridge java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference)
    public synthetic bridge java.util.Iterator readValues(org.codehaus.jackson.JsonParser,java.lang.Class)
org.codehaus.jackson.format.DataFormatDetector
org.codehaus.jackson.map.ser.std.StdContainerSerializers
com.facebook.drawee.drawable.ScalingUtils
    public void <init>()
com.lidroid.xutils.db.converter.FloatColumnConverter
org.codehaus.jackson.map.ser.std.SerializerBase
    protected void <init>(org.codehaus.jackson.type.JavaType)
    public final java.lang.Class handledType()
    public abstract void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    protected org.codehaus.jackson.node.ObjectNode createObjectNode()
    protected org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String)
    protected org.codehaus.jackson.node.ObjectNode createSchemaNode(java.lang.String,boolean)
    protected boolean isDefaultSerializer(org.codehaus.jackson.map.JsonSerializer)
    public void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)
    public void wrapAndThrow(org.codehaus.jackson.map.SerializerProvider,java.lang.Throwable,java.lang.Object,int)
    public void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)
    public void wrapAndThrow(java.lang.Throwable,java.lang.Object,int)
com.daimajia.slider.library.Transformers.RotateDownTransformer
    private static final float ROT_MOD
org.codehaus.jackson.util.TextBuffer
    public boolean hasTextAsCharacters()
    public void ensureNotShared()
    public void append(char)
    public void append(java.lang.String,int,int)
    public char[] expandCurrentSegment()
    static final int MIN_SEGMENT_LEN
    static final int MAX_SEGMENT_LEN
com.lidroid.xutils.http.callback.HttpRedirectHandler
org.codehaus.jackson.map.util.ObjectBuffer
    public int bufferedSize()
    static final int INITIAL_CHUNK_SIZE
    static final int SMALL_CHUNK_SIZE
    static final int MAX_CHUNK_SIZE
android.support.design.BuildConfig
android.support.annotation.DrawableRes
org.codehaus.jackson.map.ser.StdSerializers$UtilDateSerializer
com.facebook.imagepipeline.animated.util.AnimatedDrawableUtil
    private static final int MIN_FRAME_DURATION_MS
    private static final int FRAME_DURATION_MS_FOR_MIN
com.google.gson.LongSerializationPolicy
    public abstract com.google.gson.JsonElement serialize(java.lang.Long)
com.lidroid.xutils.HttpUtils
android.support.design.widget.TabLayout$Tab
    public java.lang.Object getTag()
    public android.support.design.widget.TabLayout$Tab setTag(java.lang.Object)
    public android.support.design.widget.TabLayout$Tab setIcon(int)
    public android.support.design.widget.TabLayout$Tab setText(int)
    public boolean isSelected()
    public android.support.design.widget.TabLayout$Tab setContentDescription(int)
    public android.support.design.widget.TabLayout$Tab setContentDescription(java.lang.CharSequence)
    public static final int INVALID_POSITION
org.codehaus.jackson.node.NumericNode
    public final boolean isNumber()
    public abstract org.codehaus.jackson.JsonParser$NumberType getNumberType()
    public abstract java.lang.Number getNumberValue()
    public abstract int getIntValue()
    public abstract long getLongValue()
    public abstract double getDoubleValue()
    public abstract java.math.BigDecimal getDecimalValue()
    public abstract java.math.BigInteger getBigIntegerValue()
    public abstract java.lang.String asText()
    public int asInt()
    public int asInt(int)
    public long asLong()
    public long asLong(long)
    public double asDouble()
    public double asDouble(double)
org.codehaus.jackson.map.ser.PropertyBuilder$1
com.facebook.imagepipeline.producers.JobScheduler$JobStartExecutorSupplier
    void <init>()
org.codehaus.jackson.Base64Variant
    public java.lang.String getName()
    public byte getPaddingByte()
    public int decodeBase64Char(int)
    public int decodeBase64Byte(byte)
    public char encodeBase64BitsAsChar(int)
    public int encodeBase64Chunk(int,char[],int)
    public int encodeBase64Partial(int,int,char[],int)
    public byte encodeBase64BitsAsByte(int)
    public int encodeBase64Chunk(int,byte[],int)
    public int encodeBase64Partial(int,int,byte[],int)
    public java.lang.String encode(byte[])
    static final char PADDING_CHAR_NONE
    public static final int BASE64_VALUE_INVALID
    public static final int BASE64_VALUE_PADDING
com.squareup.picasso.Downloader$Response
    public void <init>(android.graphics.Bitmap,boolean)
    public void <init>(java.io.InputStream,boolean)
    public void <init>(android.graphics.Bitmap,boolean,long)
com.facebook.imagepipeline.cache.CacheKeyFactory
    public abstract android.net.Uri getCacheKeySourceUri(android.net.Uri)
org.codehaus.jackson.node.TextNode
    public org.codehaus.jackson.JsonToken asToken()
    public boolean isTextual()
    public java.lang.String getTextValue()
    public byte[] getBinaryValue(org.codehaus.jackson.Base64Variant)
    public byte[] getBinaryValue()
    public boolean asBoolean(boolean)
    public int asInt(int)
    public long asLong(long)
    public double asDouble(double)
    public final void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    protected void _reportInvalidBase64(org.codehaus.jackson.Base64Variant,char,int)
    protected void _reportInvalidBase64(org.codehaus.jackson.Base64Variant,char,int,java.lang.String)
    protected void _reportBase64EOF()
    static final int INT_SPACE
android.support.annotation.DimenRes
butterknife.internal.Utils
com.lidroid.xutils.db.annotation.NotNull
com.lidroid.xutils.db.annotation.Unique
com.facebook.common.util.HashCodeUtil
    public void <init>()
    public static int hashCode(java.lang.Object)
    public static int hashCode(java.lang.Object,java.lang.Object)
    public static int hashCode(java.lang.Object,java.lang.Object,java.lang.Object)
    public static int hashCode(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
    public static int hashCode(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
    public static int hashCode(int)
    public static int hashCode(int,int)
    public static int hashCode(int,int,int)
    public static int hashCode(int,int,int,int)
    public static int hashCode(int,int,int,int,int)
    private static final int X
com.daimajia.slider.library.Transformers.RotateUpTransformer
    private static final float ROT_MOD
butterknife.ButterKnife$Setter
    public abstract void set(android.view.View,java.lang.Object,int)
com.example.administrator.igoushop_app_test.pojos.Cart
    public java.lang.Integer getUserinfo_id()
    public void setUserinfo_id(java.lang.Integer)
    public void setProduct(com.example.administrator.igoushop_app_test.pojos.Product)
    public void setId(java.lang.Integer)
    public com.example.administrator.igoushop_app_test.pojos.UserInfo getUser()
    public void setUser(com.example.administrator.igoushop_app_test.pojos.UserInfo)
    public double getTotalPrice()
    public void setTotalPrice(double)
    private java.lang.Integer userinfo_id
com.lidroid.xutils.db.table.Column
com.lidroid.xutils.http.client.multipart.MultipartEntity$CallBackInfo
com.facebook.imagepipeline.image.CloseableAnimatedBitmap
org.codehaus.jackson.sym.Name1
org.codehaus.jackson.map.ext.CoreXMLDeserializers$QNameDeserializer
butterknife.ButterKnife$Action
    public abstract void apply(android.view.View,int)
android.support.graphics.drawable.PathParser$PathDataNode
    public void interpolatePathDataNode(android.support.graphics.drawable.PathParser$PathDataNode,android.support.graphics.drawable.PathParser$PathDataNode,float)
com.example.administrator.igoushop_app_test.pojos.Product
    public int getIsSale()
    public void setIsSale(int)
    public void setImgUrl(java.lang.String)
    public void setPrice(double)
    public java.lang.String getModel()
    public void setModel(java.lang.String)
    public void setMarketDate(java.lang.String)
    public void setId(java.lang.Integer)
    public void setName(java.lang.String)
    public void setSaleNum(int)
    public void setAddress(java.lang.String)
    public void setSizes(java.util.Set)
    public com.example.administrator.igoushop_app_test.pojos.Brand getBrands()
    public void setBrands(com.example.administrator.igoushop_app_test.pojos.Brand)
    public void setAttribute(com.example.administrator.igoushop_app_test.pojos.Attribute)
    public java.util.Set getImages()
    public void setImages(java.util.Set)
    public com.example.administrator.igoushop_app_test.pojos.ProductType getType()
    public void setType(com.example.administrator.igoushop_app_test.pojos.ProductType)
org.codehaus.jackson.sym.Name
    protected void <init>(java.lang.String,int)
    public java.lang.String getName()
    public abstract boolean equals(int)
    public abstract boolean equals(int,int)
    public abstract boolean equals(int[],int)
    public java.lang.String toString()
    public final int hashCode()
    public boolean equals(java.lang.Object)
    protected final java.lang.String _name
    protected final int _hashCode
com.lidroid.xutils.http.HttpHandler$1
com.kaopiz.kprogresshud.KProgressHUD
    public com.kaopiz.kprogresshud.KProgressHUD setWindowColor(int)
    public com.kaopiz.kprogresshud.KProgressHUD setCornerRadius(float)
    public com.kaopiz.kprogresshud.KProgressHUD setDetailsLabel(java.lang.String)
    public com.kaopiz.kprogresshud.KProgressHUD setMaxProgress(int)
    public void setProgress(int)
    public com.kaopiz.kprogresshud.KProgressHUD setCustomView(android.view.View)
    public com.kaopiz.kprogresshud.KProgressHUD setAutoDismiss(boolean)
net.lemonsoft.lemonbubble.R$bool
com.nineoldandroids.view.ViewHelper$Honeycomb
    private void <init>()
    static float getAlpha(android.view.View)
    static float getPivotX(android.view.View)
    static float getPivotY(android.view.View)
    static float getRotation(android.view.View)
    static float getRotationX(android.view.View)
    static float getRotationY(android.view.View)
    static float getScaleX(android.view.View)
    static float getScaleY(android.view.View)
    static float getScrollX(android.view.View)
    static void setScrollX(android.view.View,int)
    static float getScrollY(android.view.View)
    static void setScrollY(android.view.View,int)
    static float getTranslationX(android.view.View)
    static float getTranslationY(android.view.View)
    static float getX(android.view.View)
    static void setX(android.view.View,float)
    static void setY(android.view.View,float)
org.codehaus.jackson.map.deser.std.ObjectArrayDeserializer
    public org.codehaus.jackson.type.JavaType getContentType()
org.codehaus.jackson.map.ser.ToStringSerializer
okhttp3.RealCall
    public okhttp3.Request request()
    public okhttp3.Response execute()
    java.lang.Object tag()
    public void cancel()
    public synchronized boolean isExecuted()
    public boolean isCanceled()
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyMapChecker
com.facebook.imagepipeline.cache.MemoryCache
    public abstract int removeAll(com.android.internal.util.Predicate)
    public abstract boolean contains(com.android.internal.util.Predicate)
com.google.gson.internal.LinkedHashTreeMap$LinkedTreeMapIterator
com.google.gson.JsonParser
com.lidroid.xutils.cache.LruDiskCache$2
com.facebook.common.references.CloseableReference
    public synchronized com.facebook.common.references.SharedReference getUnderlyingReferenceTestOnly()
org.codehaus.jackson.map.ser.StdSerializers$SqlTimeSerializer
    public void serialize(java.sql.Time,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
com.facebook.imagepipeline.datasource.BaseListBitmapDataSubscriber
com.facebook.common.activitylistener.BaseActivityListener
    public void onActivityCreate(android.app.Activity)
    public void onStop(android.app.Activity)
    public void onStart(android.app.Activity)
    public void onDestroy(android.app.Activity)
    public void onPause(android.app.Activity)
    public void onResume(android.app.Activity)
com.lidroid.xutils.db.sqlite.CursorUtils$EntityTempCache
com.facebook.common.internal.ImmutableMap
    private void <init>(java.util.Map)
    public static java.util.Map of()
    public static java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
    public static java.util.Map of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)
    public static com.facebook.common.internal.ImmutableMap copyOf(java.util.Map)
com.facebook.imagepipeline.core.ImagePipeline$6
com.lidroid.xutils.db.sqlite.WhereBuilder
com.lidroid.xutils.http.HttpHandler
org.codehaus.jackson.util.DefaultPrettyPrinter$NopIndenter
org.codehaus.jackson.map.deser.std.StdValueInstantiator
    public void <init>(org.codehaus.jackson.map.DeserializationConfig,java.lang.Class)
    protected void <init>(org.codehaus.jackson.map.deser.std.StdValueInstantiator)
    public org.codehaus.jackson.map.introspect.AnnotatedWithParams getWithArgsCreator()
com.lidroid.xutils.db.converter.DoubleColumnConverter
org.codehaus.jackson.map.deser.BasicDeserializerFactory
    public abstract org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config)
okhttp3.internal.http.Http1xStream$ChunkedSource
    private static final long NO_CHUNK_YET
com.facebook.common.internal.Suppliers
android.support.design.widget.ViewUtils
    void <init>()
com.lidroid.xutils.http.client.entity.DecompressingEntity
android.support.design.widget.Snackbar$Duration
bolts.Task$4
com.lidroid.xutils.db.converter.ByteColumnConverter
com.facebook.imagepipeline.cache.BufferedDiskCache$1
com.nineoldandroids.animation.PropertyValuesHolder
    public static varargs com.nineoldandroids.animation.PropertyValuesHolder ofObject(java.lang.String,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])
    public static varargs com.nineoldandroids.animation.PropertyValuesHolder ofObject(com.nineoldandroids.util.Property,com.nineoldandroids.animation.TypeEvaluator,java.lang.Object[])
    public static varargs com.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(java.lang.String,com.nineoldandroids.animation.Keyframe[])
    public static varargs com.nineoldandroids.animation.PropertyValuesHolder ofKeyframe(com.nineoldandroids.util.Property,com.nineoldandroids.animation.Keyframe[])
    private void setupValue(java.lang.Object,com.nineoldandroids.animation.Keyframe)
    public varargs void setKeyframes(com.nineoldandroids.animation.Keyframe[])
    public varargs void setObjectValues(java.lang.Object[])
    void setupStartValue(java.lang.Object)
    void setupEndValue(java.lang.Object)
    public void setEvaluator(com.nineoldandroids.animation.TypeEvaluator)
com.nineoldandroids.view.ViewPropertyAnimatorHC$PropertyBundle
net.lemonsoft.lemonbubble.R$styleable
android.support.design.widget.AppBarLayout$Behavior$DragCallback
    public void <init>()
org.codehaus.jackson.map.deser.ArrayDeserializer
com.squareup.picasso.UrlConnectionDownloader
    static final java.lang.String RESPONSE_SOURCE
android.support.design.R$drawable
org.codehaus.jackson.map.ser.impl.SerializerCache$TypeKey
com.daimajia.swipe.implments.SwipeItemAdapterMangerImpl
    public void bindView(android.view.View,int)
bolts.AndroidExecutors
    public static java.util.concurrent.ExecutorService newCachedThreadPool(java.util.concurrent.ThreadFactory)
    static final long KEEP_ALIVE_TIME
com.google.gson.stream.MalformedJsonException
    public void <init>(java.lang.String,java.lang.Throwable)
    public void <init>(java.lang.Throwable)
net.lemonsoft.lemonbubble.LemonBubble$1
com.squareup.picasso.RemoteViewsAction$NotificationAction
com.facebook.imagepipeline.animated.impl.AnimatedDrawableCachingBackendImpl
    com.facebook.common.references.CloseableReference getBitmapForFrameBlocking(int)
    synchronized java.util.Map getDecodesInFlight()
    synchronized java.util.Set getFramesCached()
    private static final int PREFETCH_FRAMES
com.facebook.imagepipeline.producers.SwallowResultProducer$1
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicLongSerializer
    public void serialize(java.util.concurrent.atomic.AtomicLong,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
com.facebook.common.memory.MemoryTrimType
com.google.gson.internal.LinkedHashTreeMap$KeySet$1
android.support.annotation.IntDef
com.facebook.imagepipeline.producers.NetworkFetchProducer
    static final java.lang.String PRODUCER_NAME
    public static final java.lang.String INTERMEDIATE_RESULT_PRODUCER_EVENT
    private static final int READ_SIZE
    static final long TIME_BETWEEN_PARTIAL_RESULTS_MS
org.codehaus.jackson.util.DefaultPrettyPrinter$FixedSpaceIndenter
org.codehaus.jackson.node.NullNode
    public org.codehaus.jackson.JsonToken asToken()
    public boolean isNull()
    public int asInt(int)
    public long asLong(long)
    public double asDouble(double)
    public final void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
org.codehaus.jackson.map.jsontype.SubtypeResolver
    public varargs abstract void registerSubtypes(org.codehaus.jackson.map.jsontype.NamedType[])
    public varargs abstract void registerSubtypes(java.lang.Class[])
android.support.annotation.PluralsRes
mehdi.sakout.dynamicbox.R$color
com.facebook.imagepipeline.memory.NativePooledByteBufferFactory
    public com.facebook.imagepipeline.memory.NativePooledByteBuffer newByteBuffer(int)
    public synthetic bridge com.facebook.imagepipeline.memory.PooledByteBuffer newByteBuffer(int)
com.google.gson.JsonPrimitive
    public void <init>(java.lang.Character)
    void <init>(java.lang.Object)
    com.google.gson.JsonPrimitive deepCopy()
    public java.math.BigDecimal getAsBigDecimal()
    public java.math.BigInteger getAsBigInteger()
    public float getAsFloat()
    public short getAsShort()
    public byte getAsByte()
    public char getAsCharacter()
    synthetic bridge com.google.gson.JsonElement deepCopy()
com.lidroid.xutils.http.HttpHandler$NotUseApacheRedirectHandler
okhttp3.internal.io.RealConnection
    boolean isConnected()
    public void cancel()
    public boolean isMultiplexed()
    public okhttp3.Protocol protocol()
com.daimajia.slider.library.R$layout
    private void <init>()
com.facebook.imagepipeline.gif.GifFrame
com.nineoldandroids.view.ViewPropertyAnimatorHC$1
com.lidroid.xutils.db.table.Finder
android.support.annotation.FractionRes
com.google.gson.internal.Excluder
    public com.google.gson.internal.Excluder withVersion(double)
    public varargs com.google.gson.internal.Excluder withModifiers(int[])
    public com.google.gson.internal.Excluder disableInnerClassSerialization()
    public com.google.gson.internal.Excluder excludeFieldsWithoutExposeAnnotation()
    public com.google.gson.internal.Excluder withExclusionStrategy(com.google.gson.ExclusionStrategy,boolean,boolean)
    private static final double IGNORE_VERSIONS
org.codehaus.jackson.map.SerializationConfig
    protected void <init>(org.codehaus.jackson.map.SerializationConfig)
    protected void <init>(org.codehaus.jackson.map.SerializationConfig,java.util.HashMap,org.codehaus.jackson.map.jsontype.SubtypeResolver)
    protected void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.MapperConfig$Base)
    protected void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.ser.FilterProvider)
    protected void <init>(org.codehaus.jackson.map.SerializationConfig,java.lang.Class)
    protected void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)
    protected void <init>(org.codehaus.jackson.map.SerializationConfig,int)
    public org.codehaus.jackson.map.SerializationConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)
    public org.codehaus.jackson.map.SerializationConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public org.codehaus.jackson.map.SerializationConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public org.codehaus.jackson.map.SerializationConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public org.codehaus.jackson.map.SerializationConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)
    public org.codehaus.jackson.map.SerializationConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    public org.codehaus.jackson.map.SerializationConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)
    public org.codehaus.jackson.map.SerializationConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    public org.codehaus.jackson.map.SerializationConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)
    public org.codehaus.jackson.map.SerializationConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)
    public org.codehaus.jackson.map.SerializationConfig withDateFormat(java.text.DateFormat)
    public org.codehaus.jackson.map.SerializationConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)
    public org.codehaus.jackson.map.SerializationConfig withFilters(org.codehaus.jackson.map.ser.FilterProvider)
    public org.codehaus.jackson.map.SerializationConfig withView(java.lang.Class)
    public org.codehaus.jackson.map.SerializationConfig withSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)
    public varargs org.codehaus.jackson.map.SerializationConfig with(org.codehaus.jackson.map.SerializationConfig$Feature[])
    public varargs org.codehaus.jackson.map.SerializationConfig without(org.codehaus.jackson.map.SerializationConfig$Feature[])
    public void fromAnnotations(java.lang.Class)
    public org.codehaus.jackson.map.SerializationConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    public org.codehaus.jackson.map.BeanDescription introspectDirectClassAnnotations(org.codehaus.jackson.type.JavaType)
    public void enable(org.codehaus.jackson.map.SerializationConfig$Feature)
    public void disable(org.codehaus.jackson.map.SerializationConfig$Feature)
    public void set(org.codehaus.jackson.map.SerializationConfig$Feature,boolean)
    public org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion getSerializationInclusion()
    public void setSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)
    public org.codehaus.jackson.map.ser.FilterProvider getFilterProvider()
    public org.codehaus.jackson.map.BeanDescription introspect(org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.map.JsonSerializer serializerInstance(org.codehaus.jackson.map.introspect.Annotated,java.lang.Class)
    public final void setDateFormat(java.text.DateFormat)
    public void setSerializationView(java.lang.Class)
    public synthetic bridge void set(org.codehaus.jackson.map.MapperConfig$ConfigFeature,boolean)
    public synthetic bridge void disable(org.codehaus.jackson.map.MapperConfig$ConfigFeature)
    public synthetic bridge void enable(org.codehaus.jackson.map.MapperConfig$ConfigFeature)
    public synthetic bridge boolean isEnabled(org.codehaus.jackson.map.MapperConfig$ConfigFeature)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig$Impl without(org.codehaus.jackson.map.MapperConfig$ConfigFeature[])
    public synthetic bridge org.codehaus.jackson.map.MapperConfig$Impl with(org.codehaus.jackson.map.MapperConfig$ConfigFeature[])
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withDateFormat(java.text.DateFormat)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withSubtypeResolver(org.codehaus.jackson.map.jsontype.SubtypeResolver)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)
    public synthetic bridge org.codehaus.jackson.map.MapperConfig createUnshared(org.codehaus.jackson.map.jsontype.SubtypeResolver)
okhttp3.Cache$Entry
com.facebook.imagepipeline.memory.BitmapCounterProvider
    public void <init>()
    private static final long KB
    private static final long MB
    public static final int MAX_BITMAP_COUNT
com.cjj.BuildConfig
com.lidroid.xutils.util.PreferencesCookieStore$SerializableCookie
com.facebook.imagepipeline.cache.NativeMemoryCacheTrimStrategy$1
com.facebook.imagepipeline.memory.SharedByteArray
com.lidroid.xutils.cache.LruDiskCache$Snapshot
org.codehaus.jackson.node.POJONode
    public org.codehaus.jackson.JsonToken asToken()
    public boolean isPojo()
    public byte[] getBinaryValue()
    public boolean asBoolean(boolean)
    public int asInt(int)
    public long asLong(long)
    public double asDouble(double)
    public final void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public java.lang.Object getPojo()
com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory
    public com.facebook.common.references.CloseableReference createBitmap(int,int)
com.example.administrator.igoushop_app_test.pojos.Order
    public void setProId(java.lang.Integer)
    public void setImgURL(java.lang.String)
    public java.lang.Integer getUserId()
    public void setUserId(java.lang.Integer)
    public java.lang.String getUserName()
    public void setUserName(java.lang.String)
    public java.lang.String getPhone()
    public void setPhone(java.lang.String)
    public java.lang.String getAddress()
    public void setAddress(java.lang.String)
    public void setProName(java.lang.String)
    public void setOnePrice(double)
    public java.lang.String getMsg()
    public void setMsg(java.lang.String)
    public void setId(java.lang.Integer)
    public com.example.administrator.igoushop_app_test.pojos.UserInfo getUser()
    public void setUser(com.example.administrator.igoushop_app_test.pojos.UserInfo)
    public void setSize(java.lang.String)
    public void setColor(java.lang.String)
    public void setNum(int)
    public void setTotalPrice(double)
    public int getIsGet()
    public void setIsGet(int)
    public void setIsDeliver(int)
    public int getIsDeal()
    public void setIsDeal(int)
    private com.example.administrator.igoushop_app_test.pojos.UserInfo user
    private java.lang.Integer userId
    private java.lang.String userName
    private java.lang.String phone
    private java.lang.String address
    private java.lang.String msg
org.codehaus.jackson.map.deser.std.PrimitiveArrayDeserializers
    public java.lang.Object deserializeWithType(org.codehaus.jackson.JsonParser,org.codehaus.jackson.map.DeserializationContext,org.codehaus.jackson.map.TypeDeserializer)
org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket
    void <init>(org.codehaus.jackson.sym.Name,org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket)
    public int length()
    public org.codehaus.jackson.sym.Name find(int,int,int)
    public org.codehaus.jackson.sym.Name find(int,int[],int)
    protected final org.codehaus.jackson.sym.Name _name
    protected final org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket _next
    private final int _length
com.nineoldandroids.animation.PreHoneycombCompat
    private void <init>()
com.facebook.imagepipeline.producers.BitmapMemoryCacheGetProducer
    static final java.lang.String PRODUCER_NAME
org.codehaus.jackson.map.jsontype.impl.TypeSerializerBase
com.lidroid.xutils.http.client.multipart.HttpMultipartMode
com.facebook.common.internal.Files
org.codehaus.jackson.map.deser.ContainerDeserializer
org.codehaus.jackson.format.DataFormatMatcher
com.lidroid.xutils.bitmap.core.BitmapCache
org.codehaus.jackson.map.ext.DOMSerializer
org.codehaus.jackson.map.ser.StdSerializerProvider$WrappedSerializer
com.facebook.cache.common.WriterCallbacks$2
com.lidroid.xutils.http.HttpHandler$State
com.daimajia.slider.library.R
com.facebook.imagepipeline.producers.LocalResourceFetchProducer
    static final java.lang.String PRODUCER_NAME
net.lemonsoft.lemonbubble.LemonBubbleView
    public static synchronized net.lemonsoft.lemonbubble.LemonBubbleView defaultBubbleView(android.content.Context)
    private boolean isFragmentShowing(android.support.v4.app.Fragment)
    private boolean isFragmentShowing(android.app.Fragment)
    public void showBubbleInfo(android.app.Fragment,net.lemonsoft.lemonbubble.LemonBubbleInfo)
    public void showBubbleInfo(android.support.v4.app.Fragment,net.lemonsoft.lemonbubble.LemonBubbleInfo)
    public void showBubbleInfo(android.app.Fragment,net.lemonsoft.lemonbubble.LemonBubbleInfo,int)
    public void showBubbleInfo(android.support.v4.app.Fragment,net.lemonsoft.lemonbubble.LemonBubbleInfo,int)
    public void showBubbleInfo(android.content.Context,net.lemonsoft.lemonbubble.LemonBubbleInfo,int)
    public void forceHide()
    public net.lemonsoft.lemonbubble.interfaces.LemonBubbleLifeCycleDelegate getLifeCycleDelegate()
    public void setLifeCycleDelegate(net.lemonsoft.lemonbubble.interfaces.LemonBubbleLifeCycleDelegate)
    private int _frameAnimationPlayIndex
com.facebook.drawee.backends.pipeline.R$styleable
com.lidroid.xutils.db.table.DbModel
com.google.gson.JsonNull
    com.google.gson.JsonNull deepCopy()
    synthetic bridge com.google.gson.JsonElement deepCopy()
com.lidroid.xutils.http.client.entity.BodyParamsEntity
butterknife.Unbinder
    public abstract void unbind()
org.codehaus.jackson.map.ser.ScalarSerializerBase
android.support.annotation.ColorInt
android.support.graphics.drawable.BuildConfig
com.facebook.common.internal.Suppliers$1
org.codehaus.jackson.io.JsonStringEncoder
org.codehaus.jackson.node.ValueNode
    public boolean isValueNode()
    public abstract org.codehaus.jackson.JsonToken asToken()
    public void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
    public org.codehaus.jackson.JsonNode path(java.lang.String)
    public org.codehaus.jackson.JsonNode path(int)
org.codehaus.jackson.map.ser.FilterProvider
    public void <init>()
    public abstract org.codehaus.jackson.map.ser.BeanPropertyFilter findFilter(java.lang.Object)
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicBooleanSerializer
    public void serialize(java.util.concurrent.atomic.AtomicBoolean,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
bolts.AppLinkNavigation$NavigationResult
org.codehaus.jackson.map.ser.std.StdArraySerializers
org.codehaus.jackson.map.ser.StdSerializers
org.codehaus.jackson.node.NodeCursor$Object
com.daimajia.slider.library.R$color
com.facebook.imagepipeline.listener.RequestLoggingListener
com.facebook.common.disk.DiskTrimmable
    public abstract void trimToMinimum()
    public abstract void trimToNothing()
org.codehaus.jackson.map.deser.SettableBeanProperty$MethodProperty
    public java.lang.annotation.Annotation getAnnotation(java.lang.Class)
org.codehaus.jackson.map.util.JSONWrappedObject
com.lidroid.xutils.util.DoubleKeyValueMap
    public java.util.Set getFirstKeys()
    public java.util.concurrent.ConcurrentHashMap get(java.lang.Object)
    public java.util.Collection getAllValues(java.lang.Object)
    public java.util.Collection getAllValues()
    public boolean containsKey(java.lang.Object,java.lang.Object)
    public boolean containsKey(java.lang.Object)
    public int size()
    public void remove(java.lang.Object)
    public void remove(java.lang.Object,java.lang.Object)
    public void clear()
org.codehaus.jackson.map.ext.CoreXMLDeserializers
android.support.design.widget.Snackbar$Callback
    public void <init>()
    public static final int DISMISS_EVENT_SWIPE
    public static final int DISMISS_EVENT_ACTION
    public static final int DISMISS_EVENT_TIMEOUT
    public static final int DISMISS_EVENT_MANUAL
    public static final int DISMISS_EVENT_CONSECUTIVE
com.facebook.imagepipeline.image.CloseableStaticBitmap
    public synchronized com.facebook.common.references.CloseableReference convertToBitmapReference()
    public int getWidth()
    public int getHeight()
org.codehaus.jackson.map.deser.std.StdDeserializer
    public org.codehaus.jackson.type.JavaType getValueType()
okhttp3.ResponseBody$1
okhttp3.internal.Util
    private void <init>()
    public static void closeQuietly(java.net.ServerSocket)
    public static java.lang.String md5Hex(java.lang.String)
    public static java.lang.String shaBase64(java.lang.String)
    public static java.util.Map immutableMap(java.util.Map)
    public static java.lang.String toHumanReadableAscii(java.lang.String)
com.facebook.imagepipeline.animated.base.AnimatedImageFrame
    public abstract int getDurationMs()
okhttp3.Call$Factory
    public abstract okhttp3.Call newCall(okhttp3.Request)
org.codehaus.jackson.map.ser.std.TokenBufferSerializer
    public void serialize(org.codehaus.jackson.util.TokenBuffer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public final void serializeWithType(org.codehaus.jackson.util.TokenBuffer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public synthetic bridge void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
org.codehaus.jackson.node.ContainerNode
    public boolean isContainerNode()
    public abstract org.codehaus.jackson.JsonToken asToken()
    public java.lang.String getValueAsText()
    public java.lang.String asText()
    public abstract org.codehaus.jackson.JsonNode findValue(java.lang.String)
    public abstract org.codehaus.jackson.node.ObjectNode findParent(java.lang.String)
    public abstract java.util.List findValues(java.lang.String,java.util.List)
    public abstract java.util.List findParents(java.lang.String,java.util.List)
    public abstract java.util.List findValuesAsText(java.lang.String,java.util.List)
    public abstract int size()
    public abstract org.codehaus.jackson.JsonNode get(int)
    public abstract org.codehaus.jackson.JsonNode get(java.lang.String)
    public final org.codehaus.jackson.node.ArrayNode arrayNode()
    public final org.codehaus.jackson.node.ObjectNode objectNode()
    public final org.codehaus.jackson.node.BooleanNode booleanNode(boolean)
    public final org.codehaus.jackson.node.NumericNode numberNode(byte)
    public final org.codehaus.jackson.node.NumericNode numberNode(short)
    public final org.codehaus.jackson.node.NumericNode numberNode(int)
    public final org.codehaus.jackson.node.NumericNode numberNode(long)
    public final org.codehaus.jackson.node.NumericNode numberNode(float)
    public final org.codehaus.jackson.node.NumericNode numberNode(double)
    public final org.codehaus.jackson.node.NumericNode numberNode(java.math.BigDecimal)
    public final org.codehaus.jackson.node.TextNode textNode(java.lang.String)
    public final org.codehaus.jackson.node.BinaryNode binaryNode(byte[])
    public final org.codehaus.jackson.node.BinaryNode binaryNode(byte[],int,int)
    public final org.codehaus.jackson.node.POJONode POJONode(java.lang.Object)
    public abstract org.codehaus.jackson.node.ContainerNode removeAll()
    public synthetic bridge org.codehaus.jackson.JsonNode findParent(java.lang.String)
com.facebook.cache.disk.DiskStorage$DiskDumpInfo
com.facebook.imagepipeline.cache.InstrumentedMemoryCache
    public int removeAll(com.android.internal.util.Predicate)
    public boolean contains(com.android.internal.util.Predicate)
com.example.administrator.igoushop_app_test.R$layout
org.codehaus.jackson.map.type.ArrayType
    public static org.codehaus.jackson.map.type.ArrayType construct(org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.map.type.ArrayType withContentValueHandler(java.lang.Object)
    public org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class)
    public boolean hasGenericTypes()
    public java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder)
    public java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)
    public synthetic bridge org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object)
com.squareup.picasso.ContactsPhotoBitmapHunter
    private static final int ID_LOOKUP
    private static final int ID_THUMBNAIL
    private static final int ID_CONTACT
    private static final int ID_DISPLAY_PHOTO
net.lemonsoft.lemonbubble.LemonBubbleView$6
org.codehaus.jackson.node.DoubleNode
    public org.codehaus.jackson.JsonToken asToken()
    public org.codehaus.jackson.JsonParser$NumberType getNumberType()
    public boolean isFloatingPointNumber()
    public boolean isDouble()
    public java.lang.Number getNumberValue()
    public int getIntValue()
    public long getLongValue()
    public double getDoubleValue()
    public java.math.BigDecimal getDecimalValue()
    public java.math.BigInteger getBigIntegerValue()
    public final void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
org.codehaus.jackson.map.ser.StdSerializerProvider
    protected void <init>(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.ser.StdSerializerProvider,org.codehaus.jackson.map.SerializerFactory)
    protected org.codehaus.jackson.map.ser.StdSerializerProvider createInstance(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.SerializerFactory)
    public void setDefaultKeySerializer(org.codehaus.jackson.map.JsonSerializer)
    public void setNullValueSerializer(org.codehaus.jackson.map.JsonSerializer)
    public void setNullKeySerializer(org.codehaus.jackson.map.JsonSerializer)
    public final void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.map.SerializerFactory)
    public final void serializeValue(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializerFactory)
    public org.codehaus.jackson.schema.JsonSchema generateJsonSchema(java.lang.Class,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.SerializerFactory)
    public boolean hasSerializerFor(org.codehaus.jackson.map.SerializationConfig,java.lang.Class,org.codehaus.jackson.map.SerializerFactory)
    public int cachedSerializersCount()
    public void flushCachedSerializers()
    public org.codehaus.jackson.map.JsonSerializer findValueSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty)
    public org.codehaus.jackson.map.JsonSerializer findValueSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)
    public org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(java.lang.Class,boolean,org.codehaus.jackson.map.BeanProperty)
    public org.codehaus.jackson.map.JsonSerializer findTypedValueSerializer(org.codehaus.jackson.type.JavaType,boolean,org.codehaus.jackson.map.BeanProperty)
    public org.codehaus.jackson.map.JsonSerializer findKeySerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)
    public org.codehaus.jackson.map.JsonSerializer getNullKeySerializer()
    public org.codehaus.jackson.map.JsonSerializer getNullValueSerializer()
    public org.codehaus.jackson.map.JsonSerializer getUnknownTypeSerializer(java.lang.Class)
    public final void defaultSerializeDateValue(long,org.codehaus.jackson.JsonGenerator)
    public final void defaultSerializeDateValue(java.util.Date,org.codehaus.jackson.JsonGenerator)
    public void defaultSerializeDateKey(long,org.codehaus.jackson.JsonGenerator)
    public void defaultSerializeDateKey(java.util.Date,org.codehaus.jackson.JsonGenerator)
    protected void _serializeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)
    protected void _serializeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object,org.codehaus.jackson.type.JavaType)
    protected void _reportIncompatibleRootType(java.lang.Object,org.codehaus.jackson.type.JavaType)
    protected org.codehaus.jackson.map.JsonSerializer _findExplicitUntypedSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty)
    protected org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(java.lang.Class,org.codehaus.jackson.map.BeanProperty)
    protected org.codehaus.jackson.map.JsonSerializer _createAndCacheUntypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)
    protected org.codehaus.jackson.map.JsonSerializer _createUntypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)
    protected org.codehaus.jackson.map.JsonSerializer _handleContextualResolvable(org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.BeanProperty)
    protected org.codehaus.jackson.map.JsonSerializer _keySerializer
    protected java.text.DateFormat _dateFormat
    static final boolean CACHE_UNKNOWN_MAPPINGS
bolts.AppLinkResolver
org.codehaus.jackson.map.deser.BeanDeserializer
    public void <init>(org.codehaus.jackson.map.introspect.AnnotatedClass,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.deser.impl.CreatorCollector,org.codehaus.jackson.map.deser.impl.BeanPropertyMap,java.util.Map,java.util.HashSet,boolean,org.codehaus.jackson.map.deser.SettableAnyProperty)
    public boolean hasProperty(java.lang.String)
    public int getPropertyCount()
    public org.codehaus.jackson.type.JavaType getValueType()
    public java.util.Iterator properties()
    public void wrapAndThrow(java.lang.Throwable,java.lang.Object,int,org.codehaus.jackson.map.DeserializationContext)
    public void wrapAndThrow(java.lang.Throwable,java.lang.Object,java.lang.String)
    public void wrapAndThrow(java.lang.Throwable,java.lang.Object,int)
okhttp3.MultipartBody$Part
com.facebook.imagepipeline.decoder.DecodeException
okio.SegmentedByteString
com.facebook.drawee.components.DraweeEventTracker
    private static final int MAX_EVENTS_TO_TRACK
com.facebook.imagepipeline.memory.PoolParams
    public void <init>(int,android.util.SparseIntArray)
    public static final int IGNORE_THREADS
org.codehaus.jackson.map.AnnotationIntrospector
    public static org.codehaus.jackson.map.AnnotationIntrospector pair(org.codehaus.jackson.map.AnnotationIntrospector,org.codehaus.jackson.map.AnnotationIntrospector)
    public java.util.Collection allIntrospectors()
    public java.util.Collection allIntrospectors(java.util.Collection)
    public java.lang.Object findFilterId(org.codehaus.jackson.map.introspect.AnnotatedClass)
    public abstract boolean isIgnorableField(org.codehaus.jackson.map.introspect.AnnotatedField)
    public abstract java.lang.Object findSerializer(org.codehaus.jackson.map.introspect.Annotated)
    public java.lang.Class findKeySerializer(org.codehaus.jackson.map.introspect.Annotated)
    public java.lang.Class findContentSerializer(org.codehaus.jackson.map.introspect.Annotated)
    public org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)
    public abstract java.lang.Class findSerializationType(org.codehaus.jackson.map.introspect.Annotated)
    public java.lang.Class findSerializationKeyType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType)
    public java.lang.Class findSerializationContentType(org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType)
    public abstract org.codehaus.jackson.map.annotate.JsonSerialize$Typing findSerializationTyping(org.codehaus.jackson.map.introspect.Annotated)
    public abstract java.lang.Class[] findSerializationViews(org.codehaus.jackson.map.introspect.Annotated)
com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder
    public com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder setUri(java.lang.String)
    public synthetic bridge com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setUri(java.lang.String)
com.lidroid.xutils.bitmap.BitmapCacheListener
net.lemonsoft.lemonbubble.interfaces.LemonBubbleProgressModePaintContext
    public abstract void paint(android.graphics.Canvas,float,float)
com.facebook.imagepipeline.producers.JobScheduler
    static final java.lang.String QUEUE_TIME_KEY
com.lidroid.xutils.db.annotation.Finder
com.facebook.common.activitylistener.ActivityListenerManager$Listener
org.codehaus.jackson.map.type.MapLikeType
    protected void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType)
    public static org.codehaus.jackson.map.type.MapLikeType construct(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class)
    public org.codehaus.jackson.type.JavaType widenKey(java.lang.Class)
    public org.codehaus.jackson.map.type.MapLikeType withContentValueHandler(java.lang.Object)
    public java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)
    public java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder)
    public org.codehaus.jackson.map.type.MapLikeType withKeyTypeHandler(java.lang.Object)
    public org.codehaus.jackson.map.type.MapLikeType withKeyValueHandler(java.lang.Object)
    public synthetic bridge org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object)
com.facebook.imagepipeline.webp.WebPFrame
com.lidroid.xutils.db.converter.ByteArrayColumnConverter
com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer
org.codehaus.jackson.map.type.ClassKey
    public void reset(java.lang.Class)
com.lidroid.xutils.DbUtils$DbUpgradeListener
okhttp3.internal.Version
    private void <init>()
android.support.graphics.drawable.R
org.codehaus.jackson.map.ContextualSerializer
org.codehaus.jackson.map.HandlerInstantiator
    public void <init>()
    public abstract org.codehaus.jackson.map.JsonSerializer serializerInstance(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,java.lang.Class)
com.lidroid.xutils.HttpUtils$2
com.facebook.common.media.MediaUtils
    public void <init>()
    public static boolean isPhoto(java.lang.String)
    public static boolean isNonNativeSupportedMimeType(java.lang.String)
com.nineoldandroids.animation.ArgbEvaluator
org.codehaus.jackson.map.ser.StdSerializers$FloatSerializer
    public void serialize(java.lang.Float,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
org.codehaus.jackson.map.introspect.POJOPropertiesCollector
    public org.codehaus.jackson.map.AnnotationIntrospector getAnnotationIntrospector()
    public org.codehaus.jackson.map.introspect.AnnotatedMethod getJsonValueMethod()
    public org.codehaus.jackson.map.introspect.AnnotatedMethod getAnyGetterMethod()
    protected java.util.Map getPropertyMap()
org.codehaus.jackson.map.deser.std.ThrowableDeserializer
    protected static final java.lang.String PROP_NAME_MESSAGE
okhttp3.internal.tls.OkHostnameVerifier
    private static final int ALT_DNS_NAME
    private static final int ALT_IPA_NAME
com.lidroid.xutils.http.callback.StringDownloadHandler
com.facebook.imagepipeline.memory.GenericByteArrayPool
    public int getMinBufferSize()
android.support.annotation.CheckResult
com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy$1
com.squareup.picasso.Target
org.codehaus.jackson.map.ser.std.StringCollectionSerializer
com.lidroid.xutils.db.table.KeyValue
okhttp3.internal.framed.Ping
    public long roundTripTime()
    public long roundTripTime(long,java.util.concurrent.TimeUnit)
com.facebook.imagepipeline.producers.StatefulProducerRunnable
    protected abstract void disposeResult(java.lang.Object)
com.google.gson.JsonStreamParser
org.codehaus.jackson.map.DeserializerProvider
    public abstract org.codehaus.jackson.map.DeserializerProvider withFactory(org.codehaus.jackson.map.DeserializerFactory)
    public abstract org.codehaus.jackson.map.DeserializerProvider withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers)
    public abstract org.codehaus.jackson.map.DeserializerProvider withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers)
    public abstract org.codehaus.jackson.map.DeserializerProvider withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier)
    public abstract org.codehaus.jackson.map.DeserializerProvider withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver)
    public abstract org.codehaus.jackson.map.DeserializerProvider withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators)
    public abstract boolean hasValueDeserializerFor(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)
    public abstract org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)
    public abstract int cachedDeserializersCount()
    public abstract void flushCachedDeserializers()
net.lemonsoft.lemonbubble.LemonBubbleInfo
    public java.lang.String getTitle()
    public int getBubbleWidth()
    public int getBubbleHeight()
    public net.lemonsoft.lemonbubble.LemonBubbleInfo setCornerRadius(int)
    public net.lemonsoft.lemonbubble.enums.LemonBubbleLayoutStyle getLayoutStyle()
    public net.lemonsoft.lemonbubble.LemonBubbleInfo setLayoutStyle(net.lemonsoft.lemonbubble.enums.LemonBubbleLayoutStyle)
    public net.lemonsoft.lemonbubble.interfaces.LemonBubbleProgressModePaintContext getOnProgressChanged()
    public net.lemonsoft.lemonbubble.LemonBubbleInfo setOnProgressChanged(net.lemonsoft.lemonbubble.interfaces.LemonBubbleProgressModePaintContext)
    public net.lemonsoft.lemonbubble.LemonBubbleInfo setIconArray(java.util.List)
    public float getProportionOfIcon()
    public net.lemonsoft.lemonbubble.LemonBubbleInfo setProportionOfIcon(float)
    public float getProportionOfSpace()
    public net.lemonsoft.lemonbubble.LemonBubbleInfo setProportionOfSpace(float)
    public float getProportionOfPaddingX()
    public net.lemonsoft.lemonbubble.LemonBubbleInfo setProportionOfPaddingX(float)
    public float getProportionOfPaddingY()
    public net.lemonsoft.lemonbubble.LemonBubbleInfo setProportionOfPaddingY(float)
    public net.lemonsoft.lemonbubble.enums.LemonBubbleLocationStyle getLocationStyle()
    public net.lemonsoft.lemonbubble.LemonBubbleInfo setLocationStyle(net.lemonsoft.lemonbubble.enums.LemonBubbleLocationStyle)
    public float getProportionOfDeviation()
    public net.lemonsoft.lemonbubble.LemonBubbleInfo setProportionOfDeviation(float)
    public boolean isShowMaskView()
    public net.lemonsoft.lemonbubble.LemonBubbleInfo setShowMaskView(boolean)
    public net.lemonsoft.lemonbubble.LemonBubbleInfo setBackgroundColor(int)
    public net.lemonsoft.lemonbubble.LemonBubbleInfo setTitleColor(int)
    public int getTitleFontSize()
    public net.lemonsoft.lemonbubble.LemonBubbleInfo setTitleFontSize(int)
    public net.lemonsoft.lemonbubble.LemonBubbleInfo setOnMaskTouchContext(net.lemonsoft.lemonbubble.interfaces.LemonBubbleMaskOnTouchContext)
    public net.lemonsoft.lemonbubble.LemonBubbleInfo setShowStatusBar(boolean)
    public net.lemonsoft.lemonbubble.LemonBubbleInfo setStatusBarColor(int)
    public void show(android.content.Context,int)
    public void show(android.app.Fragment,int)
    public void show(android.support.v4.app.Fragment,int)
    public void show(android.content.Context)
    public void show(android.app.Fragment)
    public void show(android.support.v4.app.Fragment)
org.codehaus.jackson.map.Serializers$Base
org.codehaus.jackson.map.ser.StdSerializers$IntegerSerializer
    public void serialize(java.lang.Integer,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
com.example.administrator.igoushop_app_test.pojos.UserInfo
    public void setAddress(java.util.Set)
    public java.util.Set getCarts()
    public void setCarts(java.util.Set)
    public java.util.Set getOrders()
    public void setOrders(java.util.Set)
    private java.util.Set carts
    private java.util.Set orders
bolts.BoltsExecutors$ImmediateExecutor
    private static final int MAX_DEPTH
org.codehaus.jackson.map.jsontype.impl.AsArrayTypeSerializer
org.codehaus.jackson.map.ser.FilteredBeanPropertyWriter$SingleView
com.kaopiz.kprogresshud.R$drawable
    private void <init>()
com.lidroid.xutils.db.table.Foreign
org.codehaus.jackson.map.deser.StdDeserializerProvider
    public org.codehaus.jackson.map.DeserializerProvider withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers)
    public org.codehaus.jackson.map.DeserializerProvider withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers)
    public org.codehaus.jackson.map.DeserializerProvider withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier)
    public org.codehaus.jackson.map.DeserializerProvider withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver)
    public org.codehaus.jackson.map.DeserializerProvider withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators)
    public org.codehaus.jackson.map.deser.StdDeserializerProvider withFactory(org.codehaus.jackson.map.DeserializerFactory)
    public org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)
    public boolean hasValueDeserializerFor(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)
    public int cachedDeserializersCount()
    public void flushCachedDeserializers()
    public synthetic bridge org.codehaus.jackson.map.DeserializerProvider withFactory(org.codehaus.jackson.map.DeserializerFactory)
org.codehaus.jackson.Versioned
    public abstract org.codehaus.jackson.Version version()
bolts.Task$3
org.codehaus.jackson.map.ext.JodaDeserializers$1
android.support.annotation.BoolRes
com.facebook.imagepipeline.memory.PooledByteBuffer
    public abstract void close()
com.facebook.common.time.Clock
    public static final long MAX_TIME
com.lidroid.xutils.bitmap.callback.BitmapSetter
com.google.gson.Gson$1
    public java.lang.Object deserialize(com.google.gson.JsonElement,java.lang.reflect.Type)
com.facebook.imagepipeline.core.ImagePipeline$7
org.codehaus.jackson.map.deser.impl.CreatorProperty
    public java.lang.Object findInjectableValue(org.codehaus.jackson.map.DeserializationContext,java.lang.Object)
    public void inject(org.codehaus.jackson.map.DeserializationContext,java.lang.Object)
    public java.lang.annotation.Annotation getAnnotation(java.lang.Class)
org.codehaus.jackson.impl.WriterBasedGenerator
okhttp3.internal.http.StatusLine
    public static okhttp3.internal.http.StatusLine get(okhttp3.Response)
    public static final int HTTP_TEMP_REDIRECT
    public static final int HTTP_PERM_REDIRECT
    public static final int HTTP_CONTINUE
org.codehaus.jackson.map.module.SimpleDeserializers
okio.RealBufferedSource$1
org.codehaus.jackson.map.util.ISO8601DateFormat
com.facebook.imagepipeline.producers.DataFetchProducer
    private static final java.lang.String PRODUCER_NAME
android.support.graphics.drawable.AndroidResources
    void <init>()
    static final int styleable_VectorDrawable_alpha
    static final int styleable_VectorDrawable_autoMirrored
    static final int styleable_VectorDrawable_height
    static final int styleable_VectorDrawable_name
    static final int styleable_VectorDrawable_tint
    static final int styleable_VectorDrawable_tintMode
    static final int styleable_VectorDrawable_viewportHeight
    static final int styleable_VectorDrawable_viewportWidth
    static final int styleable_VectorDrawable_width
    static final int styleable_VectorDrawableGroup_name
    static final int styleable_VectorDrawableGroup_pivotX
    static final int styleable_VectorDrawableGroup_pivotY
    static final int styleable_VectorDrawableGroup_rotation
    static final int styleable_VectorDrawableGroup_scaleX
    static final int styleable_VectorDrawableGroup_scaleY
    static final int styleable_VectorDrawableGroup_translateX
    static final int styleable_VectorDrawableGroup_translateY
    static final int styleable_VectorDrawablePath_fillAlpha
    static final int styleable_VectorDrawablePath_fillColor
    static final int styleable_VectorDrawablePath_name
    static final int styleable_VectorDrawablePath_pathData
    static final int styleable_VectorDrawablePath_strokeAlpha
    static final int styleable_VectorDrawablePath_strokeColor
    static final int styleable_VectorDrawablePath_strokeLineCap
    static final int styleable_VectorDrawablePath_strokeLineJoin
    static final int styleable_VectorDrawablePath_strokeMiterLimit
    static final int styleable_VectorDrawablePath_strokeWidth
    static final int styleable_VectorDrawablePath_trimPathEnd
    static final int styleable_VectorDrawablePath_trimPathOffset
    static final int styleable_VectorDrawablePath_trimPathStart
    static final int styleable_VectorDrawableClipPath_name
    static final int styleable_VectorDrawableClipPath_pathData
    static final int styleable_AnimatedVectorDrawable_drawable
    static final int styleable_AnimatedVectorDrawableTarget_animation
    static final int styleable_AnimatedVectorDrawableTarget_name
com.example.administrator.igoushop_app_test.pojos.FunctionButton
    public java.lang.String getJumpUrl()
    public void setJumpUrl(java.lang.String)
    public int getId()
    public void setId(int)
    public void setName(java.lang.String)
    public void setImageUrl(java.lang.String)
    private int id
    private java.lang.String jumpUrl
org.codehaus.jackson.io.SegmentedStringWriter
com.facebook.drawee.interfaces.DraweeController
    public abstract android.graphics.drawable.Animatable getAnimatable()
org.codehaus.jackson.map.deser.MapDeserializer
com.lidroid.xutils.view.annotation.event.OnGroupCollapse
com.squareup.picasso.RemoteViewsAction
com.lidroid.xutils.cache.LruDiskCache$1
okio.ByteString
    public static okio.ByteString of(byte[],int,int)
    public static okio.ByteString decodeBase64(java.lang.String)
    public static okio.ByteString decodeHex(java.lang.String)
    private static int decodeHexDigit(char)
    public okio.ByteString sha256()
    public java.lang.String base64Url()
    public okio.ByteString toAsciiUppercase()
    public okio.ByteString substring(int)
    public okio.ByteString substring(int,int)
    public void write(java.io.OutputStream)
    public boolean rangeEquals(int,okio.ByteString,int,int)
com.lidroid.xutils.cache.LruDiskCache$Editor$FaultHidingOutputStream
com.nineoldandroids.animation.AnimatorSet
com.lidroid.xutils.http.client.multipart.content.InputStreamBody
com.facebook.common.disk.DiskTrimmableRegistry
    public abstract void unregisterDiskTrimmable(com.facebook.common.disk.DiskTrimmable)
org.codehaus.jackson.map.ser.std.StdJdkSerializers$FileSerializer
    public void serialize(java.io.File,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
okhttp3.Cookie$Builder
com.nineoldandroids.view.ViewPropertyAnimatorHC$AnimatorEventListener
com.lidroid.xutils.http.client.util.URIBuilder
org.codehaus.jackson.map.ext.DOMDeserializer
org.codehaus.jackson.impl.JsonGeneratorBase$1
org.codehaus.jackson.map.deser.StdKeyDeserializer
com.facebook.common.internal.Throwables
    private void <init>()
    public static void propagateIfPossible(java.lang.Throwable,java.lang.Class)
    public static void propagateIfPossible(java.lang.Throwable,java.lang.Class,java.lang.Class)
    public static java.lang.Throwable getRootCause(java.lang.Throwable)
    public static java.util.List getCausalChain(java.lang.Throwable)
    public static java.lang.String getStackTraceAsString(java.lang.Throwable)
com.lidroid.xutils.bitmap.BitmapGlobalConfig
org.codehaus.jackson.map.ObjectMapper$DefaultTypeResolverBuilder
butterknife.OnFocusChange
    public abstract int[] value()
com.facebook.common.soloader.SoLoaderShim
    public void <init>()
    public static void setHandler(com.facebook.common.soloader.SoLoaderShim$Handler)
    public static void setInTestMode()
android.support.annotation.MainThread
com.facebook.imagepipeline.producers.WebpTranscodeProducer
    private static final java.lang.String PRODUCER_NAME
    private static final int DEFAULT_JPEG_QUALITY
okhttp3.internal.http.HttpMethod
    private void <init>()
com.facebook.common.internal.ByteStreams
    private void <init>()
    public static byte[] toByteArray(java.io.InputStream)
    public static byte[] toByteArray(java.io.InputStream,int)
    public static void readFully(java.io.InputStream,byte[],int,int)
    private static final int BUF_SIZE
okhttp3.FormBody$Builder
    public okhttp3.FormBody$Builder addEncoded(java.lang.String,java.lang.String)
net.lemonsoft.lemonbubble.LemonBubble
    public void <init>()
    public static net.lemonsoft.lemonbubble.LemonBubbleInfo getRightBubbleInfo()
    public static void showRight(android.content.Context,java.lang.String)
    public static void showRight(android.app.Fragment,java.lang.String)
    public static void showRight(android.support.v4.app.Fragment,java.lang.String)
    public static void showRight(android.content.Context,java.lang.String,int)
    public static void showRight(android.app.Fragment,java.lang.String,int)
    public static void showRight(android.support.v4.app.Fragment,java.lang.String,int)
    public static void showError(android.app.Fragment,java.lang.String)
    public static void showError(android.support.v4.app.Fragment,java.lang.String)
    public static void showError(android.content.Context,java.lang.String,int)
    public static void showError(android.app.Fragment,java.lang.String,int)
    public static void showError(android.support.v4.app.Fragment,java.lang.String,int)
    public static void showRoundProgress(android.app.Fragment,java.lang.String)
    public static void showRoundProgress(android.support.v4.app.Fragment,java.lang.String)
    public static void showBubbleInfo(android.content.Context,net.lemonsoft.lemonbubble.LemonBubbleInfo)
    public static void showBubbleInfo(android.app.Fragment,net.lemonsoft.lemonbubble.LemonBubbleInfo)
    public static void showBubbleInfo(android.support.v4.app.Fragment,net.lemonsoft.lemonbubble.LemonBubbleInfo)
    public static void showBubbleInfo(android.content.Context,net.lemonsoft.lemonbubble.LemonBubbleInfo,int)
    public static void showBubbleInfo(android.app.Fragment,net.lemonsoft.lemonbubble.LemonBubbleInfo,int)
    public static void showBubbleInfo(android.support.v4.app.Fragment,net.lemonsoft.lemonbubble.LemonBubbleInfo,int)
    public static void forceHide()
com.example.administrator.igoushop_app_test.http.OKManager$5
com.facebook.common.file.FileUtils
    public void <init>()
org.codehaus.jackson.map.ser.impl.FailingSerializer
    public void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
org.codehaus.jackson.map.deser.SettableBeanProperty$FieldProperty
    public java.lang.annotation.Annotation getAnnotation(java.lang.Class)
com.facebook.drawee.backends.pipeline.R$id
org.codehaus.jackson.util.DefaultPrettyPrinter
com.example.administrator.igoushop_app_test.bean.Order
okio.GzipSink
com.facebook.imagepipeline.producers.DownsampleUtil
    private void <init>()
    static int roundToPowerOfTwo(int)
    private static final float MAX_BITMAP_SIZE
    private static final float INTERVAL_ROUNDING
    private static final int DEFAULT_SAMPLE_SIZE
org.codehaus.jackson.map.ser.std.StdContainerSerializers$IteratorSerializer
com.google.gson.internal.LinkedHashTreeMap$AvlBuilder
android.support.annotation.AttrRes
org.codehaus.jackson.map.ser.std.NullSerializer
    public void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
com.facebook.imagepipeline.animated.impl.AnimatedFrameCache$FrameKey
com.nineoldandroids.util.NoSuchPropertyException
butterknife.internal.ListenerClass
com.squareup.picasso.Stats
    void shutdown()
    private static final int CACHE_HIT
    private static final int CACHE_MISS
    private static final int BITMAP_DECODE_FINISHED
    private static final int BITMAP_TRANSFORMED_FINISHED
    private static final int DOWNLOAD_FINISHED
    private static final java.lang.String STATS_THREAD_NAME
net.lemonsoft.lemonbubble.R$color
com.facebook.imagepipeline.producers.NullProducer
com.lidroid.xutils.view.annotation.event.OnRadioGroupCheckedChange
com.squareup.picasso.OkHttpDownloader
    public void <init>(android.content.Context,long)
    protected com.squareup.okhttp.OkHttpClient getClient()
    static final java.lang.String RESPONSE_SOURCE_ANDROID
    static final java.lang.String RESPONSE_SOURCE_OKHTTP
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Multi
mehdi.sakout.dynamicbox.R$id
com.facebook.drawee.generic.GenericDraweeHierarchy
    private void setLayerChildDrawable(int,android.graphics.drawable.Drawable)
    private com.facebook.drawee.drawable.ScaleTypeDrawable getLayerScaleTypeDrawable(int)
    public void setFadeDuration(int)
    public void setActualImageFocusPoint(android.graphics.PointF)
    public void setActualImageScaleType(com.facebook.drawee.drawable.ScalingUtils$ScaleType)
    public void setActualImageColorFilter(android.graphics.ColorFilter)
    public void getActualImageBounds(android.graphics.RectF)
    public void setPlaceholderImage(android.graphics.drawable.Drawable)
    public void setPlaceholderImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType)
    public void setPlaceholderImageFocusPoint(android.graphics.PointF)
    public void setPlaceholderImage(int)
    public void setFailureImage(android.graphics.drawable.Drawable)
    public void setFailureImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType)
    public void setRetryImage(android.graphics.drawable.Drawable)
    public void setRetryImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType)
    public void setProgressBarImage(android.graphics.drawable.Drawable)
    public void setProgressBarImage(android.graphics.drawable.Drawable,com.facebook.drawee.drawable.ScalingUtils$ScaleType)
    public void setRoundingParams(com.facebook.drawee.generic.RoundingParams)
    public com.facebook.drawee.generic.RoundingParams getRoundingParams()
com.lidroid.xutils.http.client.DefaultSSLSocketFactory$1
com.lidroid.xutils.util.LogUtils
    private void <init>()
    public static void d(java.lang.String)
    public static void d(java.lang.String,java.lang.Throwable)
    public static void e(java.lang.String)
    public static void i(java.lang.String)
    public static void i(java.lang.String,java.lang.Throwable)
    public static void v(java.lang.String)
    public static void v(java.lang.String,java.lang.Throwable)
    public static void w(java.lang.String)
    public static void w(java.lang.String,java.lang.Throwable)
    public static void w(java.lang.Throwable)
    public static void wtf(java.lang.String)
    public static void wtf(java.lang.String,java.lang.Throwable)
    public static void wtf(java.lang.Throwable)
com.lidroid.xutils.bitmap.factory.BitmapFactory
org.codehaus.jackson.map.ext.JodaSerializers$LocalDateSerializer
com.lidroid.xutils.http.RequestParams
okhttp3.RealCall$ApplicationInterceptorChain
    public okhttp3.Connection connection()
    public okhttp3.Request request()
org.codehaus.jackson.schema.JsonSerializableSchema
com.google.gson.internal.LinkedHashTreeMap
org.codehaus.jackson.map.ObjectWriter
android.support.design.widget.ViewGroupUtils
    void <init>()
com.facebook.imagepipeline.producers.LocalVideoThumbnailProducer
    static final java.lang.String PRODUCER_NAME
    static final java.lang.String CREATED_THUMBNAIL
com.google.gson.internal.Primitives
    private void <init>()
    public static boolean isWrapperType(java.lang.reflect.Type)
    public static java.lang.Class unwrap(java.lang.Class)
org.codehaus.jackson.map.ObjectMapper$DefaultTyping
com.example.administrator.igoushop_app_test.http.OKManager
    private void onSuccessByteMethod(byte[],com.example.administrator.igoushop_app_test.http.OKManager$Func2)
    static synthetic void access$200(com.example.administrator.igoushop_app_test.http.OKManager,byte[],com.example.administrator.igoushop_app_test.http.OKManager$Func2)
    public java.lang.String syncGetByURL(java.lang.String)
    public void asyncJsonObjectByURL(java.lang.String,com.example.administrator.igoushop_app_test.http.OKManager$Func4)
    public void asyncGetByteByURL(java.lang.String,com.example.administrator.igoushop_app_test.http.OKManager$Func2)
    public void sendStringByPostMethod(java.lang.String,java.lang.String,com.example.administrator.igoushop_app_test.http.OKManager$Func4)
org.codehaus.jackson.map.ResolvableSerializer
android.support.design.widget.ValueAnimatorCompat
    public void end()
org.codehaus.jackson.map.MapperConfig$Base
    public org.codehaus.jackson.map.MapperConfig$Base withClassIntrospector(org.codehaus.jackson.map.ClassIntrospector)
    public org.codehaus.jackson.map.MapperConfig$Base withAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public org.codehaus.jackson.map.MapperConfig$Base withInsertedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public org.codehaus.jackson.map.MapperConfig$Base withAppendedAnnotationIntrospector(org.codehaus.jackson.map.AnnotationIntrospector)
    public org.codehaus.jackson.map.MapperConfig$Base withVisibilityChecker(org.codehaus.jackson.map.introspect.VisibilityChecker)
    public org.codehaus.jackson.map.MapperConfig$Base withVisibility(org.codehaus.jackson.annotate.JsonMethod,org.codehaus.jackson.annotate.JsonAutoDetect$Visibility)
    public org.codehaus.jackson.map.MapperConfig$Base withPropertyNamingStrategy(org.codehaus.jackson.map.PropertyNamingStrategy)
    public org.codehaus.jackson.map.MapperConfig$Base withTypeFactory(org.codehaus.jackson.map.type.TypeFactory)
    public org.codehaus.jackson.map.MapperConfig$Base withTypeResolverBuilder(org.codehaus.jackson.map.jsontype.TypeResolverBuilder)
    public org.codehaus.jackson.map.MapperConfig$Base withDateFormat(java.text.DateFormat)
    public org.codehaus.jackson.map.MapperConfig$Base withHandlerInstantiator(org.codehaus.jackson.map.HandlerInstantiator)
com.google.gson.internal.Streams
    private void <init>()
    public static java.io.Writer writerForAppendable(java.lang.Appendable)
com.facebook.imagepipeline.memory.DefaultByteArrayPoolParams
    public void <init>()
    private static final int DEFAULT_IO_BUFFER_SIZE
    private static final int DEFAULT_BUCKET_SIZE
    private static final int MAX_SIZE_SOFT_CAP
    private static final int MAX_SIZE_HARD_CAP
de.hdodenhof.circleimageview.BuildConfig
com.lidroid.xutils.db.converter.ColumnConverterFactory
okhttp3.TlsVersion
    public java.lang.String javaName()
org.codehaus.jackson.io.CharacterEscapes
com.example.administrator.igoushop_app_test.bean.HomeButton
com.facebook.common.util.TriState
    public static com.facebook.common.util.TriState valueOf(java.lang.Boolean)
    public static com.facebook.common.util.TriState fromDbValue(int)
    public boolean isSet()
    public boolean asBoolean()
    public boolean asBoolean(boolean)
    public java.lang.Boolean asBooleanObject()
    public int getDbValue()
com.facebook.common.internal.ByteStreams$1
com.facebook.imagepipeline.core.ImagePipelineFactory
    public static void shutDown()
org.codehaus.jackson.map.jsontype.impl.TypeNameIdResolver
    public org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism()
com.google.gson.JsonArray
    com.google.gson.JsonArray deepCopy()
    public void add(java.lang.Boolean)
    public void add(java.lang.Character)
    public void add(java.lang.Number)
    public void add(java.lang.String)
    public void addAll(com.google.gson.JsonArray)
    public com.google.gson.JsonElement set(int,com.google.gson.JsonElement)
    public boolean remove(com.google.gson.JsonElement)
    public com.google.gson.JsonElement remove(int)
    public boolean contains(com.google.gson.JsonElement)
    public int size()
    public com.google.gson.JsonElement get(int)
    public java.lang.Number getAsNumber()
    public double getAsDouble()
    public java.math.BigDecimal getAsBigDecimal()
    public java.math.BigInteger getAsBigInteger()
    public float getAsFloat()
    public long getAsLong()
    public int getAsInt()
    public byte getAsByte()
    public char getAsCharacter()
    public short getAsShort()
    public boolean getAsBoolean()
    synthetic bridge com.google.gson.JsonElement deepCopy()
com.lidroid.xutils.view.annotation.event.OnNothingSelected
mehdi.sakout.dynamicbox.DynamicBox
com.facebook.imagepipeline.request.ImageRequest
    public static com.facebook.imagepipeline.request.ImageRequest fromUri(java.lang.String)
com.lidroid.xutils.DbUtils$1
org.codehaus.jackson.map.RuntimeJsonMappingException
okio.SegmentPool
    static final long MAX_SIZE
org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter
com.facebook.imagepipeline.producers.HttpUrlConnectionNetworkFetcher
    private static final int NUM_NETWORK_THREADS
org.codehaus.jackson.map.TypeSerializer
    public void <init>()
    public abstract org.codehaus.jackson.annotate.JsonTypeInfo$As getTypeInclusion()
    public abstract java.lang.String getPropertyName()
    public abstract org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver()
    public abstract void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator)
    public abstract void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator)
    public abstract void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator)
    public abstract void writeTypeSuffixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator)
    public abstract void writeTypeSuffixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator)
    public abstract void writeTypeSuffixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator)
    public void writeTypePrefixForScalar(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class)
    public void writeTypePrefixForObject(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class)
    public void writeTypePrefixForArray(java.lang.Object,org.codehaus.jackson.JsonGenerator,java.lang.Class)
okhttp3.MultipartBody$Builder
org.codehaus.jackson.map.introspect.BasicBeanDescription
    public void <init>(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.AnnotatedClass)
    public static org.codehaus.jackson.map.introspect.BasicBeanDescription forSerialization(org.codehaus.jackson.map.introspect.POJOPropertiesCollector)
    public org.codehaus.jackson.map.introspect.AnnotatedMethod findJsonValueMethod()
    public boolean hasKnownClassAnnotations()
    public java.lang.Object instantiateBean(boolean)
    public java.util.List findCreatorPropertyNames()
    public org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion findSerializationInclusion(org.codehaus.jackson.map.annotate.JsonSerialize$Inclusion)
    public org.codehaus.jackson.map.introspect.AnnotatedMethod findAnyGetter()
    public java.util.LinkedHashMap _findPropertyFields(java.util.Collection,boolean)
    public java.util.LinkedHashMap findGetters(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection)
    public java.util.LinkedHashMap findSetters(org.codehaus.jackson.map.introspect.VisibilityChecker)
    public java.util.LinkedHashMap findSerializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection)
    public java.util.LinkedHashMap findDeserializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection)
    public synthetic bridge java.util.Map findSerializableFields(org.codehaus.jackson.map.introspect.VisibilityChecker,java.util.Collection)
    protected org.codehaus.jackson.map.introspect.AnnotatedMethod _jsonValueMethod
    protected org.codehaus.jackson.map.introspect.AnnotatedMethod _anyGetterMethod
org.codehaus.jackson.map.ser.std.StdArraySerializers$ShortArraySerializer
    public org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)
    public void serializeContents(short[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
com.google.gson.JsonObject
    private com.google.gson.JsonElement createJsonElement(java.lang.Object)
    com.google.gson.JsonObject deepCopy()
    public com.google.gson.JsonElement remove(java.lang.String)
    public void addProperty(java.lang.String,java.lang.String)
    public void addProperty(java.lang.String,java.lang.Number)
    public void addProperty(java.lang.String,java.lang.Boolean)
    public void addProperty(java.lang.String,java.lang.Character)
    public boolean has(java.lang.String)
    public com.google.gson.JsonElement get(java.lang.String)
    public com.google.gson.JsonPrimitive getAsJsonPrimitive(java.lang.String)
    public com.google.gson.JsonArray getAsJsonArray(java.lang.String)
    public com.google.gson.JsonObject getAsJsonObject(java.lang.String)
    synthetic bridge com.google.gson.JsonElement deepCopy()
org.codehaus.jackson.map.ser.std.StdKeySerializers
okhttp3.Dispatcher
    public void <init>(java.util.concurrent.ExecutorService)
    public synchronized void setMaxRequests(int)
    public synchronized int getMaxRequests()
    public synchronized void setMaxRequestsPerHost(int)
    public synchronized int getMaxRequestsPerHost()
    public synchronized void cancelAll()
    synchronized void executed(okhttp3.RealCall)
    synchronized void finished(okhttp3.Call)
    public synchronized java.util.List queuedCalls()
    public synchronized java.util.List runningCalls()
    public synchronized int queuedCallsCount()
    public synchronized int runningCallsCount()
com.nineoldandroids.animation.Keyframe$ObjectKeyframe
com.facebook.imagepipeline.memory.BasePool$SizeTooLargeException
com.facebook.imagepipeline.datasource.ListDataSource
com.facebook.datasource.BaseBooleanSubscriber
bolts.Task
    public static bolts.Task cancelled()
    public static bolts.Task callInBackground(java.util.concurrent.Callable)
    public static bolts.Task call(java.util.concurrent.Callable)
    public static bolts.Task whenAll(java.util.Collection)
    private static void completeAfterTask(bolts.Task$TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor)
    static synthetic void access$200(bolts.Task$TaskCompletionSource,bolts.Continuation,bolts.Task,java.util.concurrent.Executor)
    static synthetic boolean access$502(bolts.Task,boolean)
    public void waitForCompletion()
    public bolts.Task cast()
    public bolts.Task makeVoid()
    public bolts.Task continueWhile(java.util.concurrent.Callable,bolts.Continuation)
    public bolts.Task continueWhile(java.util.concurrent.Callable,bolts.Continuation,java.util.concurrent.Executor)
    public bolts.Task continueWithTask(bolts.Continuation,java.util.concurrent.Executor)
    public bolts.Task continueWithTask(bolts.Continuation)
    public bolts.Task onSuccess(bolts.Continuation,java.util.concurrent.Executor)
    public bolts.Task onSuccess(bolts.Continuation)
    public bolts.Task onSuccessTask(bolts.Continuation,java.util.concurrent.Executor)
    public bolts.Task onSuccessTask(bolts.Continuation)
com.lidroid.xutils.cache.KeyExpiryMap
com.lidroid.xutils.http.HttpCache
com.cjj.R$id
com.squareup.picasso.Utils$OkHttpLoaderCreator
    private void <init>()
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Double
org.codehaus.jackson.map.ser.CustomSerializerFactory
com.facebook.imagepipeline.request.BasePostprocessor
android.support.design.widget.ViewGroupUtilsHoneycomb
    void <init>()
com.facebook.drawee.generic.RoundingParams
    public static com.facebook.drawee.generic.RoundingParams asCircle()
    public static com.facebook.drawee.generic.RoundingParams fromCornersRadius(float)
    public static com.facebook.drawee.generic.RoundingParams fromCornersRadii(float,float,float,float)
    public static com.facebook.drawee.generic.RoundingParams fromCornersRadii(float[])
    public com.facebook.drawee.generic.RoundingParams setCornersRadius(float)
    public com.facebook.drawee.generic.RoundingParams setCornersRadii(float[])
    public com.facebook.drawee.generic.RoundingParams setRoundingMethod(com.facebook.drawee.generic.RoundingParams$RoundingMethod)
org.codehaus.jackson.map.ser.std.StdJdkSerializers$AtomicReferenceSerializer
    public void serialize(java.util.concurrent.atomic.AtomicReference,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
android.support.annotation.XmlRes
com.example.administrator.igoushop_app_test.R$styleable
    public void <init>()
com.lidroid.xutils.http.client.multipart.MinimalField
org.codehaus.jackson.map.ext.JodaSerializers$JodaSerializer
butterknife.BindDimen
    public abstract int value()
org.codehaus.jackson.map.deser.FromStringDeserializer
com.lidroid.xutils.http.client.entity.UploadEntity
android.support.annotation.BinderThread
com.lidroid.xutils.db.annotation.Id
org.codehaus.jackson.map.ser.StdSerializers$CalendarSerializer
com.lidroid.xutils.view.annotation.event.OnScrollStateChanged
org.codehaus.jackson.map.deser.SettableBeanProperty$ManagedReferenceProperty
    public java.lang.annotation.Annotation getAnnotation(java.lang.Class)
org.codehaus.jackson.JsonGenerator
    public void setSchema(org.codehaus.jackson.FormatSchema)
    public boolean canUseSchema(org.codehaus.jackson.FormatSchema)
    public org.codehaus.jackson.Version version()
    public java.lang.Object getOutputTarget()
    public abstract org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature)
    public abstract org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature)
    public org.codehaus.jackson.JsonGenerator configure(org.codehaus.jackson.JsonGenerator$Feature,boolean)
    public abstract boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)
    public abstract org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec)
    public abstract org.codehaus.jackson.ObjectCodec getCodec()
    public void enableFeature(org.codehaus.jackson.JsonGenerator$Feature)
    public void disableFeature(org.codehaus.jackson.JsonGenerator$Feature)
    public void setFeature(org.codehaus.jackson.JsonGenerator$Feature,boolean)
    public boolean isFeatureEnabled(org.codehaus.jackson.JsonGenerator$Feature)
    public org.codehaus.jackson.JsonGenerator setPrettyPrinter(org.codehaus.jackson.PrettyPrinter)
    public abstract org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter()
    public org.codehaus.jackson.JsonGenerator setHighestNonEscapedChar(int)
    public int getHighestEscapedChar()
    public org.codehaus.jackson.io.CharacterEscapes getCharacterEscapes()
    public org.codehaus.jackson.JsonGenerator setCharacterEscapes(org.codehaus.jackson.io.CharacterEscapes)
    public abstract void writeStartArray()
    public abstract void writeEndArray()
    public abstract void writeStartObject()
    public abstract void writeEndObject()
    public abstract void writeFieldName(java.lang.String)
    public void writeFieldName(org.codehaus.jackson.io.SerializedString)
    public void writeFieldName(org.codehaus.jackson.SerializableString)
    public abstract void writeString(java.lang.String)
    public abstract void writeString(char[],int,int)
    public void writeString(org.codehaus.jackson.SerializableString)
    public abstract void writeRawUTF8String(byte[],int,int)
    public abstract void writeUTF8String(byte[],int,int)
    public abstract void writeRaw(java.lang.String)
    public abstract void writeRaw(java.lang.String,int,int)
    public abstract void writeRaw(char[],int,int)
    public abstract void writeRaw(char)
    public abstract void writeRawValue(java.lang.String)
    public abstract void writeRawValue(java.lang.String,int,int)
    public abstract void writeRawValue(char[],int,int)
    public abstract void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int)
    public void writeBinary(byte[],int,int)
    public void writeBinary(byte[])
    public abstract void writeNumber(int)
    public abstract void writeNumber(long)
    public abstract void writeNumber(java.math.BigInteger)
    public abstract void writeNumber(double)
    public abstract void writeNumber(float)
    public abstract void writeNumber(java.math.BigDecimal)
    public abstract void writeNumber(java.lang.String)
    public abstract void writeBoolean(boolean)
    public abstract void writeNull()
    public abstract void writeObject(java.lang.Object)
    public abstract void writeTree(org.codehaus.jackson.JsonNode)
    public void writeStringField(java.lang.String,java.lang.String)
    public final void writeBooleanField(java.lang.String,boolean)
    public final void writeNullField(java.lang.String)
    public final void writeNumberField(java.lang.String,int)
    public final void writeNumberField(java.lang.String,long)
    public final void writeNumberField(java.lang.String,double)
    public final void writeNumberField(java.lang.String,float)
    public final void writeNumberField(java.lang.String,java.math.BigDecimal)
    public final void writeBinaryField(java.lang.String,byte[])
    public final void writeArrayFieldStart(java.lang.String)
    public final void writeObjectFieldStart(java.lang.String)
    public final void writeObjectField(java.lang.String,java.lang.Object)
    public abstract void copyCurrentEvent(org.codehaus.jackson.JsonParser)
    public abstract void copyCurrentStructure(org.codehaus.jackson.JsonParser)
    public abstract org.codehaus.jackson.JsonStreamContext getOutputContext()
    public abstract void flush()
    public abstract boolean isClosed()
    public abstract void close()
    protected org.codehaus.jackson.PrettyPrinter _cfgPrettyPrinter
org.codehaus.jackson.map.util.EnumValues
com.facebook.common.util.StreamUtil
    public void <init>()
    public static byte[] getBytesFromStream(java.io.InputStream)
    public static byte[] getBytesFromStream(java.io.InputStream,int)
android.support.annotation.MenuRes
org.codehaus.jackson.map.deser.SettableBeanProperty
    public void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)
    public abstract java.lang.annotation.Annotation getAnnotation(java.lang.Class)
    public java.lang.annotation.Annotation getContextAnnotation(java.lang.Class)
    protected final java.lang.Class getDeclaringClass()
    public int getProperytIndex()
org.codehaus.jackson.util.TokenBuffer
    public void serialize(org.codehaus.jackson.JsonGenerator)
    public org.codehaus.jackson.JsonGenerator enable(org.codehaus.jackson.JsonGenerator$Feature)
    public org.codehaus.jackson.JsonGenerator disable(org.codehaus.jackson.JsonGenerator$Feature)
    public boolean isEnabled(org.codehaus.jackson.JsonGenerator$Feature)
    public org.codehaus.jackson.JsonGenerator useDefaultPrettyPrinter()
    public org.codehaus.jackson.JsonGenerator setCodec(org.codehaus.jackson.ObjectCodec)
    public org.codehaus.jackson.ObjectCodec getCodec()
    public final org.codehaus.jackson.impl.JsonWriteContext getOutputContext()
    public void flush()
    public boolean isClosed()
    public void writeFieldName(org.codehaus.jackson.SerializableString)
    public void writeFieldName(org.codehaus.jackson.io.SerializedString)
    public void writeString(org.codehaus.jackson.SerializableString)
    public void writeRawUTF8String(byte[],int,int)
    public void writeUTF8String(byte[],int,int)
    public void writeRaw(java.lang.String)
    public void writeRaw(java.lang.String,int,int)
    public void writeRaw(char[],int,int)
    public void writeRaw(char)
    public void writeRawValue(java.lang.String)
    public void writeRawValue(java.lang.String,int,int)
    public void writeRawValue(char[],int,int)
    public void writeNumber(java.lang.String)
    public void writeTree(org.codehaus.jackson.JsonNode)
    public void writeBinary(org.codehaus.jackson.Base64Variant,byte[],int,int)
    protected void _reportUnsupportedOperation()
    public synthetic bridge org.codehaus.jackson.JsonStreamContext getOutputContext()
com.lidroid.xutils.db.sqlite.CursorUtils
org.codehaus.jackson.map.util.ArrayBuilders
    public static java.util.List addToList(java.util.List,java.lang.Object)
    public static java.lang.Object[] insertInList(java.lang.Object[],java.lang.Object)
    public static java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object)
    public static java.util.Iterator arrayAsIterator(java.lang.Object[])
org.codehaus.jackson.impl.JsonGeneratorBase
org.codehaus.jackson.map.ser.std.RawSerializer
com.squareup.picasso.Request
    public com.squareup.picasso.Request$Builder buildUpon()
okhttp3.Interceptor$Chain
    public abstract okhttp3.Request request()
    public abstract okhttp3.Connection connection()
com.facebook.cache.disk.DiskCacheFactory
    public void <init>()
com.google.gson.TreeTypeAdapter
    public static com.google.gson.TypeAdapterFactory newFactoryWithMatchRawType(com.google.gson.reflect.TypeToken,java.lang.Object)
    public static com.google.gson.TypeAdapterFactory newTypeHierarchyFactory(java.lang.Class,java.lang.Object)
okhttp3.internal.DiskLruCache$4
org.codehaus.jackson.map.TypeDeserializer
    public abstract org.codehaus.jackson.map.jsontype.TypeIdResolver getTypeIdResolver()
    public abstract java.lang.Class getDefaultImpl()
com.daimajia.swipe.SimpleSwipeListener
    public void onStartOpen(com.daimajia.swipe.SwipeLayout)
    public void onOpen(com.daimajia.swipe.SwipeLayout)
    public void onClose(com.daimajia.swipe.SwipeLayout)
com.lidroid.xutils.BitmapUtils
    public void <init>(android.content.Context)
    public void <init>(android.content.Context,java.lang.String)
    public void <init>(android.content.Context,java.lang.String,int)
    public void <init>(android.content.Context,java.lang.String,int,int)
    public void <init>(android.content.Context,java.lang.String,float)
    public void <init>(android.content.Context,java.lang.String,float,int)
    private static boolean bitmapLoadTaskExist(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack)
    static synthetic boolean access$200(com.lidroid.xutils.BitmapUtils)
    static synthetic boolean access$300(com.lidroid.xutils.BitmapUtils)
    static synthetic com.lidroid.xutils.bitmap.BitmapGlobalConfig access$400(com.lidroid.xutils.BitmapUtils)
    public com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(android.graphics.drawable.Drawable)
    public com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(int)
    public com.lidroid.xutils.BitmapUtils configDefaultLoadingImage(android.graphics.Bitmap)
    public com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(android.graphics.drawable.Drawable)
    public com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(int)
    public com.lidroid.xutils.BitmapUtils configDefaultLoadFailedImage(android.graphics.Bitmap)
    public com.lidroid.xutils.BitmapUtils configDefaultBitmapMaxSize(int,int)
    public com.lidroid.xutils.BitmapUtils configDefaultBitmapMaxSize(com.lidroid.xutils.bitmap.core.BitmapSize)
    public com.lidroid.xutils.BitmapUtils configDefaultImageLoadAnimation(android.view.animation.Animation)
    public com.lidroid.xutils.BitmapUtils configDefaultAutoRotation(boolean)
    public com.lidroid.xutils.BitmapUtils configDefaultShowOriginal(boolean)
    public com.lidroid.xutils.BitmapUtils configDefaultBitmapConfig(android.graphics.Bitmap$Config)
    public com.lidroid.xutils.BitmapUtils configDefaultDisplayConfig(com.lidroid.xutils.bitmap.BitmapDisplayConfig)
    public com.lidroid.xutils.BitmapUtils configDownloader(com.lidroid.xutils.bitmap.download.Downloader)
    public com.lidroid.xutils.BitmapUtils configDefaultCacheExpiry(long)
    public com.lidroid.xutils.BitmapUtils configDefaultConnectTimeout(int)
    public com.lidroid.xutils.BitmapUtils configDefaultReadTimeout(int)
    public com.lidroid.xutils.BitmapUtils configThreadPoolSize(int)
    public com.lidroid.xutils.BitmapUtils configMemoryCacheEnabled(boolean)
    public com.lidroid.xutils.BitmapUtils configDiskCacheEnabled(boolean)
    public com.lidroid.xutils.BitmapUtils configDiskCacheFileNameGenerator(com.lidroid.xutils.cache.FileNameGenerator)
    public com.lidroid.xutils.BitmapUtils configBitmapCacheListener(com.lidroid.xutils.bitmap.BitmapCacheListener)
    public void display(android.view.View,java.lang.String)
    public void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig)
    public void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack)
    public void display(android.view.View,java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig,com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack)
    public void clearCache()
    public void clearMemoryCache()
    public void clearDiskCache()
    public void clearCache(java.lang.String)
    public void clearMemoryCache(java.lang.String)
    public void clearDiskCache(java.lang.String)
    public void flushCache()
    public void closeCache()
    public java.io.File getBitmapFileFromDiskCache(java.lang.String)
    public android.graphics.Bitmap getBitmapFromMemCache(java.lang.String,com.lidroid.xutils.bitmap.BitmapDisplayConfig)
    public boolean supportPause()
    public boolean supportResume()
    public boolean supportCancel()
    public void pause()
    public void resume()
    public void cancel()
    public boolean isPaused()
    public boolean isCancelled()
    private boolean pauseTask
    private boolean cancelAllTask
    private android.content.Context context
    private com.lidroid.xutils.bitmap.BitmapGlobalConfig globalConfig
    private com.lidroid.xutils.bitmap.BitmapDisplayConfig defaultDisplayConfig
com.example.administrator.igoushop_app_test.pojos.Size
    public java.lang.Integer getId()
    public void setId(java.lang.Integer)
    public void setName(java.lang.String)
    public int isState()
    public void setState(int)
    public void setColors(java.util.Set)
    public com.example.administrator.igoushop_app_test.pojos.Product getProduct()
    public void setProduct(com.example.administrator.igoushop_app_test.pojos.Product)
    public java.lang.String show()
    private java.lang.Integer id
    private int state
    private com.example.administrator.igoushop_app_test.pojos.Product product
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$Single
com.facebook.imagepipeline.memory.FlexByteArrayPool
    public java.util.Map getStats()
    public int getMinBufferSize()
android.support.design.widget.BottomSheetBehavior$State
org.codehaus.jackson.map.deser.BeanDeserializerBuilder
    protected void <init>(org.codehaus.jackson.map.deser.BeanDeserializerBuilder)
    private static java.util.HashMap _copy(java.util.HashMap)
    public java.util.Iterator getProperties()
    public org.codehaus.jackson.map.deser.SettableBeanProperty removeProperty(java.lang.String)
    public org.codehaus.jackson.map.deser.ValueInstantiator getValueInstantiator()
org.codehaus.jackson.map.deser.StdDeserializer
okhttp3.RequestBody$3
org.codehaus.jackson.map.introspect.BasicClassIntrospector
    public org.codehaus.jackson.map.introspect.BasicBeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)
    public org.codehaus.jackson.map.introspect.BasicBeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)
    protected org.codehaus.jackson.map.introspect.MethodFilter getSerializationMethodFilter(org.codehaus.jackson.map.SerializationConfig)
    protected org.codehaus.jackson.map.introspect.MethodFilter getDeserializationMethodFilter(org.codehaus.jackson.map.DeserializationConfig)
    public synthetic bridge org.codehaus.jackson.map.BeanDescription forDirectClassAnnotations(org.codehaus.jackson.map.MapperConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)
    public synthetic bridge org.codehaus.jackson.map.BeanDescription forSerialization(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.ClassIntrospector$MixInResolver)
de.hdodenhof.circleimageview.R$styleable
    private void <init>()
org.codehaus.jackson.util.JsonParserSequence
    public int containedParsersCount()
org.codehaus.jackson.map.ser.ContainerSerializers
com.facebook.imagepipeline.producers.ResizeAndRotateProducer
    private static final java.lang.String PRODUCER_NAME
    private static final java.lang.String ORIGINAL_SIZE_KEY
    private static final java.lang.String REQUESTED_SIZE_KEY
    private static final java.lang.String FRACTION_KEY
    static final int DEFAULT_JPEG_QUALITY
    static final int MAX_JPEG_SCALE_NUMERATOR
    static final int MIN_TRANSFORM_INTERVAL_MS
    private static final float ROUNDUP_FRACTION
butterknife.internal.ListenerClass$NONE
org.codehaus.jackson.map.ser.std.ContainerSerializerBase
    protected void <init>(java.lang.Class,boolean)
    public org.codehaus.jackson.map.ser.std.ContainerSerializerBase withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)
    public abstract org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)
org.codehaus.jackson.map.ser.std.StdArraySerializers$BooleanArraySerializer
    public org.codehaus.jackson.map.ser.std.ContainerSerializerBase _withValueTypeSerializer(org.codehaus.jackson.map.TypeSerializer)
    public void serializeContents(boolean[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
okhttp3.OkHttpClient$1
    public void addLenient(okhttp3.Headers$Builder,java.lang.String,java.lang.String)
    public void setCache(okhttp3.OkHttpClient$Builder,okhttp3.internal.InternalCache)
    public void callEnqueue(okhttp3.Call,okhttp3.Callback,boolean)
    public okhttp3.internal.http.StreamAllocation callEngineGetStreamAllocation(okhttp3.Call)
    public okhttp3.HttpUrl getHttpUrlChecked(java.lang.String)
com.cjj.Util
    public void <init>()
    public static int px2dip(android.content.Context,float)
org.codehaus.jackson.sym.NameN
com.lidroid.xutils.http.client.entity.GZipDecompressingEntity
android.support.annotation.CallSuper
okio.Segment
    static final int SIZE
org.codehaus.jackson.node.ObjectNode$NoFieldsIterator
org.codehaus.jackson.map.deser.ValueInstantiators$Base
okio.Buffer$2
butterknife.OnItemLongClick
    public abstract int[] value()
com.example.administrator.igoushop_app_test.R$id
butterknife.ButterKnife
    public static void setDebug(boolean)
    public static butterknife.Unbinder bind(android.view.View)
    public static butterknife.Unbinder bind(android.app.Dialog)
    public static butterknife.Unbinder bind(java.lang.Object,android.app.Activity)
    public static butterknife.Unbinder bind(java.lang.Object,android.view.View)
    public static butterknife.Unbinder bind(java.lang.Object,android.app.Dialog)
    public static varargs void apply(java.util.List,butterknife.ButterKnife$Action[])
    public static varargs void apply(android.view.View[],butterknife.ButterKnife$Action[])
    public static void apply(java.util.List,butterknife.ButterKnife$Action)
    public static void apply(android.view.View[],butterknife.ButterKnife$Action)
    public static varargs void apply(android.view.View,butterknife.ButterKnife$Action[])
    public static void apply(android.view.View,butterknife.ButterKnife$Action)
    public static void apply(java.util.List,butterknife.ButterKnife$Setter,java.lang.Object)
    public static void apply(android.view.View[],butterknife.ButterKnife$Setter,java.lang.Object)
    public static void apply(android.view.View,butterknife.ButterKnife$Setter,java.lang.Object)
    public static void apply(java.util.List,android.util.Property,java.lang.Object)
    public static void apply(android.view.View[],android.util.Property,java.lang.Object)
    public static void apply(android.view.View,android.util.Property,java.lang.Object)
    public static android.view.View findById(android.view.View,int)
    public static android.view.View findById(android.app.Activity,int)
    public static android.view.View findById(android.app.Dialog,int)
    private static final java.lang.String TAG
org.codehaus.jackson.map.ser.std.StdArraySerializers$ArraySerializerBase
    public final void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public final void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
    protected abstract void serializeContents(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
com.lidroid.xutils.http.callback.RequestCallBackHandler
okhttp3.Call
    public abstract okhttp3.Request request()
    public abstract okhttp3.Response execute()
    public abstract void cancel()
    public abstract boolean isExecuted()
    public abstract boolean isCanceled()
com.lidroid.xutils.view.annotation.event.OnItemClick
org.codehaus.jackson.io.UTF8Writer
org.codehaus.jackson.map.util.ClassUtil
    public void <init>()
    public static java.lang.String isLocalType(java.lang.Class)
    public static boolean isConcrete(java.lang.reflect.Member)
    public static boolean isCollectionMapOrArray(java.lang.Class)
    public static java.lang.String getClassDescription(java.lang.Object)
    public static void throwRootCause(java.lang.Throwable)
    public static java.lang.Class wrapperType(java.lang.Class)
    public static java.lang.Class findEnumType(java.lang.Class)
com.example.administrator.igoushop_app_test.R
org.codehaus.jackson.map.ser.std.AsArraySerializerBase
com.facebook.imagepipeline.cache.EncodedCountingMemoryCacheFactory
    public void <init>()
okhttp3.CacheControl
    public int sMaxAgeSeconds()
    public boolean noTransform()
com.example.administrator.igoushop_app_test.bean.HotTab
    public void setTitle(java.lang.String)
    public void setFragment(android.support.v4.app.Fragment)
com.lidroid.xutils.view.annotation.event.OnTouch
org.codehaus.jackson.map.jsontype.TypeResolverBuilder
    public abstract org.codehaus.jackson.map.TypeSerializer buildTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,java.util.Collection,org.codehaus.jackson.map.BeanProperty)
com.facebook.imagepipeline.core.ImagePipeline
    private com.facebook.datasource.DataSource submitPrefetchRequest(com.facebook.imagepipeline.producers.Producer,com.facebook.imagepipeline.request.ImageRequest,com.facebook.imagepipeline.request.ImageRequest$RequestLevel,java.lang.Object)
    private com.android.internal.util.Predicate predicateForUri(android.net.Uri)
    static synthetic com.facebook.imagepipeline.cache.BufferedDiskCache access$000(com.facebook.imagepipeline.core.ImagePipeline)
    public com.facebook.common.internal.Supplier getDataSourceSupplier(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object,boolean)
    public com.facebook.common.internal.Supplier getEncodedImageDataSourceSupplier(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object)
    public com.facebook.datasource.DataSource fetchEncodedImage(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object)
    public com.facebook.datasource.DataSource prefetchToBitmapCache(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object)
    public com.facebook.datasource.DataSource prefetchToDiskCache(com.facebook.imagepipeline.request.ImageRequest,java.lang.Object)
    public void evictFromMemoryCache(android.net.Uri)
    public void evictFromDiskCache(android.net.Uri)
    public void evictFromDiskCache(com.facebook.imagepipeline.request.ImageRequest)
    public void evictFromCache(android.net.Uri)
    public void clearMemoryCaches()
    public void clearDiskCaches()
    public void clearCaches()
    public boolean isInBitmapMemoryCache(android.net.Uri)
    public boolean isInBitmapMemoryCache(com.facebook.imagepipeline.request.ImageRequest)
    public com.facebook.datasource.DataSource isInDiskCache(android.net.Uri)
    public com.facebook.datasource.DataSource isInDiskCache(com.facebook.imagepipeline.request.ImageRequest)
    public void pause()
    public void resume()
    public boolean isPaused()
org.codehaus.jackson.map.ser.std.StdArraySerializers$CharArraySerializer
    private final void _writeArrayContents(org.codehaus.jackson.JsonGenerator,char[])
    public void serialize(char[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public void serializeWithType(char[],org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public synthetic bridge void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
com.facebook.imagepipeline.nativecode.Bitmaps
    public void <init>()
    public static void copyBitmap(android.graphics.Bitmap,android.graphics.Bitmap)
    private static native void nativeCopyBitmap(android.graphics.Bitmap,int,android.graphics.Bitmap,int,int)
com.example.administrator.igoushop_app_test.tools.JSONUtils
    public void <init>()
    public static com.google.gson.Gson getGson()
    public static java.lang.Object fromJson(java.lang.String,java.lang.reflect.Type)
    public static java.lang.String toJSON(java.lang.Object)
com.lidroid.xutils.task.PriorityAsyncTask$WorkerRunnable
    private void <init>()
    synthetic void <init>(com.lidroid.xutils.task.PriorityAsyncTask$1)
    java.lang.Object[] mParams
okhttp3.Response
    public okhttp3.Protocol protocol()
    public java.lang.String message()
    public java.util.List headers(java.lang.String)
    public okhttp3.ResponseBody peekBody(long)
    public boolean isRedirect()
    public okhttp3.Response networkResponse()
    public okhttp3.Response cacheResponse()
    public okhttp3.Response priorResponse()
    public java.util.List challenges()
org.codehaus.jackson.sym.BytesToNameCanonicalizer
    private void <init>(org.codehaus.jackson.sym.BytesToNameCanonicalizer,boolean,int,org.codehaus.jackson.sym.BytesToNameCanonicalizer$TableInfo)
    private void mergeChild(org.codehaus.jackson.sym.BytesToNameCanonicalizer$TableInfo)
    public static org.codehaus.jackson.sym.Name getEmptyName()
    protected static int[] calcQuads(byte[])
    private void _addSymbol(int,org.codehaus.jackson.sym.Name)
    private void rehash()
    private void nukeSymbols()
    private int findBestBucket()
    private void unshareMain()
    private void unshareCollision()
    private void unshareNames()
    private void expandCollision()
    private static org.codehaus.jackson.sym.Name constructName(int,java.lang.String,int,int)
    private static org.codehaus.jackson.sym.Name constructName(int,java.lang.String,int[],int)
    public org.codehaus.jackson.sym.BytesToNameCanonicalizer makeChild(boolean,boolean)
    public void release()
    public int size()
    public int bucketCount()
    public boolean maybeDirty()
    public int hashSeed()
    public int collisionCount()
    public int maxCollisionLength()
    public org.codehaus.jackson.sym.Name findName(int)
    public org.codehaus.jackson.sym.Name findName(int,int)
    public org.codehaus.jackson.sym.Name findName(int[],int)
    public org.codehaus.jackson.sym.Name addName(java.lang.String,int,int)
    public org.codehaus.jackson.sym.Name addName(java.lang.String,int[],int)
    public final int calcHash(int)
    public final int calcHash(int,int)
    public final int calcHash(int[],int)
    protected void reportTooManyCollisions(int)
    protected int _count
    protected int _longestCollisionList
    protected int _mainHashMask
    protected int[] _mainHash
    protected org.codehaus.jackson.sym.Name[] _mainNames
    protected org.codehaus.jackson.sym.BytesToNameCanonicalizer$Bucket[] _collList
    protected int _collCount
    protected int _collEnd
    private transient boolean _needRehash
    private boolean _mainHashShared
    private boolean _mainNamesShared
    private boolean _collListShared
    protected static final int DEFAULT_TABLE_SIZE
    protected static final int MAX_TABLE_SIZE
    static final int MAX_ENTRIES_FOR_REUSE
    static final int MAX_COLL_CHAIN_LENGTH
    static final int MAX_COLL_CHAIN_FOR_REUSE
    static final int MIN_HASH_SIZE
    static final int INITIAL_COLLISION_LEN
    static final int LAST_VALID_BUCKET
    private static final int MULT
    private static final int MULT2
    private static final int MULT3
com.daimajia.slider.library.R$dimen
com.example.administrator.igoushop_app_test.widget.Contants
com.facebook.drawee.backends.pipeline.Fresco
    private void <init>()
    public static void initialize(android.content.Context,com.facebook.imagepipeline.core.ImagePipelineConfig)
    public static com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilderSupplier getDraweeControllerBuilderSupplier()
    public static com.facebook.drawee.backends.pipeline.PipelineDraweeControllerBuilder newDraweeControllerBuilder()
    public static com.facebook.imagepipeline.core.ImagePipelineFactory getImagePipelineFactory()
    public static com.facebook.imagepipeline.core.ImagePipeline getImagePipeline()
    public static void shutDown()
org.codehaus.jackson.map.ser.std.JsonValueSerializer
butterknife.BindArray
    public abstract int value()
org.codehaus.jackson.map.ext.JodaDeserializers$DateTimeDeserializer
com.google.gson.internal.Streams$AppendableWriter$CurrentWrite
com.facebook.imagepipeline.producers.RemoveImageTransformMetaDataProducer$1
mehdi.sakout.dynamicbox.DynamicBox$Clonner
com.facebook.drawee.controller.ForwardingControllerListener
    public static com.facebook.drawee.controller.ForwardingControllerListener create()
    public static com.facebook.drawee.controller.ForwardingControllerListener of(com.facebook.drawee.controller.ControllerListener)
    public static com.facebook.drawee.controller.ForwardingControllerListener of(com.facebook.drawee.controller.ControllerListener,com.facebook.drawee.controller.ControllerListener)
    public synchronized void removeListener(com.facebook.drawee.controller.ControllerListener)
    private static final java.lang.String TAG
com.facebook.drawee.view.DraweeHolder$1
    public void onStart(android.app.Activity)
    public void onStop(android.app.Activity)
com.facebook.imagepipeline.producers.LocalFileFetchProducer
    static final java.lang.String PRODUCER_NAME
org.codehaus.jackson.util.TokenBuffer$Segment
    public static final int TOKENS_PER_SEGMENT
com.lidroid.xutils.db.annotation.Foreign
bolts.Task$6
com.facebook.fbcore.R
org.codehaus.jackson.PrettyPrinter
com.example.administrator.igoushop_app_test.tools.JacksonUtils
    public void <init>()
    public java.lang.Object toBean(java.lang.String,java.lang.Class)
bolts.Capture
okio.Util
    private void <init>()
    public static long reverseBytesLong(long)
com.facebook.imagepipeline.core.ImagePipelineConfig$Builder
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setAnimatedImageFactory(com.facebook.imagepipeline.animated.factory.AnimatedImageFactory)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setBitmapsConfig(android.graphics.Bitmap$Config)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setBitmapMemoryCacheParamsSupplier(com.facebook.common.internal.Supplier)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setCacheKeyFactory(com.facebook.imagepipeline.cache.CacheKeyFactory)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setDecodeFileDescriptorEnabled(boolean)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setDecodeMemoryFileEnabled(boolean)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setDownsampleEnabled(boolean)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setWebpSupportEnabled(boolean)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setEncodedMemoryCacheParamsSupplier(com.facebook.common.internal.Supplier)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setExecutorSupplier(com.facebook.imagepipeline.core.ExecutorSupplier)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setImageCacheStatsTracker(com.facebook.imagepipeline.cache.ImageCacheStatsTracker)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setImageDecoder(com.facebook.imagepipeline.decoder.ImageDecoder)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setIsPrefetchEnabledSupplier(com.facebook.common.internal.Supplier)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setMainDiskCacheConfig(com.facebook.cache.disk.DiskCacheConfig)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setMemoryTrimmableRegistry(com.facebook.common.memory.MemoryTrimmableRegistry)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setNetworkFetcher(com.facebook.imagepipeline.producers.NetworkFetcher)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setPlatformBitmapFactory(com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setPoolFactory(com.facebook.imagepipeline.memory.PoolFactory)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setProgressiveJpegConfig(com.facebook.imagepipeline.decoder.ProgressiveJpegConfig)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setRequestListeners(java.util.Set)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setResizeAndRotateEnabledForNetwork(boolean)
    public com.facebook.imagepipeline.core.ImagePipelineConfig$Builder setSmallImageDiskCacheConfig(com.facebook.cache.disk.DiskCacheConfig)
com.daimajia.slider.library.R$style
bolts.AppLinkNavigation$1
org.codehaus.jackson.JsonParser
    public abstract void setCodec(org.codehaus.jackson.ObjectCodec)
    public void setSchema(org.codehaus.jackson.FormatSchema)
    public boolean canUseSchema(org.codehaus.jackson.FormatSchema)
    public org.codehaus.jackson.Version version()
    public java.lang.Object getInputSource()
    public int releaseBuffered(java.io.OutputStream)
    public int releaseBuffered(java.io.Writer)
    public org.codehaus.jackson.JsonParser enable(org.codehaus.jackson.JsonParser$Feature)
    public org.codehaus.jackson.JsonParser disable(org.codehaus.jackson.JsonParser$Feature)
    public org.codehaus.jackson.JsonParser configure(org.codehaus.jackson.JsonParser$Feature,boolean)
    public void setFeature(org.codehaus.jackson.JsonParser$Feature,boolean)
    public void enableFeature(org.codehaus.jackson.JsonParser$Feature)
    public void disableFeature(org.codehaus.jackson.JsonParser$Feature)
    public final boolean isFeatureEnabled(org.codehaus.jackson.JsonParser$Feature)
    public boolean nextFieldName(org.codehaus.jackson.SerializableString)
    public java.lang.String nextTextValue()
    public int nextIntValue(int)
    public long nextLongValue(long)
    public java.lang.Boolean nextBooleanValue()
    public abstract boolean isClosed()
    public boolean hasCurrentToken()
    public abstract org.codehaus.jackson.JsonStreamContext getParsingContext()
    public org.codehaus.jackson.JsonToken getLastClearedToken()
    public boolean getBooleanValue()
    public byte[] getBinaryValue()
    public double getValueAsDouble()
    public double getValueAsDouble(double)
    public boolean getValueAsBoolean()
    public boolean getValueAsBoolean(boolean)
    public java.lang.Object readValueAs(java.lang.Class)
    public java.lang.Object readValueAs(org.codehaus.jackson.type.TypeReference)
    public java.util.Iterator readValuesAs(java.lang.Class)
    public java.util.Iterator readValuesAs(org.codehaus.jackson.type.TypeReference)
    public org.codehaus.jackson.JsonNode readValueAsTree()
    private static final int MIN_BYTE_I
    private static final int MAX_BYTE_I
    private static final int MIN_SHORT_I
    private static final int MAX_SHORT_I
com.nineoldandroids.view.ViewPropertyAnimatorHC$NameValuesHolder
okhttp3.CertificatePinner$Pin
    void <init>(java.lang.String,java.lang.String)
com.facebook.imagepipeline.listener.BaseRequestListener
com.daimajia.slider.library.R$drawable
okhttp3.internal.framed.FramedConnection$Builder
    public okhttp3.internal.framed.FramedConnection$Builder socket(java.net.Socket)
    public okhttp3.internal.framed.FramedConnection$Builder pushObserver(okhttp3.internal.framed.PushObserver)
butterknife.OnTextChanged
    public abstract int[] value()
    public abstract butterknife.OnTextChanged$Callback callback()
com.facebook.drawee.controller.AbstractDraweeControllerBuilder
    public com.facebook.drawee.controller.AbstractDraweeControllerBuilder reset()
    public java.lang.Object getImageRequest()
    public com.facebook.drawee.controller.AbstractDraweeControllerBuilder setLowResImageRequest(java.lang.Object)
    public java.lang.Object getLowResImageRequest()
    public com.facebook.drawee.controller.AbstractDraweeControllerBuilder setFirstAvailableImageRequests(java.lang.Object[])
    public com.facebook.drawee.controller.AbstractDraweeControllerBuilder setFirstAvailableImageRequests(java.lang.Object[],boolean)
    public java.lang.Object[] getFirstAvailableImageRequests()
    public void setDataSourceSupplier(com.facebook.common.internal.Supplier)
    public com.facebook.common.internal.Supplier getDataSourceSupplier()
    public com.facebook.drawee.controller.AbstractDraweeControllerBuilder setTapToRetryEnabled(boolean)
    public boolean getTapToRetryEnabled()
    public com.facebook.drawee.controller.AbstractDraweeControllerBuilder setRetainImageOnFailure(boolean)
    public com.facebook.drawee.controller.AbstractDraweeControllerBuilder setAutoPlayAnimations(boolean)
    public boolean getAutoPlayAnimations()
    public com.facebook.drawee.controller.AbstractDraweeControllerBuilder setControllerListener(com.facebook.drawee.controller.ControllerListener)
    public com.facebook.drawee.controller.ControllerListener getControllerListener()
    protected android.content.Context getContext()
org.codehaus.jackson.util.JsonGeneratorDelegate
com.google.gson.JsonIOException
    public void <init>(java.lang.String,java.lang.Throwable)
com.facebook.imageformat.GifFormatChecker
    private void <init>()
    private static final int FRAME_HEADER_SIZE
org.codehaus.jackson.map.ser.BeanPropertyFilter
org.codehaus.jackson.map.ser.MapSerializer
com.facebook.common.internal.Objects$ToStringHelper
    private com.facebook.common.internal.Objects$ToStringHelper addHolder(java.lang.Object)
    public com.facebook.common.internal.Objects$ToStringHelper omitNullValues()
    public com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,char)
    public com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,double)
    public com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,float)
    public com.facebook.common.internal.Objects$ToStringHelper add(java.lang.String,long)
    public com.facebook.common.internal.Objects$ToStringHelper addValue(java.lang.Object)
    public com.facebook.common.internal.Objects$ToStringHelper addValue(boolean)
    public com.facebook.common.internal.Objects$ToStringHelper addValue(char)
    public com.facebook.common.internal.Objects$ToStringHelper addValue(double)
    public com.facebook.common.internal.Objects$ToStringHelper addValue(float)
    public com.facebook.common.internal.Objects$ToStringHelper addValue(int)
    public com.facebook.common.internal.Objects$ToStringHelper addValue(long)
butterknife.BindFloat
    public abstract int value()
com.facebook.common.soloader.SoLoaderShim$1
com.facebook.drawee.R$attr
org.codehaus.jackson.map.deser.StdDeserializer$StringDeserializer
com.facebook.drawee.generic.WrappingUtils
    public void <init>()
    static com.facebook.drawee.drawable.ScaleTypeDrawable wrapChildWithScaleType(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.drawable.ScalingUtils$ScaleType)
    static void updateOverlayColorRounding(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.generic.RoundingParams)
    static void updateLeafRounding(com.facebook.drawee.drawable.DrawableParent,com.facebook.drawee.generic.RoundingParams,android.content.res.Resources)
    static void resetRoundingParams(com.facebook.drawee.drawable.Rounded)
com.facebook.imageformat.ImageFormatChecker
    private void <init>()
    public static com.facebook.imageformat.ImageFormat getImageFormat(java.lang.String)
    private static final int SIMPLE_WEBP_HEADER_LENGTH
    private static final int EXTENDED_WEBP_HEADER_LENGTH
    private static final int GIF_HEADER_LENGTH
com.facebook.imageformat.ImageFormat
    public static java.lang.String getFileExtension(com.facebook.imageformat.ImageFormat)
org.codehaus.jackson.impl.ByteSourceBootstrapper
com.lidroid.xutils.DbUtils$DaoConfig
org.codehaus.jackson.map.ser.EnumSerializer
com.lidroid.xutils.db.sqlite.Selector$OrderBy
com.lidroid.xutils.db.annotation.Table
okhttp3.internal.framed.FramedConnection$Reader
    public void alternateService(int,java.lang.String,okio.ByteString,java.lang.String,int,long)
com.daimajia.slider.library.SliderTypes.DefaultSliderView
org.codehaus.jackson.map.deser.BeanDeserializerFactory
    public void <init>()
    public final org.codehaus.jackson.map.DeserializerFactory$Config getConfig()
    public org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config)
com.daimajia.slider.library.R$id
    private void <init>()
com.facebook.imagepipeline.datasource.BaseBitmapDataSubscriber
com.facebook.common.file.FileUtils$RenameException
    public void <init>(java.lang.String)
org.codehaus.jackson.map.ser.std.StringSerializer
    public void serialize(java.lang.String,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
com.facebook.binaryresource.FileBinaryResource
    public byte[] read()
com.lidroid.xutils.http.client.multipart.HttpMultipart$1
com.daimajia.slider.library.R$styleable
    private void <init>()
android.support.design.widget.SnackbarManager$SnackbarRecord
    void <init>(int,android.support.design.widget.SnackbarManager$Callback)
    static synthetic int access$102(android.support.design.widget.SnackbarManager$SnackbarRecord,int)
com.google.gson.DefaultDateTypeAdapter
    void <init>(int)
com.facebook.cache.disk.DefaultDiskStorage
    private boolean query(java.lang.String,boolean)
    private com.facebook.cache.disk.DiskStorage$DiskDumpInfoEntry dumpCacheEntry(com.facebook.cache.disk.DiskStorage$Entry)
    private java.lang.String typeOfBytes(byte[])
    public boolean isEnabled()
    public boolean contains(java.lang.String,java.lang.Object)
    public boolean touch(java.lang.String,java.lang.Object)
    public long remove(java.lang.String)
    public void clearAll()
    public com.facebook.cache.disk.DiskStorage$DiskDumpInfo getDumpInfo()
    private static final java.lang.String CONTENT_FILE_EXTENSION
    private static final java.lang.String TEMP_FILE_EXTENSION
    private static final java.lang.String DEFAULT_DISK_STORAGE_VERSION_PREFIX
    private static final int SHARDING_BUCKET_COUNT
com.facebook.common.internal.DoNotStrip
org.codehaus.jackson.impl.ReaderBasedParserBase
com.daimajia.swipe.R$styleable
    private void <init>()
okhttp3.Cache$2
com.facebook.imagepipeline.memory.BasePool
    public void trim(com.facebook.common.memory.MemoryTrimType)
    protected void onParamsChanged()
    void trimToNothing()
    public synchronized java.util.Map getStats()
com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder
    public abstract com.facebook.drawee.interfaces.SimpleDraweeControllerBuilder setUri(java.lang.String)
org.codehaus.jackson.map.ser.std.EnumMapSerializer
org.codehaus.jackson.map.ser.impl.PropertySerializerMap$TypeAndSerializer
org.codehaus.jackson.JsonStreamContext
    public abstract org.codehaus.jackson.JsonStreamContext getParent()
    public final int getEntryCount()
    public abstract java.lang.String getCurrentName()
    protected static final int TYPE_ROOT
    protected static final int TYPE_ARRAY
    protected static final int TYPE_OBJECT
com.lidroid.xutils.view.EventListenerManager$DynamicHandler
    public void setHandler(java.lang.Object)
org.codehaus.jackson.annotate.JsonWriteNullProperties
butterknife.internal.Utils$SupportV4
mehdi.sakout.dynamicbox.R
com.facebook.imagepipeline.listener.ForwardingRequestListener
    private static final java.lang.String TAG
net.lemonsoft.lemonbubble.R$style
okio.Base64
    private void <init>()
    public static byte[] decode(java.lang.String)
    public static java.lang.String encodeUrl(byte[])
com.cjj.MaterialProgressDrawable$ProgressDrawableSize
android.support.graphics.drawable.PathParser
    void <init>()
    public static android.graphics.Path createPathFromPathData(java.lang.String)
    private static final java.lang.String LOGTAG
org.codehaus.jackson.map.JsonSerializer$None
    public void <init>()
com.lidroid.xutils.http.ResponseInfo
org.codehaus.jackson.map.introspect.AnnotatedField
    public int getModifiers()
    public int getAnnotationCount()
    public synthetic bridge java.lang.reflect.AnnotatedElement getAnnotated()
    public synthetic bridge org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)
bolts.WebViewAppLinkResolver$2$2
com.facebook.cache.disk.DiskStorage
    public abstract boolean isEnabled()
    public abstract java.lang.String getFilename(java.lang.String)
    public abstract boolean contains(java.lang.String,java.lang.Object)
    public abstract boolean touch(java.lang.String,java.lang.Object)
    public abstract long remove(java.lang.String)
    public abstract void clearAll()
    public abstract com.facebook.cache.disk.DiskStorage$DiskDumpInfo getDumpInfo()
org.codehaus.jackson.map.module.SimpleModule
butterknife.OnItemClick
    public abstract int[] value()
com.squareup.picasso.FetchAction
org.codehaus.jackson.map.ser.PropertyBuilder$EmptyCollectionChecker
org.codehaus.jackson.map.deser.CustomDeserializerFactory
com.facebook.cache.disk.DiskStorage$DiskDumpInfoEntry
org.codehaus.jackson.map.ser.std.ObjectArraySerializer
com.facebook.imagepipeline.gif.GifImage
    public static com.facebook.imagepipeline.gif.GifImage create(byte[])
    void <init>(long)
    private static com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo$DisposalMethod fromGifDisposalMethod(int)
    private static native com.facebook.imagepipeline.gif.GifImage nativeCreateFromDirectByteBuffer(java.nio.ByteBuffer)
    private native int nativeGetWidth()
    private native int nativeGetHeight()
    private native int nativeGetDuration()
    private native int nativeGetFrameCount()
    private native int[] nativeGetFrameDurations()
    private native int nativeGetLoopCount()
    private native com.facebook.imagepipeline.gif.GifFrame nativeGetFrame(int)
    private native int nativeGetSizeInBytes()
    private native void nativeDispose()
    private native void nativeFinalize()
    protected void finalize()
    public void dispose()
    public int getWidth()
    public int getHeight()
    public int getFrameCount()
    public int getDuration()
    public int[] getFrameDurations()
    public int getLoopCount()
    public com.facebook.imagepipeline.gif.GifFrame getFrame(int)
    public boolean doesRenderSupportScaling()
    public int getSizeInBytes()
    public com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo getFrameInfo(int)
    public synthetic bridge com.facebook.imagepipeline.animated.base.AnimatedImageFrame getFrame(int)
    private long mNativeContext
okhttp3.RequestBody
    public static okhttp3.RequestBody create(okhttp3.MediaType,java.lang.String)
    public static okhttp3.RequestBody create(okhttp3.MediaType,okio.ByteString)
    public static okhttp3.RequestBody create(okhttp3.MediaType,byte[])
    public static okhttp3.RequestBody create(okhttp3.MediaType,byte[],int,int)
    public static okhttp3.RequestBody create(okhttp3.MediaType,java.io.File)
org.codehaus.jackson.node.IntNode
    public org.codehaus.jackson.JsonToken asToken()
    public org.codehaus.jackson.JsonParser$NumberType getNumberType()
    public boolean isIntegralNumber()
    public boolean isInt()
    public java.lang.Number getNumberValue()
    public int getIntValue()
    public long getLongValue()
    public double getDoubleValue()
    public java.math.BigDecimal getDecimalValue()
    public java.math.BigInteger getBigIntegerValue()
    public boolean asBoolean(boolean)
    public final void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    static final int MIN_CANONICAL
    static final int MAX_CANONICAL
com.facebook.common.executors.StatefulRunnable
    protected static final int STATE_CREATED
    protected static final int STATE_STARTED
    protected static final int STATE_CANCELLED
    protected static final int STATE_FINISHED
    protected static final int STATE_FAILED
org.codehaus.jackson.impl.JsonReadContext
    public synthetic bridge org.codehaus.jackson.JsonStreamContext getParent()
com.lidroid.xutils.view.annotation.event.OnLongClick
org.codehaus.jackson.map.util.LinkedNode
    public void <init>(java.lang.Object,org.codehaus.jackson.map.util.LinkedNode)
    public static boolean contains(org.codehaus.jackson.map.util.LinkedNode,java.lang.Object)
    final java.lang.Object _value
    final org.codehaus.jackson.map.util.LinkedNode _next
org.codehaus.jackson.node.BooleanNode
    public static org.codehaus.jackson.node.BooleanNode valueOf(boolean)
    public org.codehaus.jackson.JsonToken asToken()
    public boolean isBoolean()
    public boolean getBooleanValue()
    public boolean asBoolean()
    public boolean asBoolean(boolean)
    public int asInt(int)
    public long asLong(long)
    public double asDouble(double)
    public final void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
com.facebook.imageformat.ImageFormat$1
com.nineoldandroids.view.ViewPropertyAnimatorPreHC
org.codehaus.jackson.map.introspect.AnnotatedClass
    public org.codehaus.jackson.map.introspect.AnnotatedClass withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)
    public java.lang.Class getAnnotated()
    public int getModifiers()
    public java.lang.reflect.Type getGenericType()
    protected org.codehaus.jackson.map.introspect.AnnotationMap getAllAnnotations()
    public boolean hasAnnotations()
    public int getMemberMethodCount()
    public int getFieldCount()
    public void resolveMemberMethods(org.codehaus.jackson.map.introspect.MethodFilter,boolean)
    public void resolveFields(boolean)
    public synthetic bridge java.lang.reflect.AnnotatedElement getAnnotated()
    public synthetic bridge org.codehaus.jackson.map.introspect.Annotated withAnnotations(org.codehaus.jackson.map.introspect.AnnotationMap)
org.codehaus.jackson.format.InputAccessor$Std
com.facebook.common.internal.Preconditions
    private void <init>()
    public static varargs void checkState(boolean,java.lang.String,java.lang.Object[])
    public static varargs java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[])
    public static int checkPositionIndex(int,int)
    public static int checkPositionIndex(int,int,java.lang.String)
    private static java.lang.String badPositionIndex(int,int,java.lang.String)
    public static void checkPositionIndexes(int,int,int)
    private static java.lang.String badPositionIndexes(int,int,int)
okhttp3.HttpUrl$Builder
    private okhttp3.HttpUrl$Builder addPathSegments(java.lang.String,boolean)
    private void removeAllCanonicalQueryParameters(java.lang.String)
    public okhttp3.HttpUrl$Builder username(java.lang.String)
    public okhttp3.HttpUrl$Builder encodedUsername(java.lang.String)
    public okhttp3.HttpUrl$Builder password(java.lang.String)
    public okhttp3.HttpUrl$Builder encodedPassword(java.lang.String)
    public okhttp3.HttpUrl$Builder addPathSegment(java.lang.String)
    public okhttp3.HttpUrl$Builder addPathSegments(java.lang.String)
    public okhttp3.HttpUrl$Builder addEncodedPathSegment(java.lang.String)
    public okhttp3.HttpUrl$Builder addEncodedPathSegments(java.lang.String)
    public okhttp3.HttpUrl$Builder setPathSegment(int,java.lang.String)
    public okhttp3.HttpUrl$Builder setEncodedPathSegment(int,java.lang.String)
    public okhttp3.HttpUrl$Builder removePathSegment(int)
    public okhttp3.HttpUrl$Builder encodedPath(java.lang.String)
    public okhttp3.HttpUrl$Builder query(java.lang.String)
    public okhttp3.HttpUrl$Builder addQueryParameter(java.lang.String,java.lang.String)
    public okhttp3.HttpUrl$Builder addEncodedQueryParameter(java.lang.String,java.lang.String)
    public okhttp3.HttpUrl$Builder setQueryParameter(java.lang.String,java.lang.String)
    public okhttp3.HttpUrl$Builder setEncodedQueryParameter(java.lang.String,java.lang.String)
    public okhttp3.HttpUrl$Builder removeAllQueryParameters(java.lang.String)
    public okhttp3.HttpUrl$Builder removeAllEncodedQueryParameters(java.lang.String)
    public okhttp3.HttpUrl$Builder fragment(java.lang.String)
    public okhttp3.HttpUrl$Builder encodedFragment(java.lang.String)
com.example.administrator.igoushop_app_test.tools.FrameAnimationController
    private void <init>()
    public static void requestFrameDelay(java.lang.Runnable,long)
    private static final int MSG_ANIMATE
    public static final int ANIMATION_FRAME_DURATION
com.facebook.imagepipeline.memory.DefaultBitmapPoolParams
    private void <init>()
    private static final int MAX_SIZE_SOFT_CAP
com.facebook.imagepipeline.memory.PoolStatsTracker
    public static final java.lang.String BUCKETS_USED_PREFIX
    public static final java.lang.String USED_COUNT
    public static final java.lang.String USED_BYTES
    public static final java.lang.String FREE_COUNT
    public static final java.lang.String FREE_BYTES
    public static final java.lang.String SOFT_CAP
    public static final java.lang.String HARD_CAP
com.lidroid.xutils.bitmap.BitmapDisplayConfig
    public void <init>()
    public com.lidroid.xutils.bitmap.core.BitmapSize getBitmapMaxSize()
    public void setBitmapMaxSize(com.lidroid.xutils.bitmap.core.BitmapSize)
    public android.view.animation.Animation getAnimation()
    public void setAnimation(android.view.animation.Animation)
    public android.graphics.drawable.Drawable getLoadingDrawable()
    public void setLoadingDrawable(android.graphics.drawable.Drawable)
    public void setLoadFailedDrawable(android.graphics.drawable.Drawable)
    public boolean isAutoRotation()
    public void setAutoRotation(boolean)
    public boolean isShowOriginal()
    public void setShowOriginal(boolean)
    public android.graphics.Bitmap$Config getBitmapConfig()
    public void setBitmapConfig(android.graphics.Bitmap$Config)
    public com.lidroid.xutils.bitmap.factory.BitmapFactory getBitmapFactory()
    public void setBitmapFactory(com.lidroid.xutils.bitmap.factory.BitmapFactory)
    public com.lidroid.xutils.task.Priority getPriority()
    public void setPriority(com.lidroid.xutils.task.Priority)
    public java.lang.String toString()
    public com.lidroid.xutils.bitmap.BitmapDisplayConfig cloneNew()
    private com.lidroid.xutils.bitmap.core.BitmapSize bitmapMaxSize
    private android.view.animation.Animation animation
    private android.graphics.drawable.Drawable loadingDrawable
    private android.graphics.drawable.Drawable loadFailedDrawable
    private boolean autoRotation
    private boolean showOriginal
    private android.graphics.Bitmap$Config bitmapConfig
    private com.lidroid.xutils.bitmap.factory.BitmapFactory bitmapFactory
    private com.lidroid.xutils.task.Priority priority
com.squareup.picasso.RemoteViewsAction$RemoteViewsTarget
org.codehaus.jackson.io.InputDecorator
    public void <init>()
    public abstract java.io.InputStream decorate(org.codehaus.jackson.io.IOContext,java.io.InputStream)
    public abstract java.io.InputStream decorate(org.codehaus.jackson.io.IOContext,byte[],int,int)
com.facebook.imagepipeline.cache.BitmapMemoryCacheTrimStrategy
    public double getTrimRatio(com.facebook.common.memory.MemoryTrimType)
    private static final java.lang.String TAG
org.codehaus.jackson.map.deser.ValueInstantiator
    public org.codehaus.jackson.map.introspect.AnnotatedWithParams getWithArgsCreator()
org.codehaus.jackson.map.ser.impl.JsonSerializerMap$Bucket
com.lidroid.xutils.bitmap.BitmapGlobalConfig$1
okhttp3.RequestBody$2
okhttp3.Cache$CacheResponseBody$1
org.codehaus.jackson.node.MissingNode
com.facebook.imagepipeline.memory.Bucket
    public int getInUseCount()
    private static final java.lang.String TAG
org.codehaus.jackson.impl.Utf8Generator
net.lemonsoft.lemonbubble.enums.LemonBubbleLayoutStyle
    public int getValue()
com.example.administrator.igoushop_app_test.http.OKManager$7
okhttp3.MediaType
    public java.lang.String type()
    public java.lang.String subtype()
    public java.nio.charset.Charset charset()
    private static final java.lang.String TOKEN
    private static final java.lang.String QUOTED
org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter
com.facebook.imagepipeline.cache.CountingLruMap
    synchronized java.util.ArrayList getKeys()
    synchronized java.util.ArrayList getValues()
    public synchronized java.util.ArrayList getMatchingEntries(com.android.internal.util.Predicate)
    public synchronized boolean contains(java.lang.Object)
    public synchronized java.util.ArrayList removeAll(com.android.internal.util.Predicate)
    public synchronized java.util.ArrayList clear()
org.codehaus.jackson.map.deser.BeanDeserializerFactory$ConfigImpl
    public org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers)
    public org.codehaus.jackson.map.DeserializerFactory$Config withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers)
    public org.codehaus.jackson.map.DeserializerFactory$Config withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier)
    public org.codehaus.jackson.map.DeserializerFactory$Config withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver)
    public org.codehaus.jackson.map.DeserializerFactory$Config withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators)
    public boolean hasDeserializers()
org.codehaus.jackson.map.ext.CoreXMLSerializers$XMLGregorianCalendarSerializer
com.lidroid.xutils.view.annotation.event.OnGroupClick
org.codehaus.jackson.map.ser.StdSerializers$SerializableWithTypeSerializer
org.codehaus.jackson.map.deser.std.MapDeserializer
    protected void <init>(org.codehaus.jackson.type.JavaType,java.lang.reflect.Constructor,org.codehaus.jackson.map.KeyDeserializer,org.codehaus.jackson.map.JsonDeserializer,org.codehaus.jackson.map.TypeDeserializer)
    protected void <init>(org.codehaus.jackson.map.deser.std.MapDeserializer)
    public org.codehaus.jackson.type.JavaType getContentType()
    public org.codehaus.jackson.type.JavaType getValueType()
com.facebook.drawee.backends.pipeline.R$attr
com.facebook.drawee.backends.pipeline.BuildConfig
com.facebook.imagepipeline.cache.BufferedDiskCache$4
com.facebook.imagepipeline.core.ImagePipelineConfig
    public com.facebook.imagepipeline.bitmaps.PlatformBitmapFactory getPlatformBitmapFactory()
com.cjj.R$layout
com.nineoldandroids.animation.TimeAnimator
okio.Buffer$1
org.codehaus.jackson.util.TokenBuffer$Parser
    public void setCodec(org.codehaus.jackson.ObjectCodec)
    public org.codehaus.jackson.JsonToken peekNextToken()
    public boolean isClosed()
    public org.codehaus.jackson.JsonStreamContext getParsingContext()
org.codehaus.jackson.map.ser.std.ScalarSerializerBase
    public void serializeWithType(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
com.facebook.common.executors.HandlerExecutorServiceImpl
    public void quit()
com.lidroid.xutils.db.sqlite.Selector
org.codehaus.jackson.map.ser.std.StdKeySerializer
    public void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
com.google.gson.internal.bind.TypeAdapters
    private void <init>()
    public static com.google.gson.TypeAdapterFactory newFactory(com.google.gson.reflect.TypeToken,com.google.gson.TypeAdapter)
okhttp3.internal.http.StreamAllocation
    public okhttp3.internal.http.HttpStream stream()
    public void cancel()
org.codehaus.jackson.map.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter
org.codehaus.jackson.map.jsontype.TypeIdResolver
    public abstract java.lang.String idFromValue(java.lang.Object)
    public abstract org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism()
okhttp3.CertificatePinner$Builder
    public varargs okhttp3.CertificatePinner$Builder add(java.lang.String,java.lang.String[])
com.facebook.imagepipeline.memory.NativeMemoryChunk
    private static final java.lang.String TAG
com.lidroid.xutils.http.ResponseStream
com.facebook.imagepipeline.webp.WebPImage
    void <init>(long)
    public static com.facebook.imagepipeline.webp.WebPImage create(byte[])
    private static native com.facebook.imagepipeline.webp.WebPImage nativeCreateFromDirectByteBuffer(java.nio.ByteBuffer)
    private native int nativeGetWidth()
    private native int nativeGetHeight()
    private native int nativeGetDuration()
    private native int nativeGetFrameCount()
    private native int[] nativeGetFrameDurations()
    private native int nativeGetLoopCount()
    private native com.facebook.imagepipeline.webp.WebPFrame nativeGetFrame(int)
    private native int nativeGetSizeInBytes()
    private native void nativeDispose()
    private native void nativeFinalize()
    protected void finalize()
    public void dispose()
    public int getWidth()
    public int getHeight()
    public int getFrameCount()
    public int getDuration()
    public int[] getFrameDurations()
    public int getLoopCount()
    public com.facebook.imagepipeline.webp.WebPFrame getFrame(int)
    public int getSizeInBytes()
    public boolean doesRenderSupportScaling()
    public com.facebook.imagepipeline.animated.base.AnimatedDrawableFrameInfo getFrameInfo(int)
    public synthetic bridge com.facebook.imagepipeline.animated.base.AnimatedImageFrame getFrame(int)
    private long mNativeContext
org.codehaus.jackson.map.ser.impl.SerializerCache
    public org.codehaus.jackson.map.ser.impl.ReadOnlyClassToSerializerMap getReadOnlyLookupMap()
    public synchronized int size()
    public org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(java.lang.Class)
    public org.codehaus.jackson.map.JsonSerializer untypedValueSerializer(org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.map.JsonSerializer typedValueSerializer(org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.map.JsonSerializer typedValueSerializer(java.lang.Class)
    public void addTypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer)
    public void addTypedSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer)
    public void addAndResolveNonTypedSerializer(java.lang.Class,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.SerializerProvider)
    public void addAndResolveNonTypedSerializer(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.SerializerProvider)
    public synchronized void flush()
com.facebook.imagepipeline.datasource.ListDataSource$InternalDataSubscriber
com.facebook.drawee.BuildConfig
org.codehaus.jackson.map.ser.impl.PropertySerializerMap
com.facebook.datasource.BaseDataSubscriber
    public void onProgressUpdate(com.facebook.datasource.DataSource)
com.lidroid.xutils.util.IOUtils
com.facebook.binaryresource.BinaryResource
    public abstract byte[] read()
org.codehaus.jackson.node.BaseJsonNode
    public org.codehaus.jackson.JsonNode findValue(java.lang.String)
    public final org.codehaus.jackson.JsonNode findPath(java.lang.String)
    public org.codehaus.jackson.node.ObjectNode findParent(java.lang.String)
    public java.util.List findValues(java.lang.String,java.util.List)
    public java.util.List findValuesAsText(java.lang.String,java.util.List)
    public java.util.List findParents(java.lang.String,java.util.List)
    public org.codehaus.jackson.JsonParser traverse()
    public abstract org.codehaus.jackson.JsonToken asToken()
    public org.codehaus.jackson.JsonParser$NumberType getNumberType()
    public abstract void serialize(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public abstract void serializeWithType(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider,org.codehaus.jackson.map.TypeSerializer)
    public synthetic bridge org.codehaus.jackson.JsonNode findParent(java.lang.String)
com.facebook.common.internal.ByteStreams$FastByteArrayOutputStream
de.hdodenhof.circleimageview.R
android.support.design.widget.StateListAnimator
    android.view.animation.Animation getRunningAnimation()
    java.util.ArrayList getTuples()
org.codehaus.jackson.map.DeserializerFactory
    public abstract org.codehaus.jackson.map.DeserializerFactory$Config getConfig()
    public abstract org.codehaus.jackson.map.DeserializerFactory withConfig(org.codehaus.jackson.map.DeserializerFactory$Config)
    public final org.codehaus.jackson.map.DeserializerFactory withAdditionalDeserializers(org.codehaus.jackson.map.Deserializers)
    public final org.codehaus.jackson.map.DeserializerFactory withAdditionalKeyDeserializers(org.codehaus.jackson.map.KeyDeserializers)
    public final org.codehaus.jackson.map.DeserializerFactory withDeserializerModifier(org.codehaus.jackson.map.deser.BeanDeserializerModifier)
    public final org.codehaus.jackson.map.DeserializerFactory withAbstractTypeResolver(org.codehaus.jackson.map.AbstractTypeResolver)
    public final org.codehaus.jackson.map.DeserializerFactory withValueInstantiators(org.codehaus.jackson.map.deser.ValueInstantiators)
    public abstract org.codehaus.jackson.type.JavaType mapAbstractType(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.type.JavaType)
    public abstract org.codehaus.jackson.map.deser.ValueInstantiator findValueInstantiator(org.codehaus.jackson.map.DeserializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription)
org.codehaus.jackson.util.InternCache
    private static final int MAX_ENTRIES
org.codehaus.jackson.map.type.SimpleType
    protected void <init>(java.lang.Class,java.lang.String[],org.codehaus.jackson.type.JavaType[])
    public static org.codehaus.jackson.map.type.SimpleType construct(java.lang.Class)
    public org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class)
    public org.codehaus.jackson.map.type.SimpleType withContentValueHandler(java.lang.Object)
    public java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)
    public java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder)
    public synthetic bridge org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object)
com.facebook.imagepipeline.memory.BitmapCounter
    public synchronized int getCount()
    public synchronized long getSize()
    public java.util.List associateBitmapsWithBitmapCounter(java.util.List)
org.codehaus.jackson.map.ser.AnyGetterWriter
org.codehaus.jackson.map.ser.std.StdArraySerializers$StringArraySerializer
org.codehaus.jackson.node.NodeCursor$Array
com.google.gson.internal.bind.util.ISO8601Utils
    public void <init>()
    public static java.lang.String format(java.util.Date)
    public static java.lang.String format(java.util.Date,boolean)
    public static java.lang.String format(java.util.Date,boolean,java.util.TimeZone)
    private static void padInt(java.lang.StringBuilder,int,int)
    private static final java.lang.String UTC_ID
okio.RealBufferedSink$1
android.support.annotation.WorkerThread
com.facebook.imagepipeline.producers.ThrottlingProducer
    static final java.lang.String PRODUCER_NAME
okhttp3.internal.http.HttpDate
    private void <init>()
    public static final long MAX_DATE
com.facebook.imagepipeline.nativecode.JpegTranscoder
    public void <init>()
    public static final int MIN_QUALITY
    public static final int MAX_QUALITY
    public static final int MIN_SCALE_NUMERATOR
    public static final int MAX_SCALE_NUMERATOR
    public static final int SCALE_DENOMINATOR
com.lidroid.xutils.util.OtherUtils
    private void <init>()
    public static java.lang.String getUserAgent(android.content.Context)
    public static java.lang.String getDiskCacheDir(android.content.Context,java.lang.String)
    public static long getAvailableSpace(java.io.File)
    public static boolean isSupportRange(org.apache.http.HttpResponse)
    public static java.lang.String getFileNameFromHttpResponse(org.apache.http.HttpResponse)
    public static java.nio.charset.Charset getCharsetFromHttpRequest(org.apache.http.client.methods.HttpRequestBase)
    public static long sizeOfString(java.lang.String,java.lang.String)
    public static java.lang.String getSubString(java.lang.String,int,int)
    public static java.lang.StackTraceElement getCurrentStackTraceElement()
    public static void trustAllHttpsURLConnection()
    private static final int STRING_BUFFER_LENGTH
    private static javax.net.ssl.SSLSocketFactory sslSocketFactory
org.codehaus.jackson.map.util.Comparators
com.facebook.imagepipeline.producers.LocalExifThumbnailProducer
    static final java.lang.String PRODUCER_NAME
    static final java.lang.String CREATED_THUMBNAIL
bolts.AppLinkNavigation
com.google.gson.stream.JsonScope
com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder
    public com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder setForceKeepAllFramesInMemory(boolean)
    public com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder setAllowPrefetching(boolean)
    public com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder setMaximumBytes(int)
    public com.facebook.imagepipeline.animated.base.AnimatedDrawableOptionsBuilder setEnableDebugging(boolean)
com.facebook.cache.disk.DiskCacheConfig$Builder
    public com.facebook.cache.disk.DiskCacheConfig$Builder setVersion(int)
    public com.facebook.cache.disk.DiskCacheConfig$Builder setBaseDirectoryName(java.lang.String)
    public com.facebook.cache.disk.DiskCacheConfig$Builder setBaseDirectoryPath(java.io.File)
    public com.facebook.cache.disk.DiskCacheConfig$Builder setBaseDirectoryPathSupplier(com.facebook.common.internal.Supplier)
    public com.facebook.cache.disk.DiskCacheConfig$Builder setMaxCacheSize(long)
    public com.facebook.cache.disk.DiskCacheConfig$Builder setMaxCacheSizeOnLowDiskSpace(long)
    public com.facebook.cache.disk.DiskCacheConfig$Builder setMaxCacheSizeOnVeryLowDiskSpace(long)
    public com.facebook.cache.disk.DiskCacheConfig$Builder setEntryEvictionComparatorSupplier(com.facebook.cache.disk.EntryEvictionComparatorSupplier)
    public com.facebook.cache.disk.DiskCacheConfig$Builder setCacheErrorLogger(com.facebook.cache.common.CacheErrorLogger)
    public com.facebook.cache.disk.DiskCacheConfig$Builder setCacheEventListener(com.facebook.cache.common.CacheEventListener)
    public com.facebook.cache.disk.DiskCacheConfig$Builder setDiskTrimmableRegistry(com.facebook.common.disk.DiskTrimmableRegistry)
com.daimajia.slider.library.Tricks.ViewPagerEx$SimpleOnPageChangeListener
org.codehaus.jackson.JsonNode
    public boolean isValueNode()
    public boolean isContainerNode()
    public boolean isMissingNode()
    public boolean isArray()
    public boolean isObject()
    public boolean isPojo()
    public boolean isNumber()
    public boolean isIntegralNumber()
    public boolean isFloatingPointNumber()
    public boolean isInt()
    public boolean isLong()
    public boolean isDouble()
    public boolean isBigDecimal()
    public boolean isBigInteger()
    public boolean isTextual()
    public boolean isBoolean()
    public boolean isNull()
    public boolean isBinary()
    public abstract org.codehaus.jackson.JsonToken asToken()
    public abstract org.codehaus.jackson.JsonParser$NumberType getNumberType()
    public java.lang.String getTextValue()
    public byte[] getBinaryValue()
    public boolean getBooleanValue()
    public java.lang.Number getNumberValue()
    public int getIntValue()
    public long getLongValue()
    public double getDoubleValue()
    public java.math.BigDecimal getDecimalValue()
    public java.math.BigInteger getBigIntegerValue()
    public org.codehaus.jackson.JsonNode get(int)
    public org.codehaus.jackson.JsonNode get(java.lang.String)
    public int asInt()
    public int asInt(int)
    public long asLong()
    public long asLong(long)
    public double asDouble()
    public double asDouble(double)
    public boolean asBoolean()
    public boolean asBoolean(boolean)
    public java.lang.String getValueAsText()
    public int getValueAsInt()
    public int getValueAsInt(int)
    public long getValueAsLong()
    public long getValueAsLong(long)
    public double getValueAsDouble()
    public double getValueAsDouble(double)
    public boolean getValueAsBoolean()
    public boolean getValueAsBoolean(boolean)
    public boolean has(java.lang.String)
    public boolean has(int)
    public abstract org.codehaus.jackson.JsonNode findValue(java.lang.String)
    public final java.util.List findValues(java.lang.String)
    public final java.util.List findValuesAsText(java.lang.String)
    public abstract org.codehaus.jackson.JsonNode findPath(java.lang.String)
    public abstract org.codehaus.jackson.JsonNode findParent(java.lang.String)
    public final java.util.List findParents(java.lang.String)
    public abstract java.util.List findValues(java.lang.String,java.util.List)
    public abstract java.util.List findValuesAsText(java.lang.String,java.util.List)
    public abstract java.util.List findParents(java.lang.String,java.util.List)
    public int size()
    public java.util.Iterator getFieldNames()
    public java.util.Iterator getFields()
    public abstract org.codehaus.jackson.JsonNode path(java.lang.String)
    public final org.codehaus.jackson.JsonNode getPath(java.lang.String)
    public abstract org.codehaus.jackson.JsonNode path(int)
    public final org.codehaus.jackson.JsonNode getPath(int)
    public org.codehaus.jackson.JsonNode with(java.lang.String)
    public abstract org.codehaus.jackson.JsonParser traverse()
org.codehaus.jackson.schema.JsonSchema
com.cjj.R$string
org.codehaus.jackson.JsonParser$Feature
    public boolean enabledIn(int)
okhttp3.Request$Builder
    public okhttp3.Request$Builder url(java.net.URL)
    public okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)
    public okhttp3.Request$Builder headers(okhttp3.Headers)
    public okhttp3.Request$Builder cacheControl(okhttp3.CacheControl)
    public okhttp3.Request$Builder get()
    public okhttp3.Request$Builder head()
    public okhttp3.Request$Builder delete(okhttp3.RequestBody)
    public okhttp3.Request$Builder delete()
    public okhttp3.Request$Builder put(okhttp3.RequestBody)
    public okhttp3.Request$Builder patch(okhttp3.RequestBody)
    public okhttp3.Request$Builder tag(java.lang.Object)
com.facebook.imagepipeline.cache.CountingMemoryCache
    public com.facebook.common.references.CloseableReference reuse(java.lang.Object)
    public int removeAll(com.android.internal.util.Predicate)
    public void clear()
    public synchronized boolean contains(com.android.internal.util.Predicate)
    public void trim(com.facebook.common.memory.MemoryTrimType)
    public synchronized int getCount()
    public synchronized int getSizeInBytes()
    public synchronized int getEvictionQueueCount()
    public synchronized int getEvictionQueueSizeInBytes()
com.lidroid.xutils.view.annotation.event.OnProgressChanged
org.codehaus.jackson.map.ext.JodaDeserializers
com.facebook.imagepipeline.image.CloseableImage
    private static final java.lang.String TAG
org.codehaus.jackson.util.CharTypes
    public void <init>()
    public static final int[] getInputCodeUtf8()
    public static final int[] getInputCodeUtf8JsNames()
    public static final int[] getInputCodeComment()
    public static final int[] get7BitOutputEscapes()
    public static char[] copyHexChars()
    public static byte[] copyHexBytes()
com.lidroid.xutils.http.client.multipart.content.ContentDescriptor
org.codehaus.jackson.map.jsontype.impl.AsArrayTypeDeserializer
    public void <init>(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.jsontype.TypeIdResolver,org.codehaus.jackson.map.BeanProperty)
com.facebook.imagepipeline.core.ImagePipeline$1
com.facebook.imagepipeline.producers.PostprocessorProducer
    static final java.lang.String NAME
    static final java.lang.String POSTPROCESSOR
butterknife.OnTouch
    public abstract int[] value()
com.squareup.picasso.AssetBitmapHunter
    protected static final java.lang.String ANDROID_ASSET
okio.RealBufferedSink
    static synthetic boolean access$000(okio.RealBufferedSink)
    public okio.BufferedSink writeUtf8(java.lang.String,int,int)
    public okio.BufferedSink writeUtf8CodePoint(int)
    public okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset)
    public okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset)
    public okio.BufferedSink write(byte[],int,int)
    public okio.BufferedSink write(okio.Source,long)
    public okio.BufferedSink writeShortLe(int)
    public okio.BufferedSink writeIntLe(int)
    public okio.BufferedSink writeLong(long)
    public okio.BufferedSink writeLongLe(long)
    public okio.BufferedSink writeDecimalLong(long)
    public java.io.OutputStream outputStream()
com.squareup.picasso.MarkableInputStream
    private static final int DEFAULT_BUFFER_SIZE
okio.BufferedSink
    public abstract okio.BufferedSink write(byte[],int,int)
    public abstract okio.BufferedSink write(okio.Source,long)
    public abstract okio.BufferedSink writeUtf8(java.lang.String,int,int)
    public abstract okio.BufferedSink writeUtf8CodePoint(int)
    public abstract okio.BufferedSink writeString(java.lang.String,java.nio.charset.Charset)
    public abstract okio.BufferedSink writeString(java.lang.String,int,int,java.nio.charset.Charset)
    public abstract okio.BufferedSink writeShortLe(int)
    public abstract okio.BufferedSink writeIntLe(int)
    public abstract okio.BufferedSink writeLong(long)
    public abstract okio.BufferedSink writeLongLe(long)
    public abstract okio.BufferedSink writeDecimalLong(long)
    public abstract java.io.OutputStream outputStream()
android.support.annotation.RequiresPermission$Read
com.facebook.imagepipeline.memory.SharedByteArray$1
android.support.annotation.StringRes
com.lidroid.xutils.bitmap.core.BitmapCache$MemoryCacheKey
com.lidroid.xutils.cache.LruDiskCache$StrictLineReader$1
com.nineoldandroids.animation.PropertyValuesHolder$IntPropertyValuesHolder
    public void <init>(java.lang.String,com.nineoldandroids.animation.IntKeyframeSet)
    public void <init>(com.nineoldandroids.util.Property,com.nineoldandroids.animation.IntKeyframeSet)
com.google.gson.internal.$Gson$Preconditions
    private void <init>()
com.facebook.common.internal.Closeables
    public static void closeQuietly(java.io.Reader)
com.google.gson.internal.Streams$AppendableWriter
org.codehaus.jackson.map.ext.JodaDeserializers$JodaDeserializer
android.support.design.widget.ViewUtilsLollipop
    void <init>()
com.facebook.imagepipeline.memory.BasePool$Counter
    public void reset()
    private static final java.lang.String TAG
org.codehaus.jackson.map.type.CollectionLikeType
    protected void <init>(java.lang.Class,org.codehaus.jackson.type.JavaType)
    public static org.codehaus.jackson.map.type.CollectionLikeType construct(java.lang.Class,org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.type.JavaType widenContentsBy(java.lang.Class)
    public org.codehaus.jackson.map.type.CollectionLikeType withContentValueHandler(java.lang.Object)
    public java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)
    public java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder)
    public synthetic bridge org.codehaus.jackson.type.JavaType withContentValueHandler(java.lang.Object)
android.support.design.widget.TabLayout$TabGravity
com.facebook.cache.common.WriterCallbacks$1
okhttp3.Cache$1
bolts.MeasurementEvent
okio.Timeout
    public final okio.Timeout deadline(long,java.util.concurrent.TimeUnit)
android.support.annotation.StyleableRes
android.support.design.widget.Snackbar
    private void <init>(android.view.ViewGroup)
    public static android.support.design.widget.Snackbar make(android.view.View,java.lang.CharSequence,int)
    public static android.support.design.widget.Snackbar make(android.view.View,int,int)
    private static android.view.ViewGroup findSuitableParent(android.view.View)
    public android.support.design.widget.Snackbar setAction(int,android.view.View$OnClickListener)
    public android.support.design.widget.Snackbar setAction(java.lang.CharSequence,android.view.View$OnClickListener)
    public android.support.design.widget.Snackbar setActionTextColor(android.content.res.ColorStateList)
    public android.support.design.widget.Snackbar setActionTextColor(int)
    public android.support.design.widget.Snackbar setText(java.lang.CharSequence)
    public android.support.design.widget.Snackbar setText(int)
    public android.support.design.widget.Snackbar setDuration(int)
    public int getDuration()
    public android.view.View getView()
    public void show()
    public void dismiss()
    public android.support.design.widget.Snackbar setCallback(android.support.design.widget.Snackbar$Callback)
    public boolean isShown()
    private final android.content.Context mContext
    private int mDuration
    public static final int LENGTH_INDEFINITE
    public static final int LENGTH_SHORT
    public static final int LENGTH_LONG
    static final int ANIMATION_DURATION
    static final int ANIMATION_FADE_DURATION
    private static final int MSG_SHOW
    private static final int MSG_DISMISS
com.cjj.R$anim
com.google.gson.stream.JsonReader
    private static final long MIN_INCOMPLETE_INTEGER
    private static final int PEEKED_NONE
    private static final int PEEKED_BEGIN_OBJECT
    private static final int PEEKED_END_OBJECT
    private static final int PEEKED_BEGIN_ARRAY
    private static final int PEEKED_END_ARRAY
    private static final int PEEKED_TRUE
    private static final int PEEKED_FALSE
    private static final int PEEKED_NULL
    private static final int PEEKED_SINGLE_QUOTED
    private static final int PEEKED_DOUBLE_QUOTED
    private static final int PEEKED_UNQUOTED
    private static final int PEEKED_BUFFERED
    private static final int PEEKED_SINGLE_QUOTED_NAME
    private static final int PEEKED_DOUBLE_QUOTED_NAME
    private static final int PEEKED_UNQUOTED_NAME
    private static final int PEEKED_LONG
    private static final int PEEKED_NUMBER
    private static final int PEEKED_EOF
    private static final int NUMBER_CHAR_NONE
    private static final int NUMBER_CHAR_SIGN
    private static final int NUMBER_CHAR_DIGIT
    private static final int NUMBER_CHAR_DECIMAL
    private static final int NUMBER_CHAR_FRACTION_DIGIT
    private static final int NUMBER_CHAR_EXP_E
    private static final int NUMBER_CHAR_EXP_SIGN
    private static final int NUMBER_CHAR_EXP_DIGIT
android.support.annotation.AnimatorRes
org.codehaus.jackson.map.module.SimpleValueInstantiators
okhttp3.internal.tls.CertificateChainCleaner
    private static final int MAX_SIGNERS
com.nineoldandroids.animation.AnimatorListenerAdapter
com.google.gson.JsonElement
    abstract com.google.gson.JsonElement deepCopy()
    public com.google.gson.JsonNull getAsJsonNull()
    public boolean getAsBoolean()
    java.lang.Boolean getAsBooleanWrapper()
    public java.lang.Number getAsNumber()
    public double getAsDouble()
    public float getAsFloat()
    public long getAsLong()
    public int getAsInt()
    public byte getAsByte()
    public char getAsCharacter()
    public java.math.BigDecimal getAsBigDecimal()
    public java.math.BigInteger getAsBigInteger()
    public short getAsShort()
com.lidroid.xutils.http.client.multipart.MinimalFieldHeader
com.google.gson.GsonBuilder
    public com.google.gson.GsonBuilder setVersion(double)
    public varargs com.google.gson.GsonBuilder excludeFieldsWithModifiers(int[])
    public com.google.gson.GsonBuilder generateNonExecutableJson()
    public com.google.gson.GsonBuilder excludeFieldsWithoutExposeAnnotation()
    public com.google.gson.GsonBuilder serializeNulls()
    public com.google.gson.GsonBuilder enableComplexMapKeySerialization()
    public com.google.gson.GsonBuilder disableInnerClassSerialization()
    public com.google.gson.GsonBuilder setLongSerializationPolicy(com.google.gson.LongSerializationPolicy)
    public com.google.gson.GsonBuilder setFieldNamingPolicy(com.google.gson.FieldNamingPolicy)
    public com.google.gson.GsonBuilder setFieldNamingStrategy(com.google.gson.FieldNamingStrategy)
    public varargs com.google.gson.GsonBuilder setExclusionStrategies(com.google.gson.ExclusionStrategy[])
    public com.google.gson.GsonBuilder addSerializationExclusionStrategy(com.google.gson.ExclusionStrategy)
    public com.google.gson.GsonBuilder addDeserializationExclusionStrategy(com.google.gson.ExclusionStrategy)
    public com.google.gson.GsonBuilder setPrettyPrinting()
    public com.google.gson.GsonBuilder setLenient()
    public com.google.gson.GsonBuilder disableHtmlEscaping()
    public com.google.gson.GsonBuilder setDateFormat(int)
    public com.google.gson.GsonBuilder setDateFormat(int,int)
    public com.google.gson.GsonBuilder registerTypeAdapter(java.lang.reflect.Type,java.lang.Object)
    public com.google.gson.GsonBuilder registerTypeAdapterFactory(com.google.gson.TypeAdapterFactory)
    public com.google.gson.GsonBuilder registerTypeHierarchyAdapter(java.lang.Class,java.lang.Object)
    public com.google.gson.GsonBuilder serializeSpecialFloatingPointValues()
com.lidroid.xutils.db.converter.SqlDateColumnConverter
com.lidroid.xutils.bitmap.core.BitmapSize
okhttp3.Request
    public java.util.List headers(java.lang.String)
    public java.lang.Object tag()
    private volatile java.net.URI javaNetUri
com.daimajia.swipe.implments.SwipeItemMangerImpl
    public abstract void initialize(android.view.View,int)
    public abstract void updateConvertView(android.view.View,int)
    public abstract void bindView(android.view.View,int)
org.codehaus.jackson.JsonToken
    public byte[] asByteArray()
org.codehaus.jackson.map.ser.std.IndexedStringListSerializer
org.codehaus.jackson.impl.ByteSourceBootstrapper$1
org.codehaus.jackson.map.ser.std.SerializableWithTypeSerializer
com.facebook.common.statfs.StatFsHelper
    public void resetStats()
org.codehaus.jackson.map.ser.std.EnumSetSerializer
com.nineoldandroids.view.ViewPropertyAnimatorHC
org.codehaus.jackson.map.jsontype.impl.ClassNameIdResolver
    public org.codehaus.jackson.annotate.JsonTypeInfo$Id getMechanism()
    public void registerSubtype(java.lang.Class,java.lang.String)
    public java.lang.String idFromValue(java.lang.Object)
com.example.administrator.igoushop_app_test.R$integer
org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty
    public org.codehaus.jackson.map.AnnotationIntrospector$ReferenceProperty$Type getType()
com.daimajia.swipe.R$attr
com.nineoldandroids.animation.AnimatorSet$AnimatorSetListener
org.codehaus.jackson.map.type.TypeFactory
    protected void <init>(org.codehaus.jackson.map.type.TypeParser,org.codehaus.jackson.map.type.TypeModifier[])
    public static java.lang.Class rawClass(java.lang.reflect.Type)
    public static org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type)
    public static org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,java.lang.Class)
    public static org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,org.codehaus.jackson.type.JavaType)
    public static org.codehaus.jackson.type.JavaType type(java.lang.reflect.Type,org.codehaus.jackson.map.type.TypeBindings)
    public static org.codehaus.jackson.type.JavaType type(org.codehaus.jackson.type.TypeReference)
    public static org.codehaus.jackson.type.JavaType arrayType(java.lang.Class)
    public static org.codehaus.jackson.type.JavaType arrayType(org.codehaus.jackson.type.JavaType)
    public static org.codehaus.jackson.type.JavaType collectionType(java.lang.Class,java.lang.Class)
    public static org.codehaus.jackson.type.JavaType collectionType(java.lang.Class,org.codehaus.jackson.type.JavaType)
    public static org.codehaus.jackson.type.JavaType mapType(java.lang.Class,java.lang.Class,java.lang.Class)
    public static org.codehaus.jackson.type.JavaType mapType(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType)
    public static varargs org.codehaus.jackson.type.JavaType parametricType(java.lang.Class,java.lang.Class[])
    public static varargs org.codehaus.jackson.type.JavaType parametricType(java.lang.Class,org.codehaus.jackson.type.JavaType[])
    public static org.codehaus.jackson.type.JavaType specialize(org.codehaus.jackson.type.JavaType,java.lang.Class)
    public static org.codehaus.jackson.type.JavaType fastSimpleType(java.lang.Class)
    public static org.codehaus.jackson.type.JavaType[] findParameterTypes(java.lang.Class,java.lang.Class)
    public static org.codehaus.jackson.type.JavaType[] findParameterTypes(java.lang.Class,java.lang.Class,org.codehaus.jackson.map.type.TypeBindings)
    public static org.codehaus.jackson.type.JavaType[] findParameterTypes(org.codehaus.jackson.type.JavaType,java.lang.Class)
    public static org.codehaus.jackson.type.JavaType fromClass(java.lang.Class)
    public static org.codehaus.jackson.type.JavaType fromTypeReference(org.codehaus.jackson.type.TypeReference)
    public static org.codehaus.jackson.type.JavaType fromType(java.lang.reflect.Type)
    public org.codehaus.jackson.map.type.TypeFactory withModifier(org.codehaus.jackson.map.type.TypeModifier)
    public org.codehaus.jackson.type.JavaType constructType(org.codehaus.jackson.type.TypeReference)
    public org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type,java.lang.Class)
    public org.codehaus.jackson.type.JavaType constructType(java.lang.reflect.Type,org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.map.type.ArrayType constructArrayType(java.lang.Class)
    public org.codehaus.jackson.map.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,java.lang.Class)
    public org.codehaus.jackson.map.type.CollectionLikeType constructCollectionLikeType(java.lang.Class,org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.map.type.MapLikeType constructMapLikeType(java.lang.Class,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.type.JavaType)
    public org.codehaus.jackson.map.type.MapLikeType constructMapLikeType(java.lang.Class,java.lang.Class,java.lang.Class)
    public org.codehaus.jackson.map.type.CollectionType constructRawCollectionType(java.lang.Class)
    public org.codehaus.jackson.map.type.CollectionLikeType constructRawCollectionLikeType(java.lang.Class)
    public org.codehaus.jackson.map.type.MapType constructRawMapType(java.lang.Class)
    public org.codehaus.jackson.map.type.MapLikeType constructRawMapLikeType(java.lang.Class)
    protected org.codehaus.jackson.type.JavaType _resolveVariableViaSubTypes(org.codehaus.jackson.map.type.HierarchicType,java.lang.String,org.codehaus.jackson.map.type.TypeBindings)
com.lidroid.xutils.bitmap.BitmapGlobalConfig$BitmapCacheManagementTask
android.support.annotation.FloatRange
com.nineoldandroids.animation.PropertyValuesHolder$FloatPropertyValuesHolder
    public void <init>(java.lang.String,com.nineoldandroids.animation.FloatKeyframeSet)
    public void <init>(com.nineoldandroids.util.Property,com.nineoldandroids.animation.FloatKeyframeSet)
com.example.administrator.igoushop_app_test.pojos.Address
    public com.example.administrator.igoushop_app_test.pojos.UserInfo getUser()
    public void setUser(com.example.administrator.igoushop_app_test.pojos.UserInfo)
okhttp3.internal.framed.Spdy3
    public okhttp3.Protocol getProtocol()
    static final int TYPE_DATA
    static final int TYPE_SYN_STREAM
    static final int TYPE_SYN_REPLY
    static final int TYPE_RST_STREAM
    static final int TYPE_SETTINGS
    static final int TYPE_PING
    static final int TYPE_GOAWAY
    static final int TYPE_HEADERS
    static final int TYPE_WINDOW_UPDATE
    static final int FLAG_FIN
    static final int FLAG_UNIDIRECTIONAL
    static final int VERSION
com.daimajia.swipe.BuildConfig
com.lidroid.xutils.http.SyncHttpHandler
com.lidroid.xutils.view.ViewFinder
    public void <init>(android.app.Activity)
    public void <init>(android.preference.PreferenceGroup)
    public void <init>(android.preference.PreferenceActivity)
org.codehaus.jackson.map.MappingJsonFactory
    public void <init>()
    public java.lang.String getFormatName()
    public org.codehaus.jackson.format.MatchStrength hasFormat(org.codehaus.jackson.format.InputAccessor)
com.facebook.imageutils.BitmapUtil
    public void <init>()
    public static android.util.Pair decodeDimensions(byte[])
    private static final int DECODE_BUFFER_SIZE
    private static final int POOL_SIZE
    public static final int ALPHA_8_BYTES_PER_PIXEL
    public static final int ARGB_4444_BYTES_PER_PIXEL
    public static final int ARGB_8888_BYTES_PER_PIXEL
    public static final int RGB_565_BYTES_PER_PIXEL
    public static final float MAX_BITMAP_SIZE
org.codehaus.jackson.map.deser.SettableAnyProperty
    public void <init>(org.codehaus.jackson.map.BeanProperty,org.codehaus.jackson.map.introspect.AnnotatedMethod,org.codehaus.jackson.type.JavaType)
    public void setValueDeserializer(org.codehaus.jackson.map.JsonDeserializer)
com.lidroid.xutils.http.client.DefaultSSLSocketFactory
butterknife.OnLongClick
    public abstract int[] value()
org.codehaus.jackson.map.module.SimpleKeyDeserializers
com.lidroid.xutils.db.sqlite.SqlInfoBuilder
com.lidroid.xutils.ViewUtils
    private void <init>()
    public static void inject(android.view.View)
    public static void inject(android.app.Activity)
    public static void inject(android.preference.PreferenceActivity)
    public static void inject(java.lang.Object,android.app.Activity)
    public static void inject(java.lang.Object,android.preference.PreferenceGroup)
    public static void inject(java.lang.Object,android.preference.PreferenceActivity)
com.facebook.imagepipeline.cache.DefaultBitmapMemoryCacheParamsSupplier
    private static final int MAX_CACHE_ENTRIES
    private static final int MAX_EVICTION_QUEUE_SIZE
    private static final int MAX_EVICTION_QUEUE_ENTRIES
    private static final int MAX_CACHE_ENTRY_SIZE
com.lidroid.xutils.http.client.HttpRequest
org.codehaus.jackson.map.annotate.JsonView
    public abstract java.lang.Class[] value()
com.squareup.picasso.RemoteViewsAction$AppWidgetAction
com.nineoldandroids.animation.Animator
    public void start()
    public void cancel()
    public void end()
    public abstract long getStartDelay()
    public abstract void setStartDelay(long)
    public abstract com.nineoldandroids.animation.Animator setDuration(long)
    public abstract long getDuration()
    public abstract void setInterpolator(android.view.animation.Interpolator)
    public abstract boolean isRunning()
    public boolean isStarted()
    public void addListener(com.nineoldandroids.animation.Animator$AnimatorListener)
    public void removeListener(com.nineoldandroids.animation.Animator$AnimatorListener)
    public java.util.ArrayList getListeners()
    public void removeAllListeners()
    public void setupStartValues()
    public void setupEndValues()
    public void setTarget(java.lang.Object)
com.squareup.picasso.Utils$BitmapHoneycombMR1
    private void <init>()
com.example.administrator.igoushop_app_test.R$style
org.codehaus.jackson.ObjectCodec
    public abstract java.lang.Object readValue(org.codehaus.jackson.JsonParser,java.lang.Class)
    public abstract java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference)
    public abstract java.lang.Object readValue(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)
    public abstract org.codehaus.jackson.JsonNode readTree(org.codehaus.jackson.JsonParser)
    public abstract java.util.Iterator readValues(org.codehaus.jackson.JsonParser,java.lang.Class)
    public abstract java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.TypeReference)
    public abstract java.util.Iterator readValues(org.codehaus.jackson.JsonParser,org.codehaus.jackson.type.JavaType)
    public abstract void writeValue(org.codehaus.jackson.JsonGenerator,java.lang.Object)
    public abstract void writeTree(org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.JsonNode)
    public abstract org.codehaus.jackson.JsonNode createObjectNode()
    public abstract org.codehaus.jackson.JsonNode createArrayNode()
    public abstract org.codehaus.jackson.JsonParser treeAsTokens(org.codehaus.jackson.JsonNode)
    public abstract java.lang.Object treeToValue(org.codehaus.jackson.JsonNode,java.lang.Class)
butterknife.Unbinder$1
    public void unbind()
com.facebook.common.internal.ImmutableList
com.facebook.datasource.SimpleDataSource
    public boolean setResult(java.lang.Object,boolean)
    public boolean setResult(java.lang.Object)
    public boolean setProgress(float)
com.facebook.imagepipeline.nativecode.ImagePipelineNativeLoader
    public void <init>()
    public static final java.lang.String DSO_NAME
com.lidroid.xutils.db.sqlite.CursorUtils$FindCacheSequence
com.facebook.common.logging.LoggingDelegate
    public abstract void setMinimumLoggingLevel(int)
    public abstract int getMinimumLoggingLevel()
    public abstract void d(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void i(java.lang.String,java.lang.String,java.lang.Throwable)
    public abstract void log(int,java.lang.String,java.lang.String)
com.daimajia.slider.library.BuildConfig
org.codehaus.jackson.map.ser.std.CalendarSerializer
    public void serialize(java.util.Calendar,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
    public org.codehaus.jackson.JsonNode getSchema(org.codehaus.jackson.map.SerializerProvider,java.lang.reflect.Type)
    public synthetic bridge void serialize(java.lang.Object,org.codehaus.jackson.JsonGenerator,org.codehaus.jackson.map.SerializerProvider)
org.codehaus.jackson.util.JsonParserDelegate
    public void setCodec(org.codehaus.jackson.ObjectCodec)
    public org.codehaus.jackson.JsonParser enable(org.codehaus.jackson.JsonParser$Feature)
    public org.codehaus.jackson.JsonParser disable(org.codehaus.jackson.JsonParser$Feature)
    public boolean isEnabled(org.codehaus.jackson.JsonParser$Feature)
    public void setSchema(org.codehaus.jackson.FormatSchema)
    public boolean canUseSchema(org.codehaus.jackson.FormatSchema)
    public org.codehaus.jackson.Version version()
    public java.lang.Object getInputSource()
    public void close()
    public boolean isClosed()
    public boolean hasCurrentToken()
    public org.codehaus.jackson.JsonToken getLastClearedToken()
    public org.codehaus.jackson.JsonStreamContext getParsingContext()
    public boolean getBooleanValue()
    public org.codehaus.jackson.JsonToken nextToken()
android.support.annotation.LayoutRes
com.nineoldandroids.util.Property
    public static com.nineoldandroids.util.Property of(java.lang.Class,java.lang.Class,java.lang.String)
    public boolean isReadOnly()
    public java.lang.Class getType()
com.facebook.imagepipeline.producers.LocalAssetFetchProducer
    static final java.lang.String PRODUCER_NAME
com.facebook.imagepipeline.producers.SettableProducerContext
    public void setIsPrefetch(boolean)
    public void setIsIntermediateResultExpected(boolean)
    public void setPriority(com.facebook.imagepipeline.common.Priority)
com.squareup.picasso.Picasso$CleanupThread
    void shutdown()
com.squareup.picasso.PicassoExecutorService
    private static final int DEFAULT_THREAD_COUNT
com.squareup.picasso.NetworkBitmapHunter
    static final int DEFAULT_RETRY_COUNT
    private static final int MARKER
org.codehaus.jackson.map.ser.BasicSerializerFactory
    protected static org.codehaus.jackson.type.JavaType modifySecondaryTypesByAnnotation(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType)
    protected static org.codehaus.jackson.map.JsonSerializer findKeySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)
    protected static org.codehaus.jackson.map.JsonSerializer findContentSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)
    public abstract org.codehaus.jackson.map.JsonSerializer createSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)
    public org.codehaus.jackson.map.TypeSerializer createTypeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.BeanProperty)
    public final org.codehaus.jackson.map.JsonSerializer getNullSerializer()
    protected abstract java.lang.Iterable customSerializers()
    public final org.codehaus.jackson.map.JsonSerializer findSerializerByLookup(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean)
    public final org.codehaus.jackson.map.JsonSerializer findSerializerByPrimaryType(org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean)
    public final org.codehaus.jackson.map.JsonSerializer findSerializerByAddonType(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean)
    protected org.codehaus.jackson.map.JsonSerializer findSerializerFromAnnotation(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.map.BeanProperty)
    public org.codehaus.jackson.map.JsonSerializer buildContainerSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean)
    protected org.codehaus.jackson.map.JsonSerializer buildCollectionLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionLikeType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer)
    protected org.codehaus.jackson.map.JsonSerializer buildCollectionSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.CollectionType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer)
    protected org.codehaus.jackson.map.JsonSerializer buildEnumSetSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer)
    protected boolean isIndexedList(java.lang.Class)
    protected org.codehaus.jackson.map.JsonSerializer buildMapLikeSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapLikeType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer)
    protected org.codehaus.jackson.map.JsonSerializer buildMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.MapType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.JsonSerializer,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer)
    protected org.codehaus.jackson.map.JsonSerializer buildEnumMapSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer)
    protected org.codehaus.jackson.map.JsonSerializer buildArraySerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.type.ArrayType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.JsonSerializer)
    protected org.codehaus.jackson.map.JsonSerializer buildIteratorSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean)
    protected org.codehaus.jackson.map.JsonSerializer buildIterableSerializer(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.type.JavaType,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.BeanProperty,boolean)
    protected org.codehaus.jackson.type.JavaType modifyTypeByAnnotation(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.Annotated,org.codehaus.jackson.type.JavaType)
    protected boolean usesStaticTyping(org.codehaus.jackson.map.SerializationConfig,org.codehaus.jackson.map.introspect.BasicBeanDescription,org.codehaus.jackson.map.TypeSerializer,org.codehaus.jackson.map.BeanProperty)
com.facebook.cache.disk.DiskStorageCache$CacheStats
    public synchronized long getCount()
butterknife.BindViews
    public abstract int[] value()
com.lidroid.xutils.view.annotation.event.OnTabChange
org.codehaus.jackson.type.TypeReference
com.example.administrator.igoushop_app_test.R$mipmap
okhttp3.internal.http.Http2xStream
    public void cancel()
com.facebook.common.memory.NoOpMemoryTrimmableRegistry
    static void <clinit>()
com.facebook.imagepipeline.memory.NoOpPoolStatsTracker
    static void <clinit>()
okhttp3.internal.framed.FramedStream$FramedDataSink
    static void <clinit>()
    static final synthetic boolean $assertionsDisabled
com.facebook.common.disk.NoOpDiskTrimmableRegistry
    static void <clinit>()
okhttp3.ConnectionPool
    static final synthetic boolean $assertionsDisabled
org.codehaus.jackson.io.NumberOutput
    private static int MILLION
    private static int BILLION
    private static long TEN_BILLION_L
    private static long THOUSAND_L
    private static long MIN_INT_AS_LONG
    private static long MAX_INT_AS_LONG
com.lidroid.xutils.bitmap.callback.BitmapLoadCallBack
    public abstract void onLoadFailed(android.view.View,java.lang.String,android.graphics.drawable.Drawable)
okhttp3.internal.framed.FramedStream
    static void <clinit>()
    static final synthetic boolean $assertionsDisabled
okhttp3.internal.framed.FramedConnection
    static final synthetic boolean $assertionsDisabled
com.squareup.picasso.RequestCreator
    static void <clinit>()
org.codehaus.jackson.map.DeserializationProblemHandler
com.google.gson.internal.LinkedTreeMap
    static final synthetic boolean $assertionsDisabled
com.daimajia.slider.library.Tricks.ViewPagerEx$Decor
com.lidroid.xutils.util.LogUtils
    static void <clinit>()
    public static boolean allowD
    public static boolean allowI
    public static boolean allowV
    public static boolean allowW
    public static boolean allowWtf
com.facebook.imagepipeline.core.ImagePipelineFactory
    static void <clinit>()
com.facebook.common.executors.UiThreadImmediateExecutorService
    static void <clinit>()
com.facebook.imagepipeline.cache.DefaultCacheKeyFactory
    static void <clinit>()
com.facebook.cache.common.NoOpCacheErrorLogger
    static void <clinit>()
org.codehaus.jackson.map.util.LinkedNode
    public org.codehaus.jackson.map.util.LinkedNode next()
com.facebook.drawee.components.DeferredReleaser
    static void <clinit>()
com.squareup.picasso.AssetBitmapHunter
    static void <clinit>()
okhttp3.internal.framed.FramedStream$FramedDataSource
    static void <clinit>()
    static final synthetic boolean $assertionsDisabled
com.facebook.imagepipeline.cache.NoOpImageCacheStatsTracker
    static void <clinit>()
com.facebook.cache.common.NoOpCacheEventListener
    static void <clinit>()
